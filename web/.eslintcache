[{"C:\\Users\\marce\\adminhabil003\\src\\index.tsx":"1","C:\\Users\\marce\\adminhabil003\\src\\App.tsx":"2","C:\\Users\\marce\\adminhabil003\\src\\routes.tsx":"3","C:\\Users\\marce\\adminhabil003\\src\\pages\\Landing.tsx":"4","C:\\Users\\marce\\adminhabil003\\src\\components\\Sidebar.tsx":"5","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Companies.tsx":"6","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Products.tsx":"7","C:\\Users\\marce\\adminhabil003\\src\\services\\api.ts":"8","C:\\Users\\marce\\adminhabil003\\src\\pages\\Welcome.tsx":"9","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\ControlMap.tsx":"10","C:\\Users\\marce\\adminhabil003\\src\\pages\\Client.tsx":"11","C:\\Users\\marce\\adminhabil003\\src\\pages\\Companie.tsx":"12","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Moderators.tsx":"13","C:\\Users\\marce\\ProjectHabil\\web\\src\\index.tsx":"14","C:\\Users\\marce\\ProjectHabil\\web\\src\\App.tsx":"15","C:\\Users\\marce\\ProjectHabil\\web\\src\\routes.tsx":"16","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Landing.tsx":"17","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Companie.tsx":"18","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\ControlMap.tsx":"19","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx":"20","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx":"21","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Moderators.tsx":"22","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Welcome.tsx":"23","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Client.tsx":"24","C:\\Users\\marce\\ProjectHabil\\web\\src\\services\\api.ts":"25","C:\\Users\\marce\\ProjectHabil\\web\\src\\components\\Sidebar.tsx":"26"},{"size":197,"mtime":1609937727822,"results":"27","hashOfConfig":"28"},{"size":154,"mtime":1609937740368,"results":"29","hashOfConfig":"28"},{"size":1054,"mtime":1613666779485,"results":"30","hashOfConfig":"28"},{"size":1686,"mtime":1613138147588,"results":"31","hashOfConfig":"28"},{"size":1618,"mtime":1613666499495,"results":"32","hashOfConfig":"28"},{"size":6657,"mtime":1617137761136,"results":"33","hashOfConfig":"28"},{"size":3957,"mtime":1613666131173,"results":"34","hashOfConfig":"28"},{"size":285,"mtime":1617138265506,"results":"35","hashOfConfig":"28"},{"size":2482,"mtime":1613656033698,"results":"36","hashOfConfig":"28"},{"size":1791,"mtime":1613649474429,"results":"37","hashOfConfig":"28"},{"size":4046,"mtime":1613665576602,"results":"38","hashOfConfig":"28"},{"size":164,"mtime":1613665736857,"results":"39","hashOfConfig":"28"},{"size":3311,"mtime":1613668580614,"results":"40","hashOfConfig":"28"},{"size":207,"mtime":1617740139763,"results":"41","hashOfConfig":"42"},{"size":164,"mtime":1617740139716,"results":"43","hashOfConfig":"42"},{"size":1054,"mtime":1617740139779,"results":"44","hashOfConfig":"42"},{"size":2333,"mtime":1617812531305,"results":"45","hashOfConfig":"42"},{"size":164,"mtime":1617740139763,"results":"46","hashOfConfig":"42"},{"size":2044,"mtime":1617740139779,"results":"47","hashOfConfig":"42"},{"size":7888,"mtime":1617827035758,"results":"48","hashOfConfig":"42"},{"size":9337,"mtime":1617825454972,"results":"49","hashOfConfig":"42"},{"size":6596,"mtime":1617828886925,"results":"50","hashOfConfig":"42"},{"size":2473,"mtime":1617740139763,"results":"51","hashOfConfig":"42"},{"size":4046,"mtime":1617740139763,"results":"52","hashOfConfig":"42"},{"size":265,"mtime":1617799457781,"results":"53","hashOfConfig":"42"},{"size":1555,"mtime":1617822717722,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"jw503z",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1ahcn9",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\marce\\adminhabil003\\src\\index.tsx",[],["118","119"],"C:\\Users\\marce\\adminhabil003\\src\\App.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\routes.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\pages\\Landing.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\components\\Sidebar.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Companies.tsx",["120","121","122","123"],"import React, { useState, useEffect } from 'react';\r\nimport { FiAlertOctagon, FiCheck, FiCheckCircle, FiAlertCircle, FiXCircle, FiBook } from 'react-icons/fi';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/companies_buttons.css';\r\nimport '../../styles/pages/table.css';\r\n\r\ninterface Company {\r\n  id: number;\r\n  business: string;\r\n  cnpj: string;\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  address: string;\r\n  district: string;\r\n  city: string;\r\n  uf: string;\r\n  keywords: string;\r\n  password: string;\r\n  image: string;\r\n  is_active: string;\r\n}\r\n\r\nfunction Products(){\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active, setActive] = useState('0');\r\n  const [base] = useState('data:image/png;base64');\r\n\r\n  useEffect(() => {\r\n    api.get('companies/all').then(response => {\r\n      setCompanies(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n\r\n  async function handleViewActive(){\r\n    try{\r\n      api.get('companies').then(response => {\r\n        setCompanies(response.data);\r\n        setActive('1');\r\n      });\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleViewCanceled(){\r\n    try{\r\n      api.get('deleted_companies').then(response => {\r\n        setCompanies(response.data);\r\n      })\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleViewInactive(){\r\n    try{\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n        setActive('0');\r\n      });\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleInactive({company}:{company:any}){\r\n    try{\r\n      api.put('companies',{\r\n        id: company.id,\r\n        is_active: 0,\r\n      }).then(() => {\r\n        api.get('companies').then(response => {\r\n          setCompanies(response.data);\r\n        });\r\n      });\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleCanceled({company}:{company:any}){\r\n    try{\r\n      api.put('companies',{\r\n        id: company.id,\r\n        is_active: 2,\r\n      }).then(() => {\r\n        api.delete(`companies/${company.id}`).then(() => {\r\n          api.get('companies').then(response => {\r\n            setCompanies(response.data);\r\n          })\r\n        })\r\n      })\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleActive({company}:{company:any}){\r\n    try{\r\n      api.put('companies',{\r\n        id: company.id,\r\n        is_active: 1,\r\n      }).then(() => {\r\n        api.get('companies').then(response => {\r\n          setCompanies(response.data);\r\n        });\r\n      });\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  function renderButton({company}:{company:any}){\r\n    if(active == \"0\"){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({company})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active == \"1\"){\r\n      return (\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({company})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1>Administração de Empresas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Canceladas</label>\r\n              <button onClick={() => handleViewCanceled()} id=\"button\">\r\n                <FiXCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Empresa</th>\r\n              <th>Ramo</th>\r\n              <th>Palavras-Chaves</th>\r\n              <th>cnpj</th>\r\n              <th>Telefone</th>\r\n              <th>Email</th>\r\n              <th>Endereço</th>\r\n              <th>Bairro</th>\r\n              <th>Cidade</th>\r\n              <th>UF</th>\r\n              <th>Foto</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {companies.map(company => {\r\n              if(company.is_active == active){\r\n                return(\r\n                    <tr key={company.id}>\r\n                    <td>{company.name}</td>\r\n                    <td>{company.business}</td>\r\n                    <td>{company.keywords}</td>\r\n                    <td>{company.cnpj}</td>\r\n                    <td>{company.phone}</td>\r\n                    <td>{company.email}</td>\r\n                    <td>{company.address}</td>\r\n                    <td>{company.district}</td>\r\n                    <td>{company.city}</td>\r\n                    <td>{company.uf}</td>\r\n                    <td onClick={() => {}}><img src={base + ',' + company.image} style={{width: '70%'}} className=\"landingImg\" alt=\"CompreMaisAki\" /></td>\r\n                    <td>\r\n                      {renderButton({company})}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }else{\r\n                return;\r\n              }\r\n            })}\r\n            </tbody>\r\n          </table>\r\n\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Products.tsx",["124","125"],"import React, { useState, useEffect } from 'react';\r\nimport { FiDollarSign, FiLayers, FiBookOpen, FiArrowDownCircle } from 'react-icons/fi';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/card.css';\r\nimport '../../styles/pages/card-columns.css';\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  description: string;\r\n  date: string;\r\n  company_id: number;\r\n  image: string;\r\n  validate: string;\r\n  discount: string;\r\n  is_active: number;\r\n}\r\n\r\nfunction Products(){\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  useEffect(() => {\r\n    api.get('products').then(response => {\r\n      setProducts(response.data);\r\n    });\r\n  }, []);\r\n\r\n  async function handleDelete({product}:{product:any}){\r\n    try{\r\n      let isDelete = window.confirm(`Deseja Rejeitar ${product.name}?`);\r\n      if(isDelete){\r\n        api.delete(`products/${product.id}`).then(() => {\r\n          api.get('products').then(response => {\r\n            setProducts(response.data);\r\n          });\r\n        });\r\n      }\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleViewPerPrice(){\r\n    console.log('Price');\r\n  }\r\n\r\n  async function handleViewPerDesc(){\r\n    console.log('DESC');\r\n  }\r\n\r\n  async function handleViewInactive(){\r\n    console.log('Tester');\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1>Novas Promoções Cadastradas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Últimas</label>\r\n              <button onClick={() => handleViewPerDesc()} id=\"button\">\r\n                <FiLayers size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Empresas</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiBookOpen size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">A-Z</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiArrowDownCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Preço</label>\r\n              <button onClick={() => handleViewPerPrice()} id=\"button\">\r\n                <FiDollarSign size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Produto</th>\r\n              <th>Preco</th>\r\n              <th>Descricao</th>\r\n              <th>Data</th>\r\n              <th>Empresa</th>\r\n              <th>validade</th>\r\n              <th>Desconto</th>\r\n              <th>Imagem</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {products.map(products => {\r\n              if(products){\r\n                return(\r\n                    <tr key={products.id}>\r\n                    <td>{products.name}</td>\r\n                    <td>{products.price}</td>\r\n                    <td>{products.description}</td>\r\n                    <td>{products.date}</td>\r\n                    <td>{products.company_id}</td>\r\n                    <td>{products.validate}</td>\r\n                    <td>{products.discount}</td>\r\n                    <td>placeholder</td>\r\n                  </tr>\r\n                );\r\n              }else{\r\n                return;\r\n              }\r\n            })}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n        \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;","C:\\Users\\marce\\adminhabil003\\src\\services\\api.ts",[],"C:\\Users\\marce\\adminhabil003\\src\\pages\\Welcome.tsx",["126"],"import React, { useState } from 'react';\r\nimport { FiArrowRight } from 'react-icons/fi';\r\nimport { GrUserAdmin } from 'react-icons/gr';\r\n\r\nimport logoImg from '../images/cmatextlogo.png';\r\n\r\nimport '../styles/pages/welcome.css';\r\n\r\nimport qrcode from '../images/qrcode.png';\r\nimport applestore from '../images/appstore.png';\r\nimport googleplay from '../images/googleplay.png';\r\nimport smartphone from '../images/smartphone.png';\r\n\r\nfunction Welcome() {\r\n\r\n  async function handleLogin(){\r\n    try {\r\n      window.location.href = '/login';\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async function handleClient(){\r\n    try {\r\n      window.location.href = '/client';\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-welcome\">\r\n      <div className=\"welcome-wrapper\">\r\n\r\n        <main>\r\n          <img src={logoImg} className=\"landingImg1\" alt=\"CompreMaisAki\" />\r\n          <h1>Bem-Vindo</h1>\r\n          <p>o app que leva</p>\r\n          <p>Nova Santa Rita</p>\r\n          <p>sempre com você.</p>\r\n\r\n          <div className=\"welcome-block\">\r\n\r\n            <div className=\"welcome-block-col\">\r\n              <img src={qrcode} className=\"qrcodeLogo\" alt=\"qrcodeCompreMaisAki\" />\r\n            </div>\r\n            <div className=\"welcome-block-col\">\r\n              <div className=\"welcome-block-col\">\r\n                <img src={applestore} className=\"appstoreLogo\" alt=\"appstoreCompreMaisAki\" />\r\n              </div>\r\n              <div className=\"welcome-block-col\">\r\n                <img src={googleplay} className=\"googleplayLogo\" alt=\"googleplayCompreMaisAki\" />\r\n              </div>\r\n            </div>\r\n          </div>          \r\n\r\n        </main>\r\n\r\n        <div className=\"location\">\r\n          <img src={smartphone} className=\"smartphone\" alt=\"smartphoneCompreMaisAki\" />\r\n        </div>\r\n\r\n        <div className=\"enter-app-container\">\r\n          <div className=\"enter-app-col1\">\r\n            <p className=\"enter-text\">Entrar</p>\r\n            <button type=\"button\" onClick={() => handleClient()} className=\"enter-app\">\r\n              <FiArrowRight size=\"26\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"enter-app-col2\">\r\n            <button type=\"button\" onClick={() => handleLogin()} className=\"enter-app\">\r\n              <GrUserAdmin size=\"26\" color=\"#fff\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Welcome;","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\ControlMap.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\pages\\Client.tsx",["127"],"import React, { useState, useEffect } from 'react';\r\nimport { FiDollarSign, FiLayers, FiBookOpen, FiArrowDownCircle, FiSearch } from 'react-icons/fi';\r\nimport { IoCloseCircleOutline } from 'react-icons/io5';\r\n\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/client.css';\r\nimport '../styles/pages/card.css';\r\nimport '../styles/pages/card-columns.css';\r\n\r\nimport logoCentral from '../images/adaptive-icon.png';\r\n\r\ninterface Companies {\r\n  id: number,\r\n  business: string,\r\n  name: string,\r\n  phone: string,\r\n  email: string,\r\n  address: string,\r\n  images: string,\r\n  companie: any,\r\n}\r\n\r\nfunction Client(){\r\n  const [companies, setCompanies] = useState<Companies[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  async function handleSearch(){\r\n    api.get('companies').then(response => {\r\n      setCompanies(response.data);\r\n    });\r\n  }\r\n\r\n  async function handleViewPerPrice(){\r\n    console.log('Price');\r\n  }\r\n\r\n  async function handleViewPerDesc(){\r\n    console.log('DESC');\r\n  }\r\n\r\n  async function handleViewInactive(){\r\n    console.log('Tester');\r\n  }\r\n\r\n  async function handleCloseApp(){\r\n      try{\r\n        window.location.href = '/';\r\n      }catch(err){\r\n          console.log(err);\r\n      }\r\n  }\r\n\r\n  return(\r\n    <div id=\"client-control-map\">\r\n        <div className=\"close-button-container\">\r\n        <button onClick={() => handleCloseApp()} id=\"button\">\r\n            <IoCloseCircleOutline size=\"26\" />\r\n        </button>\r\n        </div>\r\n      <main>\r\n        <div className=\"client-control-map\">\r\n\r\n          <div className=\"logoCentralContainer\">\r\n              <img src={logoCentral} className=\"logoCentral\" alt=\"CompreMaisAkiAdaptive-Icon\" />\r\n              <div className=\"searchBar\">\r\n                <input type=\"text\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} placeholder=\"Procurar...\" />\r\n                <button onClick={() => handleSearch()}>\r\n                    <FiSearch size=\"26\" />\r\n                </button>\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Últimas</label>\r\n              <button onClick={() => handleViewPerDesc()} id=\"button\">\r\n                <FiLayers size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Empresas</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiBookOpen size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">A-Z</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiArrowDownCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Preço</label>\r\n              <button onClick={() => handleViewPerPrice()} id=\"button\">\r\n                <FiDollarSign size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            \r\n              {companies.map(companie => {\r\n               \r\n                    return(\r\n                     \r\n                        <div key={companie.id} className=\"column\">\r\n                            <div className=\"card\">\r\n                            <h1 className=\"card-title\">{companie.name}</h1>\r\n                            <p className=\"card-price\">R$ {companie.business}</p>\r\n                            <p className=\"card-text\">{companie.email}</p>\r\n                            <p> <button className=\"aprove\" onClick={() => window.location.href = `/companie/:${companie.id}`}>Acessar</button></p>\r\n                            </div>\r\n                        </div>)\r\n                \r\n            })}\r\n\r\n            </div>\r\n        \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Client;","C:\\Users\\marce\\adminhabil003\\src\\pages\\Companie.tsx",["128"],"interface Companie {\r\n    id: number,\r\n  }\r\n\r\nfunction Companie(props:any) {\r\n    return <h1>Hello {props.match.params.id}!</h1>;\r\n}\r\n\r\nexport default Companie;\r\n  ","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Moderators.tsx",["129","130"],"import React, { useState } from 'react';\r\nimport { GiConfirmed } from 'react-icons/gi';\r\n\r\n\r\nimport Sidebar from '../../components/Sidebar';\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/home.css';\r\n\r\nimport logoImg from '../../images/cmatextlogo.png';\r\n\r\ninterface Admin {\r\n  id: number,\r\n  name: string,\r\n  is_active: string,\r\n}\r\n\r\nfunction Moderators(){\r\n    const [admins, setAdmins] = useState<Admin[]>([]);\r\n    const [user, setUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    async function handleCreateNewModerator(){\r\n        try{\r\n            if(password == confirmPassword){\r\n                console.log(\"certo\");\r\n            }else{\r\n                alert(\"senha nao confere\");\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <div className=\"text\">\r\n            <h1>Moderadores</h1>\r\n          </div>\r\n            <h2 className=\"imagesText\"><img src={logoImg} className=\"landingImg\" alt=\"CompreMaisAki\" /></h2>\r\n          <div className=\"advRow\">\r\n            <div className=\"advCol\">\r\n              <label>Adicionar Moderador</label>\r\n              <div className=\"input-block\">\r\n            <label htmlFor=\"about\">Usuário:</label>\r\n            <input \r\n              id=\"user\" \r\n              maxLength={300}\r\n              value={user}\r\n              onChange={event => setUser(event.target.value)} />\r\n          </div>\r\n\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"name\">Senha:</label>\r\n            <input \r\n              type=\"password\"\r\n              id=\"name\" \r\n              value={password} \r\n              onChange={event => setPassword(event.target.value)} />\r\n            <label htmlFor=\"name\">Confirme a Senha:</label>\r\n            <input \r\n              type=\"password\"\r\n              id=\"name\" \r\n              value={confirmPassword} \r\n              onChange={event => setConfirmPassword(event.target.value)} />\r\n          </div>\r\n              \r\n              <div className=\"button-block\">\r\n                <button type=\"button\" onClick={() => handleCreateNewModerator()} className=\"changeImageButton\">\r\n                  <GiConfirmed size=\"26\" color=\"#fff\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"control-map\">\r\n        <div className=\"table-container\">\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Admin</th>\r\n              <th>Função</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {admins.map(admin => {\r\n              \r\n                return(\r\n                    <tr key={admin.id}>\r\n                    <td>{admin.name}</td>\r\n                    <td>{admin.is_active}</td>\r\n                    <td>\r\n                      <p>placehols</p>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n            })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Moderators;","C:\\Users\\marce\\ProjectHabil\\web\\src\\index.tsx",[],["131","132"],"C:\\Users\\marce\\ProjectHabil\\web\\src\\App.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\routes.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Landing.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Companie.tsx",["133"],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\ControlMap.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx",["134","135","136","137","138","139","140"],"import React, { useState, useEffect } from 'react';\r\nimport { FiAlertOctagon, FiCheck, FiCheckCircle, \r\nFiAlertCircle, FiXCircle, FiBook } from 'react-icons/fi';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/companies_buttons.css';\r\nimport '../../styles/pages/table.css';\r\n\r\ninterface Company {\r\n  id: number;\r\n  business: string;\r\n  cnpj: string;\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  address: string;\r\n  district: string;\r\n  city: string;\r\n  uf: string;\r\n  password: string;\r\n  image: string;\r\n  keywords: string;\r\n  is_active: string;\r\n}\r\n\r\nfunction Products(){\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active, setActive] = useState('0');\r\n  const [base] = useState('data:image/png;base64');\r\n  const [userToken, setUserToken] = useState('retrieve from localStorage');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //----CARREGAMENTO DE DADOS E LOADING INICIAL DE TELA ----///\r\n  useEffect(() => {\r\n    if(isLoading) return;\r\n\r\n    //Iniciar Carregamento\r\n    setIsLoading(true);\r\n    api.get('companies/all').then(response => {\r\n\r\n      //Realocar Resposta para UseState\r\n      setCompanies(response.data);\r\n\r\n      //Realocar Token\r\n      const getUserToken = localStorage.getItem('userToken');\r\n      setUserToken(`${getUserToken}`);\r\n\r\n      //Finalizar Carregamento\r\n      setIsLoading(false);\r\n\r\n    }).catch(err => {\r\n      alert('Ops! Tivemos um Erro.');\r\n    })\r\n  }, []);\r\n\r\n  //----RENDERIZAR TÍTULO DA TABELA\r\n  function renderTitle(){\r\n    if(active == '0'){\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Inativas</h1>\r\n      );\r\n    }else if(active == '1'){\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Ativas</h1>  \r\n      );\r\n    }else{\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Canceladas</h1>\r\n      );\r\n    }\r\n  }\r\n\r\n  //----(PENDENTE) EXPAND IMAGE---//\r\n  async function handleExpandImage({company}:{company:Company}){\r\n     alert(`${company.image}`);\r\n  }\r\n\r\n  //-----VIEWS------//\r\n  async function handleViewInactive(){\r\n    setActive('0')\r\n  }\r\n\r\n  async function handleViewActive(){\r\n    setActive('1')\r\n  }\r\n\r\n  async function handleViewCanceled(){\r\n    setActive('2')\r\n  }\r\n\r\n  //---MANIPULAR EMPRESAS (INSERIR CARREGAMENTO VISUAL)---//\r\n  async function handleInactive({company}:{company:Company}){\r\n    api.put(`companies/${company.id}`,{\r\n      // 0 === Empresa INATIVA\r\n      is_active: 0,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert(err);\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  async function handleCanceled({company}:{company:Company}){\r\n    api.delete(`companies/${company.id}`,{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert(err);\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  async function handleActive({company}:{company:Company}){\r\n    api.put(`companies/${company.id}`,{\r\n      // 1 === Empresa ATIVA\r\n      is_active: 1,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert(err);\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // RENDERIZAR BOTOES NA TABELA ATIVAS(1) - INATIVAS(0) - CANCELADAS(2)\r\n  function renderButton({company}:{company:Company}){\r\n    if(active == \"0\"){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({company})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active == \"1\"){\r\n      return (\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({company})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  // TABELA EM COMPONENTE\r\n  function renderTable(){\r\n    if(isLoading){\r\n      return (\r\n        <div>\r\n          <h1>CARREGANDO...</h1>\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <table id=\"companies\">\r\n        <tbody>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Empresa</th>\r\n          <th>Ramo</th>\r\n          <th>Palavras-Chaves</th>\r\n          <th>cnpj</th>\r\n          <th>Telefone</th>\r\n          <th>Email</th>\r\n          <th>Endereço</th>\r\n          <th>Bairro</th>\r\n          <th>Cidade</th>\r\n          <th>UF</th>\r\n          <th>Foto</th>\r\n          <th className=\"noWrap td\">Comandos</th>\r\n        </tr>\r\n\r\n        {companies.map(company => {\r\n          // ACTIVE MANIPULADO NO USESTATE()\r\n          if(company.is_active == active){\r\n            return(\r\n                <tr key={company.id}>\r\n                <td>{company.id}</td>\r\n                <td>{company.name}</td>\r\n                <td>{company.business}</td>\r\n                <td>{company.keywords}</td>\r\n                <td>{company.cnpj}</td>\r\n                <td>{company.phone}</td>\r\n                <td>{company.email}</td>\r\n                <td>{company.address}</td>\r\n                <td>{company.district}</td>\r\n                <td>{company.city}</td>\r\n                <td>{company.uf}</td>\r\n                <td onClick={() => handleExpandImage({company})}><img src={base + ',' + company.image} style={{width: '100%', cursor: 'pointer'}} className=\"landingImg\" alt=\"CompreMaisAki\" /></td>\r\n                <td>\r\n                  {renderButton({company})}\r\n                </td>\r\n              </tr>\r\n            );\r\n          }else{\r\n            return;\r\n          }\r\n        })}\r\n        </tbody>\r\n      </table>\r\n      );\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1 style={{fontSize:'22px'}}>Administração de Empresas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Canceladas</label>\r\n              <button onClick={() => handleViewCanceled()} id=\"button\">\r\n                <FiXCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n          {renderTitle()}\r\n          {renderTable()}\r\n\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx",["141","142","143","144","145","146","147","148"],"import React, { useState, useEffect } from 'react';\r\nimport { FiDollarSign, FiLayers, FiBookOpen, \r\nFiArrowDownCircle, FiAlertOctagon, FiCheck, \r\nFiCheckCircle, FiAlertCircle, FiBook } from 'react-icons/fi';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/card.css';\r\nimport '../../styles/pages/card-columns.css';\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  description: string;\r\n  date: string;\r\n  company_id: number;\r\n  image: string;\r\n  validate: string;\r\n  discount: string;\r\n  is_active: string;\r\n}\r\n\r\ninterface Company {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nfunction Products(){\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active, setActive] = useState('0');\r\n  const [validate, setValidate] = useState('');\r\n  const [base] = useState('data:image/png;base64');\r\n  const [userToken, setUserToken] = useState('retrieve from localStorage');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //----CARREGAMENTO DE DADOS E LOADING INICIAL DE TELA ----///\r\n  useEffect(() => {\r\n    if(isLoading) return;\r\n\r\n    //Iniciar Carregamento\r\n    setIsLoading(true);\r\n\r\n    //Carregamento de empresas\r\n    api.get('products/all').then(products => {\r\n\r\n      //Realocar Resposta para UseState\r\n      setProducts(products.data);\r\n\r\n      //Carregar empresas para nomeclatura na coluna \"EMPRESA\"\r\n      api.get('companies/all').then(companies => {\r\n        setCompanies(companies.data)\r\n      }).catch(err => {\r\n        alert('Ops! Tivemos um erro.');\r\n      });\r\n\r\n      //Realocar Token\r\n      const getUserToken = localStorage.getItem('userToken');\r\n      setUserToken(`${getUserToken}`);\r\n\r\n      //Finalizar Carregamento\r\n      setIsLoading(false);\r\n    }).catch(err => {\r\n      alert(\"Ops! Tivemos um erro\");\r\n    })\r\n  }, []);\r\n\r\n    //----RENDERIZAR TÍTULO DA TABELA\r\n    function renderTitle(){\r\n      if(active == '0'){\r\n        return(\r\n          <h1 style={{fontSize:'22px'}}>Promoções Inativas</h1>\r\n        )\r\n      }else{\r\n        return(\r\n          <h1 style={{fontSize:'22px'}}>Promoções Ativas</h1>  \r\n        )\r\n      }\r\n    }\r\n\r\n   //----(PENDENT)EXPAND IMAGE---//\r\n   async function handleExpandImage({product}:{product:Product}){\r\n    alert(`Ver imagem ${product.image}`);\r\n  }\r\n\r\n  //---CANCEL/ACTIVE/INACTIVE BUTTON FUNCTIONS---//\r\n  async function handleCanceled({product}:{product:Product}){\r\n    api.delete(`products/${product.id}`,{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n  }\r\n\r\n  async function handleActive({product}:{product:Product}){\r\n    api.put(`products/${product.id}`,{\r\n      is_active: 1,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n  }\r\n\r\n  async function handleInactive({product}:{product:Product}){\r\n    api.put(`products/${product.id}`,{\r\n      is_active: 0,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n  }\r\n\r\n  //----VIEWS----///\r\n  async function handleViewInactive(){\r\n    setActive('0')\r\n  }\r\n\r\n  async function handleViewActive(){\r\n    setActive('1')\r\n  }\r\n\r\n  // RENDERIZAR BOTOES NA TABELA ATIVAS(1) - INATIVAS(0) - NAO POSSUI CANCELADAS\r\n  function renderButton({product}:{product:Product}){\r\n    if(active == '0'){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({product})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n              \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({product})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active == '1'){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({product})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n              \r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({product})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n    // RENDERIZAR INPUT DE DATA INVÁLIDOS - RETORNAR VALOR DA DATA PARA VÁLIDOS \r\n    function renderValidate({product}:{product:Product}){\r\n      if(active == '0'){\r\n        return (\r\n          <input type=\"date\" value={validate} onChange={input => handleChange(input)} />\r\n        );\r\n      }else{\r\n        return (\r\n          <p>{product.validate}</p>\r\n        );\r\n      }\r\n    }\r\n\r\n  //-----(PENDENT)SORT-----//\r\n  async function handleViewPerDesc(){\r\n    alert('DESC');\r\n  }\r\n\r\n  async function handleViewPerCompany(){\r\n    alert('Company');\r\n  }\r\n\r\n  async function handleViewAlpha(){\r\n    alert('AZ');\r\n  }\r\n\r\n  async function handleViewPerPrice(){\r\n    alert('Price');\r\n  }\r\n\r\n  //---CHANGE VALIDATE----//\r\n  async function handleChange({input}:any){\r\n    setValidate(input);\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1 style={{fontSize:'22px'}}>Novas Promoções Cadastradas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Últimas</label>\r\n              <button onClick={() => handleViewPerDesc()} id=\"button\">\r\n                <FiLayers size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Empresas</label>\r\n              <button onClick={() => handleViewPerCompany()} id=\"button\">\r\n                <FiBookOpen size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">A-Z</label>\r\n              <button onClick={() => handleViewAlpha()} id=\"button\">\r\n                <FiArrowDownCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Preço</label>\r\n              <button onClick={() => handleViewPerPrice()} id=\"button\">\r\n                <FiDollarSign size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n            {renderTitle()}\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Produto</th>\r\n              <th>Preco</th>\r\n              <th>Descricao</th>\r\n              <th>Data</th>\r\n              <th>Empresa</th>\r\n              <th>Validade</th>\r\n              <th>Desconto</th>\r\n              <th>Imagem</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {products.map(product => {\r\n              if(product.is_active == active){\r\n                return(\r\n                    <tr key={product.id}>\r\n                    <td>{product.name}</td>\r\n                    <td>R$ {product.price}</td>\r\n                    <td>{product.description}</td>\r\n                    <td>{product.date}</td>\r\n                    <td>{product.company_id}</td>\r\n                    <td>\r\n                      {renderValidate({product})}\r\n                    </td>\r\n                    <td>{product.discount} %</td>\r\n                    <td onClick={() => handleExpandImage({product})}><img src={base + ',' + product.image} style={{width: '30%', cursor: 'pointer'}} className=\"landingImg\" alt=\"CompreMaisAki\" /></td>\r\n                    <td>\r\n                      {renderButton({product})}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }else{\r\n                return;\r\n              }\r\n            })}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n        \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Moderators.tsx",["149","150","151"],"import React, { useEffect, useState } from 'react';\r\nimport { GiConfirmed } from 'react-icons/gi';\r\nimport { FiAlertOctagon } from 'react-icons/fi';\r\nimport { GiArmorUpgrade, GiArmorDowngrade } from 'react-icons/gi';\r\n\r\nimport Sidebar from '../../components/Sidebar';\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/home.css';\r\nimport '../../styles/pages/switch.css';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport logoImg from '../../images/cmatextlogo.png';\r\n\r\ninterface Admin {\r\n  id: number,\r\n  user: string,\r\n  role: string,\r\n}\r\n\r\nfunction Moderators(){\r\n    //Realocar Token\r\n    const getUserToken = localStorage.getItem('userToken');\r\n\r\n    const [admins, setAdmins] = useState<Admin[]>([]);\r\n    const [user, setUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [userToken] = useState(`${getUserToken}`)\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    async function loadAdmins(){\r\n      api.get('admin',{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(adm => {\r\n        setAdmins(adm.data);\r\n      }).catch(err => {\r\n        alert('Ops! Tivemos um erro.');\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(isLoading) return;\r\n\r\n      //Iniciar Carregamento\r\n      setIsLoading(true);\r\n      //Carregamento dos ADMINS\r\n      loadAdmins();\r\n      //Finalizar Carregamento\r\n      setIsLoading(false);\r\n    }, []);\r\n\r\n    async function handleCreateNewModerator(){\r\n        \r\n      if(password == confirmPassword){\r\n        api.post('admin',{\r\n          user,\r\n          password,\r\n          role: 'adm'\r\n        },{\r\n          headers: {'Authorization': 'Bearer '+userToken}\r\n        }).then(res => {\r\n          alert(\"Usuário Cadastrado!\");\r\n          loadAdmins();\r\n        }).catch(err => {\r\n          alert(err);\r\n        })\r\n      }else{\r\n        alert(\"Senha não confere.\");\r\n      }\r\n    }\r\n\r\n    async function handleCanceled({admin}:{admin:Admin}){\r\n      alert('Cancelado!');\r\n    }\r\n\r\n    async function handlePromote({admin}:{admin:Admin}){\r\n      alert('Promovido!')\r\n    }\r\n\r\n    async function handleRelegate({admin}:{admin:Admin}){\r\n      alert('Depreciado!')\r\n    }\r\n\r\n    //---RENDERIZAR BOTOES---//\r\n    function renderButtons({admin}:{admin:Admin}){\r\n      if(admin.role == 'guest'){\r\n        return(\r\n          <div className=\"button-row\">\r\n            <div className=\"button-col\">\r\n              <button className=\"cancel\" onClick={() => handleCanceled({admin})}>\r\n                <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"button-col\">\r\n              <button className=\"aprove\" onClick={() => handlePromote({admin})}>\r\n                <GiArmorUpgrade size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }else{\r\n        return(\r\n          <div className=\"button-row\">\r\n            <div className=\"button-col\">\r\n              <button className=\"cancel\" onClick={() => handleCanceled({admin})}>\r\n                <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"button-col\">\r\n              <button className=\"aprove\" onClick={() => handleRelegate({admin})}>\r\n                <GiArmorDowngrade size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    // TABELA EM COMPONENT\r\n    function renderTable(){\r\n      if(isLoading){\r\n        return (\r\n          <div>\r\n            <h1>CARREGANDO...</h1>\r\n          </div>\r\n        );\r\n      }else{\r\n        return (\r\n          <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Admin</th>\r\n              <th>Função</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {admins.map(admin => {\r\n              \r\n                return(\r\n                    <tr key={admin.id}>\r\n                    <td>{admin.user}</td>\r\n                    <td>{admin.role}</td>\r\n                    <td>\r\n                      {renderButtons({admin})}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n            })}\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <div className=\"text\">\r\n            <h1>Moderadores</h1>\r\n          </div>\r\n            <h2 className=\"imagesText\"><img src={logoImg} className=\"landingImg\" alt=\"CompreMaisAki\" /></h2>\r\n            <h1 style={{fontSize:'20px', color:'#8fa7b3'}}>Adicionar Moderador</h1>\r\n          <div className=\"advRow\">\r\n            <div className=\"advCol\">\r\n              <div className=\"input-block\">\r\n                <label htmlFor=\"about\">Usuário:</label>\r\n                <input \r\n                  id=\"user\" \r\n                  maxLength={300}\r\n                  value={user}\r\n                  onChange={event => setUser(event.target.value)} />\r\n              </div>\r\n\r\n              <div className=\"input-block\">\r\n                <label htmlFor=\"name\">Senha:</label>\r\n                <input \r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password} \r\n                  onChange={event => setPassword(event.target.value)} />\r\n                <label htmlFor=\"name\">Confirme a Senha:</label>\r\n                <input \r\n                  type=\"password\"\r\n                  id=\"confirmPassword\" \r\n                  value={confirmPassword} \r\n                  onChange={event => setConfirmPassword(event.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"advCol\">\r\n\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"button-block\">\r\n              <button type=\"button\" onClick={() => handleCreateNewModerator()} className=\"createModeratorButton\">\r\n                <GiConfirmed size=\"26\" color=\"#fff\" />\r\n              </button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"control-map\">\r\n        <div className=\"table-container\">\r\n          <h1>Moderadores Cadastrados</h1>\r\n          {renderTable()}\r\n        </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Moderators;","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Welcome.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Client.tsx",["152"],"C:\\Users\\marce\\ProjectHabil\\web\\src\\services\\api.ts",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\components\\Sidebar.tsx",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":121,"column":15,"nodeType":"159","messageId":"160","endLine":121,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":137,"column":21,"nodeType":"159","messageId":"160","endLine":137,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":208,"column":36,"nodeType":"159","messageId":"160","endLine":208,"endColumn":38},{"ruleId":"161","severity":1,"message":"162","line":228,"column":17,"nodeType":"163","messageId":"164","endLine":228,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":33,"column":18,"nodeType":"167","messageId":"168","endLine":33,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":130,"column":17,"nodeType":"163","messageId":"164","endLine":130,"endColumn":24},{"ruleId":"165","severity":1,"message":"169","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"170","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"172","line":5,"column":10,"nodeType":"167","messageId":"173","endLine":5,"endColumn":18},{"ruleId":"165","severity":1,"message":"174","line":18,"column":20,"nodeType":"167","messageId":"168","endLine":18,"endColumn":29},{"ruleId":"157","severity":1,"message":"158","line":25,"column":25,"nodeType":"159","messageId":"160","endLine":25,"endColumn":27},{"ruleId":"153","replacedBy":"175"},{"ruleId":"155","replacedBy":"176"},{"ruleId":"171","severity":1,"message":"172","line":5,"column":10,"nodeType":"167","messageId":"173","endLine":5,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":57,"column":6,"nodeType":"179","endLine":57,"endColumn":8,"suggestions":"180"},{"ruleId":"157","severity":1,"message":"158","line":61,"column":15,"nodeType":"159","messageId":"160","endLine":61,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":65,"column":21,"nodeType":"159","messageId":"160","endLine":65,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":142,"column":15,"nodeType":"159","messageId":"160","endLine":142,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":158,"column":21,"nodeType":"159","messageId":"160","endLine":158,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":207,"column":32,"nodeType":"159","messageId":"160","endLine":207,"endColumn":34},{"ruleId":"161","severity":1,"message":"162","line":228,"column":13,"nodeType":"163","messageId":"164","endLine":228,"endColumn":20},{"ruleId":"165","severity":1,"message":"181","line":33,"column":10,"nodeType":"167","messageId":"168","endLine":33,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":69,"column":6,"nodeType":"179","endLine":69,"endColumn":8,"suggestions":"182"},{"ruleId":"157","severity":1,"message":"158","line":73,"column":17,"nodeType":"159","messageId":"160","endLine":73,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":141,"column":15,"nodeType":"159","messageId":"160","endLine":141,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":157,"column":21,"nodeType":"159","messageId":"160","endLine":157,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":178,"column":17,"nodeType":"159","messageId":"160","endLine":178,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":284,"column":36,"nodeType":"159","messageId":"160","endLine":284,"endColumn":38},{"ruleId":"161","severity":1,"message":"162","line":303,"column":17,"nodeType":"163","messageId":"164","endLine":303,"endColumn":24},{"ruleId":"177","severity":1,"message":"183","line":51,"column":8,"nodeType":"179","endLine":51,"endColumn":10,"suggestions":"184"},{"ruleId":"157","severity":1,"message":"158","line":55,"column":19,"nodeType":"159","messageId":"160","endLine":55,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":87,"column":21,"nodeType":"159","messageId":"160","endLine":87,"endColumn":23},{"ruleId":"165","severity":1,"message":"170","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","@typescript-eslint/no-unused-vars","'handleDelete' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","@typescript-eslint/no-redeclare","'Companie' is already defined.","redeclared","'setAdmins' is assigned a value but never used.",["185"],["186"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'companies' is assigned a value but never used.",["188"],"React Hook useEffect has missing dependencies: 'isLoading' and 'loadAdmins'. Either include them or remove the dependency array.",["189"],"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [isLoading]",{"range":"195","text":"196"},{"range":"197","text":"196"},"Update the dependencies array to be: [isLoading, loadAdmins]",{"range":"198","text":"199"},[1560,1562],"[isLoading]",[1964,1966],[1488,1490],"[isLoading, loadAdmins]"]