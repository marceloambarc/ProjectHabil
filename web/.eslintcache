[{"C:\\Users\\marce\\adminhabil003\\src\\index.tsx":"1","C:\\Users\\marce\\adminhabil003\\src\\App.tsx":"2","C:\\Users\\marce\\adminhabil003\\src\\routes.tsx":"3","C:\\Users\\marce\\adminhabil003\\src\\pages\\Landing.tsx":"4","C:\\Users\\marce\\adminhabil003\\src\\components\\Sidebar.tsx":"5","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Companies.tsx":"6","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Products.tsx":"7","C:\\Users\\marce\\adminhabil003\\src\\services\\api.ts":"8","C:\\Users\\marce\\adminhabil003\\src\\pages\\Welcome.tsx":"9","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\ControlMap.tsx":"10","C:\\Users\\marce\\adminhabil003\\src\\pages\\Client.tsx":"11","C:\\Users\\marce\\adminhabil003\\src\\pages\\Companie.tsx":"12","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Moderators.tsx":"13"},{"size":197,"mtime":1609937727822,"results":"14","hashOfConfig":"15"},{"size":154,"mtime":1609937740368,"results":"16","hashOfConfig":"15"},{"size":1054,"mtime":1613666779485,"results":"17","hashOfConfig":"15"},{"size":1686,"mtime":1613138147588,"results":"18","hashOfConfig":"15"},{"size":1618,"mtime":1613666499495,"results":"19","hashOfConfig":"15"},{"size":6657,"mtime":1617137761136,"results":"20","hashOfConfig":"15"},{"size":3957,"mtime":1613666131173,"results":"21","hashOfConfig":"15"},{"size":285,"mtime":1617138265506,"results":"22","hashOfConfig":"15"},{"size":2482,"mtime":1613656033698,"results":"23","hashOfConfig":"15"},{"size":1791,"mtime":1613649474429,"results":"24","hashOfConfig":"15"},{"size":4046,"mtime":1613665576602,"results":"25","hashOfConfig":"15"},{"size":164,"mtime":1613665736857,"results":"26","hashOfConfig":"15"},{"size":3311,"mtime":1613668580614,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"jw503z",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"C:\\Users\\marce\\adminhabil003\\src\\index.tsx",[],["61","62"],"C:\\Users\\marce\\adminhabil003\\src\\App.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\routes.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\pages\\Landing.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\components\\Sidebar.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Companies.tsx",["63","64","65","66"],"import React, { useState, useEffect } from 'react';\r\nimport { FiAlertOctagon, FiCheck, FiCheckCircle, FiAlertCircle, FiXCircle, FiBook } from 'react-icons/fi';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/companies_buttons.css';\r\nimport '../../styles/pages/table.css';\r\n\r\ninterface Company {\r\n  id: number;\r\n  business: string;\r\n  cnpj: string;\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  address: string;\r\n  district: string;\r\n  city: string;\r\n  uf: string;\r\n  keywords: string;\r\n  password: string;\r\n  image: string;\r\n  is_active: string;\r\n}\r\n\r\nfunction Products(){\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active, setActive] = useState('0');\r\n  const [base] = useState('data:image/png;base64');\r\n\r\n  useEffect(() => {\r\n    api.get('companies/all').then(response => {\r\n      setCompanies(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n\r\n  async function handleViewActive(){\r\n    try{\r\n      api.get('companies').then(response => {\r\n        setCompanies(response.data);\r\n        setActive('1');\r\n      });\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleViewCanceled(){\r\n    try{\r\n      api.get('deleted_companies').then(response => {\r\n        setCompanies(response.data);\r\n      })\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleViewInactive(){\r\n    try{\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n        setActive('0');\r\n      });\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleInactive({company}:{company:any}){\r\n    try{\r\n      api.put('companies',{\r\n        id: company.id,\r\n        is_active: 0,\r\n      }).then(() => {\r\n        api.get('companies').then(response => {\r\n          setCompanies(response.data);\r\n        });\r\n      });\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleCanceled({company}:{company:any}){\r\n    try{\r\n      api.put('companies',{\r\n        id: company.id,\r\n        is_active: 2,\r\n      }).then(() => {\r\n        api.delete(`companies/${company.id}`).then(() => {\r\n          api.get('companies').then(response => {\r\n            setCompanies(response.data);\r\n          })\r\n        })\r\n      })\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleActive({company}:{company:any}){\r\n    try{\r\n      api.put('companies',{\r\n        id: company.id,\r\n        is_active: 1,\r\n      }).then(() => {\r\n        api.get('companies').then(response => {\r\n          setCompanies(response.data);\r\n        });\r\n      });\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  function renderButton({company}:{company:any}){\r\n    if(active == \"0\"){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({company})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active == \"1\"){\r\n      return (\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({company})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1>Administração de Empresas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Canceladas</label>\r\n              <button onClick={() => handleViewCanceled()} id=\"button\">\r\n                <FiXCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Empresa</th>\r\n              <th>Ramo</th>\r\n              <th>Palavras-Chaves</th>\r\n              <th>cnpj</th>\r\n              <th>Telefone</th>\r\n              <th>Email</th>\r\n              <th>Endereço</th>\r\n              <th>Bairro</th>\r\n              <th>Cidade</th>\r\n              <th>UF</th>\r\n              <th>Foto</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {companies.map(company => {\r\n              if(company.is_active == active){\r\n                return(\r\n                    <tr key={company.id}>\r\n                    <td>{company.name}</td>\r\n                    <td>{company.business}</td>\r\n                    <td>{company.keywords}</td>\r\n                    <td>{company.cnpj}</td>\r\n                    <td>{company.phone}</td>\r\n                    <td>{company.email}</td>\r\n                    <td>{company.address}</td>\r\n                    <td>{company.district}</td>\r\n                    <td>{company.city}</td>\r\n                    <td>{company.uf}</td>\r\n                    <td onClick={() => {}}><img src={base + ',' + company.image} style={{width: '70%'}} className=\"landingImg\" alt=\"CompreMaisAki\" /></td>\r\n                    <td>\r\n                      {renderButton({company})}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }else{\r\n                return;\r\n              }\r\n            })}\r\n            </tbody>\r\n          </table>\r\n\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Products.tsx",["67","68"],"import React, { useState, useEffect } from 'react';\r\nimport { FiDollarSign, FiLayers, FiBookOpen, FiArrowDownCircle } from 'react-icons/fi';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/card.css';\r\nimport '../../styles/pages/card-columns.css';\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  description: string;\r\n  date: string;\r\n  company_id: number;\r\n  image: string;\r\n  validate: string;\r\n  discount: string;\r\n  is_active: number;\r\n}\r\n\r\nfunction Products(){\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  useEffect(() => {\r\n    api.get('products').then(response => {\r\n      setProducts(response.data);\r\n    });\r\n  }, []);\r\n\r\n  async function handleDelete({product}:{product:any}){\r\n    try{\r\n      let isDelete = window.confirm(`Deseja Rejeitar ${product.name}?`);\r\n      if(isDelete){\r\n        api.delete(`products/${product.id}`).then(() => {\r\n          api.get('products').then(response => {\r\n            setProducts(response.data);\r\n          });\r\n        });\r\n      }\r\n    }catch(err){\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function handleViewPerPrice(){\r\n    console.log('Price');\r\n  }\r\n\r\n  async function handleViewPerDesc(){\r\n    console.log('DESC');\r\n  }\r\n\r\n  async function handleViewInactive(){\r\n    console.log('Tester');\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1>Novas Promoções Cadastradas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Últimas</label>\r\n              <button onClick={() => handleViewPerDesc()} id=\"button\">\r\n                <FiLayers size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Empresas</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiBookOpen size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">A-Z</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiArrowDownCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Preço</label>\r\n              <button onClick={() => handleViewPerPrice()} id=\"button\">\r\n                <FiDollarSign size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Produto</th>\r\n              <th>Preco</th>\r\n              <th>Descricao</th>\r\n              <th>Data</th>\r\n              <th>Empresa</th>\r\n              <th>validade</th>\r\n              <th>Desconto</th>\r\n              <th>Imagem</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {products.map(products => {\r\n              if(products){\r\n                return(\r\n                    <tr key={products.id}>\r\n                    <td>{products.name}</td>\r\n                    <td>{products.price}</td>\r\n                    <td>{products.description}</td>\r\n                    <td>{products.date}</td>\r\n                    <td>{products.company_id}</td>\r\n                    <td>{products.validate}</td>\r\n                    <td>{products.discount}</td>\r\n                    <td>placeholder</td>\r\n                  </tr>\r\n                );\r\n              }else{\r\n                return;\r\n              }\r\n            })}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n        \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;","C:\\Users\\marce\\adminhabil003\\src\\services\\api.ts",[],"C:\\Users\\marce\\adminhabil003\\src\\pages\\Welcome.tsx",["69"],"import React, { useState } from 'react';\r\nimport { FiArrowRight } from 'react-icons/fi';\r\nimport { GrUserAdmin } from 'react-icons/gr';\r\n\r\nimport logoImg from '../images/cmatextlogo.png';\r\n\r\nimport '../styles/pages/welcome.css';\r\n\r\nimport qrcode from '../images/qrcode.png';\r\nimport applestore from '../images/appstore.png';\r\nimport googleplay from '../images/googleplay.png';\r\nimport smartphone from '../images/smartphone.png';\r\n\r\nfunction Welcome() {\r\n\r\n  async function handleLogin(){\r\n    try {\r\n      window.location.href = '/login';\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async function handleClient(){\r\n    try {\r\n      window.location.href = '/client';\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-welcome\">\r\n      <div className=\"welcome-wrapper\">\r\n\r\n        <main>\r\n          <img src={logoImg} className=\"landingImg1\" alt=\"CompreMaisAki\" />\r\n          <h1>Bem-Vindo</h1>\r\n          <p>o app que leva</p>\r\n          <p>Nova Santa Rita</p>\r\n          <p>sempre com você.</p>\r\n\r\n          <div className=\"welcome-block\">\r\n\r\n            <div className=\"welcome-block-col\">\r\n              <img src={qrcode} className=\"qrcodeLogo\" alt=\"qrcodeCompreMaisAki\" />\r\n            </div>\r\n            <div className=\"welcome-block-col\">\r\n              <div className=\"welcome-block-col\">\r\n                <img src={applestore} className=\"appstoreLogo\" alt=\"appstoreCompreMaisAki\" />\r\n              </div>\r\n              <div className=\"welcome-block-col\">\r\n                <img src={googleplay} className=\"googleplayLogo\" alt=\"googleplayCompreMaisAki\" />\r\n              </div>\r\n            </div>\r\n          </div>          \r\n\r\n        </main>\r\n\r\n        <div className=\"location\">\r\n          <img src={smartphone} className=\"smartphone\" alt=\"smartphoneCompreMaisAki\" />\r\n        </div>\r\n\r\n        <div className=\"enter-app-container\">\r\n          <div className=\"enter-app-col1\">\r\n            <p className=\"enter-text\">Entrar</p>\r\n            <button type=\"button\" onClick={() => handleClient()} className=\"enter-app\">\r\n              <FiArrowRight size=\"26\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"enter-app-col2\">\r\n            <button type=\"button\" onClick={() => handleLogin()} className=\"enter-app\">\r\n              <GrUserAdmin size=\"26\" color=\"#fff\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Welcome;","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\ControlMap.tsx",[],"C:\\Users\\marce\\adminhabil003\\src\\pages\\Client.tsx",["70"],"import React, { useState, useEffect } from 'react';\r\nimport { FiDollarSign, FiLayers, FiBookOpen, FiArrowDownCircle, FiSearch } from 'react-icons/fi';\r\nimport { IoCloseCircleOutline } from 'react-icons/io5';\r\n\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/client.css';\r\nimport '../styles/pages/card.css';\r\nimport '../styles/pages/card-columns.css';\r\n\r\nimport logoCentral from '../images/adaptive-icon.png';\r\n\r\ninterface Companies {\r\n  id: number,\r\n  business: string,\r\n  name: string,\r\n  phone: string,\r\n  email: string,\r\n  address: string,\r\n  images: string,\r\n  companie: any,\r\n}\r\n\r\nfunction Client(){\r\n  const [companies, setCompanies] = useState<Companies[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  async function handleSearch(){\r\n    api.get('companies').then(response => {\r\n      setCompanies(response.data);\r\n    });\r\n  }\r\n\r\n  async function handleViewPerPrice(){\r\n    console.log('Price');\r\n  }\r\n\r\n  async function handleViewPerDesc(){\r\n    console.log('DESC');\r\n  }\r\n\r\n  async function handleViewInactive(){\r\n    console.log('Tester');\r\n  }\r\n\r\n  async function handleCloseApp(){\r\n      try{\r\n        window.location.href = '/';\r\n      }catch(err){\r\n          console.log(err);\r\n      }\r\n  }\r\n\r\n  return(\r\n    <div id=\"client-control-map\">\r\n        <div className=\"close-button-container\">\r\n        <button onClick={() => handleCloseApp()} id=\"button\">\r\n            <IoCloseCircleOutline size=\"26\" />\r\n        </button>\r\n        </div>\r\n      <main>\r\n        <div className=\"client-control-map\">\r\n\r\n          <div className=\"logoCentralContainer\">\r\n              <img src={logoCentral} className=\"logoCentral\" alt=\"CompreMaisAkiAdaptive-Icon\" />\r\n              <div className=\"searchBar\">\r\n                <input type=\"text\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} placeholder=\"Procurar...\" />\r\n                <button onClick={() => handleSearch()}>\r\n                    <FiSearch size=\"26\" />\r\n                </button>\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Últimas</label>\r\n              <button onClick={() => handleViewPerDesc()} id=\"button\">\r\n                <FiLayers size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Empresas</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiBookOpen size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">A-Z</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiArrowDownCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Preço</label>\r\n              <button onClick={() => handleViewPerPrice()} id=\"button\">\r\n                <FiDollarSign size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            \r\n              {companies.map(companie => {\r\n               \r\n                    return(\r\n                     \r\n                        <div key={companie.id} className=\"column\">\r\n                            <div className=\"card\">\r\n                            <h1 className=\"card-title\">{companie.name}</h1>\r\n                            <p className=\"card-price\">R$ {companie.business}</p>\r\n                            <p className=\"card-text\">{companie.email}</p>\r\n                            <p> <button className=\"aprove\" onClick={() => window.location.href = `/companie/:${companie.id}`}>Acessar</button></p>\r\n                            </div>\r\n                        </div>)\r\n                \r\n            })}\r\n\r\n            </div>\r\n        \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Client;","C:\\Users\\marce\\adminhabil003\\src\\pages\\Companie.tsx",["71"],"interface Companie {\r\n    id: number,\r\n  }\r\n\r\nfunction Companie(props:any) {\r\n    return <h1>Hello {props.match.params.id}!</h1>;\r\n}\r\n\r\nexport default Companie;\r\n  ","C:\\Users\\marce\\adminhabil003\\src\\pages\\private\\Moderators.tsx",["72","73"],"import React, { useState } from 'react';\r\nimport { GiConfirmed } from 'react-icons/gi';\r\n\r\n\r\nimport Sidebar from '../../components/Sidebar';\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/home.css';\r\n\r\nimport logoImg from '../../images/cmatextlogo.png';\r\n\r\ninterface Admin {\r\n  id: number,\r\n  name: string,\r\n  is_active: string,\r\n}\r\n\r\nfunction Moderators(){\r\n    const [admins, setAdmins] = useState<Admin[]>([]);\r\n    const [user, setUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    async function handleCreateNewModerator(){\r\n        try{\r\n            if(password == confirmPassword){\r\n                console.log(\"certo\");\r\n            }else{\r\n                alert(\"senha nao confere\");\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <div className=\"text\">\r\n            <h1>Moderadores</h1>\r\n          </div>\r\n            <h2 className=\"imagesText\"><img src={logoImg} className=\"landingImg\" alt=\"CompreMaisAki\" /></h2>\r\n          <div className=\"advRow\">\r\n            <div className=\"advCol\">\r\n              <label>Adicionar Moderador</label>\r\n              <div className=\"input-block\">\r\n            <label htmlFor=\"about\">Usuário:</label>\r\n            <input \r\n              id=\"user\" \r\n              maxLength={300}\r\n              value={user}\r\n              onChange={event => setUser(event.target.value)} />\r\n          </div>\r\n\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"name\">Senha:</label>\r\n            <input \r\n              type=\"password\"\r\n              id=\"name\" \r\n              value={password} \r\n              onChange={event => setPassword(event.target.value)} />\r\n            <label htmlFor=\"name\">Confirme a Senha:</label>\r\n            <input \r\n              type=\"password\"\r\n              id=\"name\" \r\n              value={confirmPassword} \r\n              onChange={event => setConfirmPassword(event.target.value)} />\r\n          </div>\r\n              \r\n              <div className=\"button-block\">\r\n                <button type=\"button\" onClick={() => handleCreateNewModerator()} className=\"changeImageButton\">\r\n                  <GiConfirmed size=\"26\" color=\"#fff\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"control-map\">\r\n        <div className=\"table-container\">\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Admin</th>\r\n              <th>Função</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {admins.map(admin => {\r\n              \r\n                return(\r\n                    <tr key={admin.id}>\r\n                    <td>{admin.name}</td>\r\n                    <td>{admin.is_active}</td>\r\n                    <td>\r\n                      <p>placehols</p>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n            })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Moderators;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":121,"column":15,"nodeType":"80","messageId":"81","endLine":121,"endColumn":17},{"ruleId":"78","severity":1,"message":"79","line":137,"column":21,"nodeType":"80","messageId":"81","endLine":137,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":208,"column":36,"nodeType":"80","messageId":"81","endLine":208,"endColumn":38},{"ruleId":"82","severity":1,"message":"83","line":228,"column":17,"nodeType":"84","messageId":"85","endLine":228,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":33,"column":18,"nodeType":"88","messageId":"89","endLine":33,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":130,"column":17,"nodeType":"84","messageId":"85","endLine":130,"endColumn":24},{"ruleId":"86","severity":1,"message":"90","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"91","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":5,"column":10,"nodeType":"88","messageId":"94","endLine":5,"endColumn":18},{"ruleId":"86","severity":1,"message":"95","line":18,"column":20,"nodeType":"88","messageId":"89","endLine":18,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":25,"column":25,"nodeType":"80","messageId":"81","endLine":25,"endColumn":27},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","@typescript-eslint/no-unused-vars","'handleDelete' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","@typescript-eslint/no-redeclare","'Companie' is already defined.","redeclared","'setAdmins' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]