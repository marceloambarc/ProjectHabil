[{"C:\\Users\\Habil\\ProjectHabil\\web\\src\\routes.tsx":"1","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Landing.tsx":"2","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\ControlMap.tsx":"3","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Moderators.tsx":"4","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Forgot.tsx":"5","C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\Sidebar.tsx":"6","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx":"7","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx":"8","C:\\Users\\Habil\\ProjectHabil\\web\\src\\App.tsx":"9","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Client.tsx":"10","C:\\Users\\Habil\\ProjectHabil\\web\\src\\index.tsx":"11","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Activate.tsx":"12","C:\\Users\\habil\\ProjectHabil\\web\\src\\routes.tsx":"13","C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\Companie.tsx":"14","C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\Activate.tsx":"15","C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx":"16","C:\\Users\\habil\\ProjectHabil\\web\\src\\components\\Sidebar.tsx":"17","C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\private\\Forgot.tsx":"18","C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx":"19","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Companie.tsx":"20","C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\PromoInput.tsx":"21","C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\Validation.tsx":"22","C:\\Users\\Habil\\ProjectHabil\\web\\src\\services\\api.ts":"23","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Welcome.tsx":"24","C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\UpperBar.tsx":"25","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Privacy.tsx":"26"},{"size":1395,"mtime":1621600629034,"results":"27","hashOfConfig":"28"},{"size":2457,"mtime":1625676324505,"results":"29","hashOfConfig":"28"},{"size":7020,"mtime":1620937753579,"results":"30","hashOfConfig":"28"},{"size":9129,"mtime":1625514601336,"results":"31","hashOfConfig":"28"},{"size":4909,"mtime":1620993754448,"results":"32","hashOfConfig":"28"},{"size":1984,"mtime":1619617345268,"results":"33","hashOfConfig":"28"},{"size":16898,"mtime":1625507122188,"results":"34","hashOfConfig":"28"},{"size":15094,"mtime":1625510314423,"results":"35","hashOfConfig":"28"},{"size":164,"mtime":1619608457429,"results":"36","hashOfConfig":"28"},{"size":19134,"mtime":1625682036183,"results":"37","hashOfConfig":"28"},{"size":207,"mtime":1619608457710,"results":"38","hashOfConfig":"28"},{"size":3125,"mtime":1619608457726,"results":"39","hashOfConfig":"28"},{"size":1300,"mtime":1619608457742,"results":"40","hashOfConfig":"41"},{"size":180,"mtime":1619608457726,"results":"42","hashOfConfig":"41"},{"size":3125,"mtime":1619608457726,"results":"43","hashOfConfig":"41"},{"size":11539,"mtime":1619630449136,"results":"44","hashOfConfig":"41"},{"size":1984,"mtime":1619617345268,"results":"45","hashOfConfig":"41"},{"size":5087,"mtime":1619807004695,"results":"46","hashOfConfig":"41"},{"size":9629,"mtime":1619808706246,"results":"47","hashOfConfig":"41"},{"size":180,"mtime":1619608457726,"results":"48","hashOfConfig":"28"},{"size":1319,"mtime":1620127582519,"results":"49","hashOfConfig":"28"},{"size":1707,"mtime":1620073075961,"results":"50","hashOfConfig":"28"},{"size":327,"mtime":1620411563363,"results":"51","hashOfConfig":"28"},{"size":2299,"mtime":1625681977373,"results":"52","hashOfConfig":"28"},{"size":1933,"mtime":1620937038249,"results":"53","hashOfConfig":"28"},{"size":17715,"mtime":1625589875399,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fn2346",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c5nczi",{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},"C:\\Users\\Habil\\ProjectHabil\\web\\src\\routes.tsx",[],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Landing.tsx",[],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\ControlMap.tsx",["127"],"import React, { useEffect, useState, createRef } from 'react';\r\nimport Resizer from \"react-image-file-resizer\";\r\n\r\nimport UpperBar from '../../components/UpperBar';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport api from '../../services/api';\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/home.css';\r\n\r\nimport loadingImg from '../../images/loading.gif';\r\nimport logoImg from '../../images/cmatextlogo.png';\r\n\r\n//SOLICITAR ROTA DE ALTERACAO DE IMAGEM PARA CARREGAMENTO NO APP\r\nfunction ControlMap(){\r\n  const getUserToken = localStorage.getItem('userToken');\r\n\r\n  const [userToken] = useState(`${getUserToken}`)\r\n  const [img1, setImg1] = useState('');\r\n  const [img2, setImg2] = useState('');\r\n  const [base] = useState('data:image/jpeg;base64');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [role, setRole] = useState('');\r\n\r\n  const [isLoadingImage1, setIsLoadingImage1] = useState(false);\r\n  const [isLoadingImage2, setIsLoadingImage2] = useState(false);\r\n\r\n  const [isImage1Loaded, setIsImage1Loaded] = useState(true);\r\n  const [isImage2Loaded, setIsImage2Loaded] = useState(true);\r\n  \r\n  const fileInput1 = createRef<any>();\r\n  const fileInput2 = createRef<any>();\r\n\r\n  async function getImages(){\r\n    await api.get('backgrounds/9').then(response => {\r\n      setImg1(response.data.background_image1);\r\n      setImg2(response.data.background_image2);\r\n    })\r\n  }\r\n\r\n  async function getRoles(){\r\n    await api.get('admin/tk',{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(res => {\r\n      setRole(res.data.role);\r\n    }).catch(res => {\r\n      setRole('guest');\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isLoading) return;\r\n    getImages();\r\n    getRoles();\r\n    setIsLoading(false);\r\n  },[]);\r\n\r\n    const resizeFile = (file:any) =>\r\n    new Promise((resolve:any) => {\r\n      Resizer.imageFileResizer(\r\n        file,\r\n        200,\r\n        200,\r\n        \"PNG\",\r\n        100,\r\n        0,\r\n        (uri) => {\r\n          resolve(uri);\r\n        },\r\n        \"base64\",\r\n        200,\r\n        200,\r\n      );\r\n    });\r\n\r\n  //TAKE THE FILEINPUT\r\n  async function handleChangeImage1(e:any) {\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    const file = fileInput1.current?.files[0];\r\n    setIsLoadingImage1(true);\r\n    const image = await resizeFile(file);\r\n    const fileAdaptedRender = String(image).split(',').pop();\r\n    setImg1(fileAdaptedRender? fileAdaptedRender: '');\r\n\r\n    setIsLoadingImage1(false);\r\n    setIsLoading(false);\r\n    setIsImage1Loaded(false);\r\n  }\r\n\r\n  async function handleChangeImage2(e:any){\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    const file = fileInput2.current?.files[0];\r\n    setIsLoadingImage2(true);\r\n    const image = await resizeFile(file);\r\n    const fileAdaptedRender = String(image).split(',').pop();\r\n    console.log(fileAdaptedRender);\r\n    setImg2(fileAdaptedRender? fileAdaptedRender: '');\r\n    \r\n    setIsLoadingImage2(false);\r\n    setIsLoading(false);\r\n    setIsImage2Loaded(false);\r\n  }\r\n\r\n  async function handleSendImage1(){\r\n    if(!isImage1Loaded){\r\n      setIsLoadingImage1(true);\r\n      api.put('backgrounds/9',{\r\n        background_image1: `${img1}`\r\n      },{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(res => {\r\n        setIsLoadingImage1(false);\r\n        setIsImage1Loaded(true);\r\n        alert('Imagem Alterada com Sucesso!')\r\n      }).catch(err => {\r\n        setIsLoadingImage1(false);\r\n        alert('Tivemos um Erro inesperado.');\r\n      });\r\n    }else{\r\n      alert('Altere a Imagem para Fazer Upload.');\r\n    }\r\n  }\r\n\r\n  async function handleSendImage2(){\r\n    if(!isImage2Loaded){\r\n      setIsLoadingImage2(true);\r\n      api.put('backgrounds/9',{\r\n        background_image2: `${img2}`\r\n      },{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(res => {\r\n        setIsLoadingImage2(false);\r\n        setIsImage2Loaded(true);\r\n        alert('Imagem Alterada com Sucesso!')\r\n      }).catch(err => {\r\n        setIsLoadingImage2(false);\r\n        alert('Tivemos um Erro inesperado.');\r\n      });\r\n    }else{\r\n      alert('Altere a Imagem para Fazer Upload.');\r\n    }\r\n  }\r\n\r\n  //---REFATORAR CÓDIGOS--- \"i++\"\"\r\n  function renderImg1(){\r\n    if(isLoading){\r\n      return (\r\n        <img src={loadingImg} className=\"AdvImage\" alt=\"AdvImage\" style={{width: \"85%\"}}/>\r\n      );\r\n    }else{\r\n      return(\r\n        <img src={base + ',' + img1} className=\"AdvImage\" alt=\"AdvImage\" style={{width: \"85%\"}}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  function renderImg2(){\r\n    if(isLoading){\r\n      return (\r\n        <img src={loadingImg} className=\"AdvImage\" alt=\"AdvImage\" style={{width: \"85%\"}}/> \r\n      );\r\n    }else{\r\n      return (\r\n        <img src={base + ',' + img2} className=\"AdvImage\" alt=\"AdvImage\" style={{width: \"85%\"}}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  function renderUploadButton1(){\r\n    if(isLoadingImage1){\r\n      return (\r\n        <button className=\"loading-image-button\">\r\n          Carregando...\r\n        </button>\r\n      );\r\n    }else{\r\n      return (\r\n        <button className=\"send-image-button\" onClick={() => handleSendImage1()}>\r\n          Upload\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  function renderUploadButton2(){\r\n    if(isLoadingImage2){\r\n      return (\r\n        <button className=\"loading-image-button\">\r\n          Carregando...\r\n        </button>\r\n      );\r\n    }else{\r\n      return (\r\n        <button className=\"send-image-button\" onClick={() => handleSendImage2()}>\r\n          Upload\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar role={role} />\r\n      <main>\r\n        <UpperBar role={role} />\r\n        <div className=\"control-map\">\r\n\r\n          <div className=\"text\">\r\n            <h1>Pagina Inicial</h1>\r\n          </div>\r\n            <h2 className=\"imagesText\">Imagens renderizadas no aplicativo <img src={logoImg} className=\"landingImg\" alt=\"CompreMaisAki\" /></h2>\r\n          <div className=\"advRow\">\r\n            <div className=\"advCol\">\r\n              <label>Imagem 1:</label>\r\n              {renderImg1()}\r\n              \r\n              <div className=\"button-block\">\r\n                <div className=\"image-handle\">\r\n                  <input type='file' name='file' ref={fileInput1} className='changeImageButton' onChange={e => handleChangeImage1(e)} />\r\n                  {renderUploadButton1()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"advCol\">\r\n              <label>Imagem 2:</label>\r\n              {renderImg2()}\r\n              \r\n              <div className=\"button-block\">\r\n                <div className=\"image-handle\">\r\n                  <input type='file' name='file' ref={fileInput2} className='changeImageButton' onChange={e => handleChangeImage2(e)} />\r\n                  {renderUploadButton2()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlMap;\r\n",["128","129"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Moderators.tsx",["130","131","132"],"import React, { useEffect, useState } from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { GiConfirmed } from 'react-icons/gi';\r\nimport { FiAlertOctagon } from 'react-icons/fi';\r\nimport { GiArmorUpgrade, GiArmorDowngrade } from 'react-icons/gi';\r\n\r\nimport UpperBar from '../../components/UpperBar';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/home.css';\r\nimport '../../styles/pages/switch.css';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport logoImg from '../../images/cmatextlogo.png';\r\n\r\ninterface Admin {\r\n  id: number,\r\n  user: string,\r\n  role: string,\r\n}\r\n\r\n//Esconder do SIDEBAR Para Moderadores\r\nfunction Moderators(){\r\n    //Realocar Token\r\n    const getUserToken = localStorage.getItem('userToken');\r\n\r\n    const [admins, setAdmins] = useState<Admin[]>([]);\r\n    const [user, setUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [userToken] = useState(`${getUserToken}`)\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [role, setRole] = useState('');\r\n\r\n    async function loadAdmins(){\r\n      api.get('admin',{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(adm => {\r\n        setAdmins(adm.data);\r\n      }).catch(err => {\r\n        alert('Ops! Tivemos um erro.');\r\n      });\r\n    }\r\n\r\n    async function getRoles(){\r\n      api.get('admin/tk',{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(res => {\r\n        setRole(res.data.role);\r\n      }).catch(err => {\r\n        setRole('guest');\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(!isLoading) return;\r\n      //Carregamento dos ADMINS\r\n      loadAdmins();\r\n      getRoles();\r\n      //Finalizar Carregamento\r\n      setIsLoading(false);\r\n    }, []);\r\n\r\n    async function handleCreateNewModerator(){\r\n        \r\n      if(password == confirmPassword){\r\n        api.post('admin',{\r\n          user,\r\n          password,\r\n          role: 'adm'\r\n        },{\r\n          headers: {'Authorization': 'Bearer '+userToken}\r\n        }).then(res => {\r\n          alert(\"Usuário Cadastrado!\");\r\n          loadAdmins();\r\n        }).catch(err => {\r\n          alert('Tivemos um erro, entre em contato com o Suporte');\r\n        })\r\n      }else{\r\n        alert(\"Senha não confere.\");\r\n      }\r\n    }\r\n\r\n    async function handleConfirmCanceled({admin}:{admin:Admin}){\r\n      api.delete(`admin/${admin.id}`,{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(res => {\r\n        alert(\"Usuário Deletado\");\r\n        loadAdmins();\r\n      }).catch(err => {\r\n        alert(\"Tivemos um Erro.\");\r\n      });\r\n    }\r\n\r\n    async function handleCanceled({admin}:{admin:Admin}){\r\n      confirmAlert({\r\n        title: `Deletar o usuário ${admin.user}?`,\r\n        message: `Você tem certeza que deseja deletar o usuário \"${admin.user}\"?`,\r\n        buttons: [\r\n          {\r\n            label: 'Sim',\r\n            onClick: ()  => handleConfirmCanceled({admin})\r\n          },\r\n          {\r\n            label: 'Não',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }\r\n\r\n    async function handleConfirmPromote({admin}:{admin:Admin}){\r\n      api.put(`admin/${admin.id}`,{\r\n        role: \"adm\"\r\n      },{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(res => {\r\n        alert(\"Usuário Promovido\");\r\n        loadAdmins();\r\n      }).catch(err => {\r\n        alert(\"Tivemos um Erro.\")\r\n      });\r\n    }\r\n\r\n    async function handlePromote({admin}:{admin:Admin}){\r\n      confirmAlert({\r\n        title: `Promover o usuário ${admin.user}?`,\r\n        message: `Você tem certeza que deseja promover o usuário \"${admin.user}\"?`,\r\n        buttons: [\r\n          {\r\n            label: 'Sim',\r\n            onClick: ()  => handleConfirmPromote({admin})\r\n          },\r\n          {\r\n            label: 'Não',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }\r\n\r\n    async function handleConfirmRelegate({admin}:{admin:Admin}){\r\n      api.put(`admin/${admin.id}`,{\r\n        role: \"guest\"\r\n      },{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(res => {\r\n        alert(\"Usuário Depreciado\");\r\n        loadAdmins();\r\n      }).catch(err => {\r\n        alert(\"Tivemos um Erro.\")\r\n      });\r\n    }\r\n\r\n    async function handleRelegate({admin}:{admin:Admin}){\r\n      confirmAlert({\r\n        title: `Relegar o usuário ${admin.user}?`,\r\n        message: `Você tem certeza que deseja relegar o usuário \"${admin.user}\"?`,\r\n        buttons: [\r\n          {\r\n            label: 'Sim',\r\n            onClick: ()  => handleConfirmRelegate({admin})\r\n          },\r\n          {\r\n            label: 'Não',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }\r\n\r\n    //---RENDERIZAR BOTOES---//\r\n    function renderButtons({admin}:{admin:Admin}){\r\n      if(admin.role == 'guest'){\r\n        return(\r\n          <div className=\"button-row\">\r\n            <div className=\"button-col\">\r\n              <button className=\"moderator-cancel\" onClick={() => handleCanceled({admin})}>\r\n                <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"button-col\">\r\n              <button className=\"moderator-promote\" onClick={() => handlePromote({admin})}>\r\n                <GiArmorUpgrade size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }else{\r\n        return(\r\n          <div className=\"button-row\">\r\n            <div className=\"button-col\">\r\n              <button className=\"moderator-cancel\" onClick={() => handleCanceled({admin})}>\r\n                <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"button-col\">\r\n              <button className=\"moderator-relegate\" onClick={() => handleRelegate({admin})}>\r\n                <GiArmorDowngrade size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    // TABELA EM COMPONENT\r\n    function renderTable(){\r\n      if(isLoading){\r\n        return (\r\n          <div>\r\n            <h1>CARREGANDO...</h1>\r\n          </div>\r\n        );\r\n      }else{\r\n        return (\r\n          <table id=\"moderators\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Admin</th>\r\n              <th>Função</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {admins.map(admin => {\r\n              \r\n                return(\r\n                    <tr key={admin.id}>\r\n                    <td>{admin.user}</td>\r\n                    <td>{admin.role}</td>\r\n                    <td>\r\n                      {renderButtons({admin})}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n            })}\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar role={role} />\r\n      <main>\r\n        <UpperBar role={role} />\r\n        <div className=\"control-map\">\r\n\r\n          <div className=\"text\">\r\n            <h1>Moderadores</h1>\r\n          </div>\r\n            <h2 className=\"imagesText\"><img src={logoImg} className=\"landingImg\" alt=\"CompreMaisAki\" /></h2>\r\n            <h1 style={{fontSize:'20px', color:'#8fa7b3'}}>Adicionar Moderador</h1>\r\n          <div className=\"advRow\">\r\n            <div className=\"advCol\">\r\n              <div className=\"input-block\">\r\n                <label htmlFor=\"about\">Usuário:</label>\r\n                <input \r\n                  id=\"user\" \r\n                  maxLength={300}\r\n                  value={user}\r\n                  onChange={event => setUser(event.target.value)} />\r\n              </div>\r\n\r\n              <div className=\"input-block\">\r\n                <label htmlFor=\"name\">Senha:</label>\r\n                <input \r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password} \r\n                  onChange={event => setPassword(event.target.value)} />\r\n                <label htmlFor=\"name\">Confirme a Senha:</label>\r\n                <input \r\n                  type=\"password\"\r\n                  id=\"confirmPassword\" \r\n                  value={confirmPassword} \r\n                  onChange={event => setConfirmPassword(event.target.value)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"button-block\">\r\n              <button type=\"button\" onClick={() => handleCreateNewModerator()} className=\"createModeratorButton\">\r\n                <GiConfirmed size=\"26\" color=\"#fff\" />\r\n              </button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"control-map\">\r\n        <div className=\"table-container\">\r\n          <h1>Moderadores Cadastrados</h1>\r\n          {renderTable()}\r\n        </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Moderators;",["133","134"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Forgot.tsx",["135","136","137","138"],"import React, { useState, useEffect } from 'react';\r\nimport { FaKey } from 'react-icons/fa';\r\nimport randomWords from 'random-words';\r\nimport md5 from 'md5';\r\n\r\nimport UpperBar from '../../components/UpperBar';\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/companies_buttons.css';\r\nimport '../../styles/pages/table.css';\r\n\r\nimport { host, port, fromEmail, pass } from '../../services/email.json';\r\n\r\ninterface Company {\r\n  id: number;\r\n  business: string;\r\n  cnpj: string;\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  address: string;\r\n  district: string;\r\n  city: string;\r\n  uf: string;\r\n  password: string;\r\n  image: string;\r\n  keywords: string;\r\n  is_active: string;\r\n  reset_password: string;\r\n}\r\n\r\n//SORT POR ÚLTIMAS CADASTRADAS\r\nfunction Forgot(){\r\n  const getUserToken = localStorage.getItem('userToken');\r\n  const [userToken] = useState(`${getUserToken}`)\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active] = useState('1');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [role, setRole] = useState('');\r\n\r\n  //----CARREGAMENTO DE DADOS E LOADING INICIAL DE TELA ----///\r\n\r\n  function getForgot(){\r\n    api.get('companies/all').then(response => {\r\n\r\n      //Realocar Resposta para UseState\r\n      setCompanies(response.data);\r\n\r\n    }).catch(err => {\r\n      alert('Ops! Tivemos um Erro.');\r\n    });\r\n  }\r\n\r\n  async function getRoles(){\r\n    api.get('admin/tk',{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(res => {\r\n      setRole(res.data.role);\r\n    }).catch(err => {\r\n      setRole('guest');\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isLoading) return;\r\n    getForgot();\r\n    getRoles();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  async function handleSubmitPassword({company}:{company:Company}){\r\n    const key = randomWords()\r\n    const encryptedKey = md5(key);\r\n    const finalKey = encryptedKey.substring(1,9);\r\n\r\n    fetch(\"http://177.10.0.125:5003/mailgun\",{\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({       \r\n        host: host,\r\n        port: port,\r\n        fromEmail: fromEmail,\r\n        pass: pass,\r\n        toEmail: company.email,\r\n        title: 'Recuperação de Senha',\r\n        message: 'Mensagem enviada pelo Aplicativo CompreMaisAki',\r\n        content: `Segue sua senha temporária para a troca de acessar o Aplicativo:\r\n        ${finalKey}`\r\n      })\r\n    }).then(res => {\r\n      api.put(`companies/${company.id}`,{\r\n        password: finalKey,\r\n        is_active: 1\r\n      },{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(res => {\r\n        alert('Sucesso');\r\n      }).catch(err => {\r\n        alert('erro na emissao de nova chave.');\r\n      });\r\n      getForgot();\r\n    }).catch(err => {\r\n      alert('Erro no envio de recuperação da senha, Entre em contato com o suporte');\r\n    });\r\n  }\r\n\r\n\r\n  // RENDERIZAR BOTOES NA TABELA ATIVAS(1) - INATIVAS(0) - CANCELADAS(2)\r\n  function renderButton({company}:{company:Company}){\r\n    return(\r\n      <div className=\"button-row\">\r\n        <div className=\"button-col\">\r\n          <button className=\"cancel\" onClick={() => handleSubmitPassword({company})}>\r\n            <FaKey size=\"13\" color=\"#FFF\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // TABELA EM COMPONENTE\r\n  function renderTable(){\r\n    if(isLoading){\r\n      return (\r\n        <div>\r\n          <h1>CARREGANDO...</h1>\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <table id=\"companies\">\r\n        <tbody>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Empresa</th>\r\n          <th>Email</th>\r\n          <th>CNPJ</th>\r\n          <th className=\"noWrap td\">Comandos</th>\r\n        </tr>\r\n\r\n        {companies.map(company => {\r\n          // ACTIVE MANIPULADO NO USESTATE()\r\n          if(company.is_active == active && company.reset_password == '00000001'){\r\n            return(\r\n                <tr key={company.id}>\r\n                <td>{company.id}</td>\r\n                <td>{company.name}</td>\r\n                <td>{company.email}</td>\r\n                <td>{company.cnpj}</td>\r\n                <td>\r\n                  {renderButton({company})}\r\n                </td>\r\n              </tr>\r\n            );\r\n          }else{\r\n            return;\r\n          }\r\n        })}\r\n        </tbody>\r\n      </table>\r\n      );\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar role={role} />\r\n      <main>\r\n        <UpperBar role={role} />\r\n        <div className=\"control-map\">\r\n\r\n          <h1 style={{fontSize:'22px'}}>Recuperação de Senha</h1>\r\n          \r\n          <div className=\"table-container\">\r\n          {renderTable()}\r\n\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forgot;",["139","140"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\Sidebar.tsx",["141","142"],"import React, { useState, useEffect } from 'react';\r\nimport { FaKey } from 'react-icons/fa';\r\nimport { FiArrowLeft, FiArrowRight, FiHome, FiUser } from 'react-icons/fi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Img from '../images/adaptive-icon.png';\r\nimport '../styles/components/sidebar.css';\r\n\r\ninterface Moderator {\r\n  role: any;\r\n}\r\n\r\nexport default function Sidebar({role} : Moderator) {\r\n\r\n  function renderModeratorsButton(){\r\n    if(role === 'adm'){\r\n      return(\r\n        <div className=\"button-block\">\r\n          <label>Moderadores</label>\r\n          <Link to=\"/Moderators\" className=\"enter-path\">\r\n            <FiUser size=\"26\" color=\"white\" />\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <aside className=\"app-sidebar\">\r\n      <img src={Img} alt=\"Habil\" />\r\n\r\n      <div className=\"home-button\">\r\n        <Link to=\"/app\" className=\"enter-path\">\r\n          <FiHome size=\"26\" color=\"white\" />\r\n        </Link>\r\n      </div>\r\n        \r\n        <div className=\"button-wrapper\">\r\n          {renderModeratorsButton()}\r\n\r\n          <div className=\"button-block\">\r\n            <label>Promoções</label>\r\n            <Link to=\"/products\" className=\"enter-path\">\r\n              <FiArrowRight size=\"26\" color=\"white\" />\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"button-block\">\r\n            <label>Empresas</label>\r\n            <Link to=\"/companies\" className=\"enter-path\">\r\n              <FiArrowRight size=\"26\" color=\"white\" />\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"button-block\">\r\n            <label>Senhas</label>\r\n            <Link to=\"/forgot\" className=\"enter-path\">\r\n              <FaKey size=\"26\" color=\"white\" />\r\n            </Link>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n      <footer>\r\n        <label>Sair</label>\r\n        <Link to=\"/\" className=\"enter-path\">\r\n          <FiArrowLeft size={24} color=\"#FFF\" />\r\n        </Link>\r\n      </footer>\r\n\r\n    </aside>\r\n  )\r\n}","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx",["143","144","145","146"],"import React, { useState, useEffect } from 'react';\r\nimport { FiAlertOctagon, FiCheck, FiCheckCircle, \r\nFiAlertCircle, FiXCircle, FiBook, FiSearch } from 'react-icons/fi';\r\nimport Modal from 'react-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport UpperBar from '../../components/UpperBar';\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\nimport { Company } from '../../libs/companyProps';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/companies_buttons.css';\r\nimport '../../styles/pages/table.css';\r\nimport { host, port, fromEmail, pass } from '../../services/email.json';\r\nimport { mailer } from '../../services/mailer.json';\r\nimport PromoInput from '../../components/PromoInput';\r\n\r\nModal.setAppElement('#root')\r\n\r\n//SORT POR ÚLTIMAS CADASTRADAS\r\nfunction Companies(){\r\n  const getUserToken = localStorage.getItem('userToken');\r\n  const [userToken] = useState(`${getUserToken}`)\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [canceledCompanies, setCanceledCompanies] = useState<Company[]>([]);\r\n  const [isCanceled, setIsCanceled] = useState(false);\r\n  const [active, setActive] = useState(0);\r\n  const [base] = useState('data:image/png;base64');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [role, setRole] = useState('');\r\n  const [searchCnpj, setSearchCnpj] = useState('');\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [viewImage, setViewImage] = useState('');\r\n  const [viewName, setViewName] = useState('');\r\n\r\n  //----CARREGAMENTO DE DADOS E LOADING INICIAL DE TELA ----///\r\n  async function getRoles(){\r\n    api.get('admin/tk',{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(res => {\r\n      setRole(res.data.role);\r\n    }).catch(err => {\r\n      setRole('guest');\r\n    });\r\n  }\r\n\r\n  async function getCompanies(){\r\n    api.get('companies/all').then(response => {\r\n\r\n      //Realocar Resposta para UseState\r\n      setCompanies(response.data);\r\n\r\n    }).catch(err => {\r\n      alert('Erro ao acessar Tabela de Empresas Canceladas.');\r\n    })\r\n  }\r\n\r\n  async function getCanceledCompanies(){\r\n    api.get('deleted_companies').then(response => {\r\n\r\n      //Realocar Resposta para UseState\r\n      setCanceledCompanies(response.data);\r\n\r\n    }).catch(err => {\r\n      alert('Erro ao acessar Tabela de Empresas.');\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isLoading) return;\r\n\r\n    getRoles();\r\n    getCompanies();\r\n    getCanceledCompanies()\r\n\r\n    //Finalizar Carregamento\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  function openModal({company}:{company:Company}) {\r\n    setIsOpen(true);\r\n    setViewImage(`${company.image}`);\r\n    setViewName(`${company.name}`);\r\n  }\r\n\r\n  function closeModal(){\r\n    setIsOpen(false);\r\n    setViewImage('');\r\n    setViewName('');\r\n  }\r\n\r\n  //----RENDERIZAR TÍTULO DA TABELA\r\n  function renderTitle(){\r\n    if(active === 0){\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Inativas</h1>\r\n      );\r\n    }else if(active === 1){\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Ativas</h1>  \r\n      );\r\n    }else{\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Canceladas</h1>\r\n      );\r\n    }\r\n  }\r\n\r\n  //----(PENDENTE) EXPAND IMAGE---//\r\n  async function handleExpandImage({company}:{company:Company}){\r\n    openModal({company});\r\n  }\r\n\r\n  //-----VIEWS------//\r\n  async function handleViewInactive(){\r\n    setActive(0)\r\n    setIsCanceled(false);\r\n  }\r\n\r\n  async function handleViewActive(){\r\n    setActive(1)\r\n    setIsCanceled(false);\r\n  }\r\n\r\n  async function handleViewCanceled(){\r\n    setActive(2)\r\n    setIsCanceled(true);\r\n  }\r\n\r\n  // FUNÇÕES DE BOTOES\r\n\r\n  async function handleConfirmInactive({company}:{company:Company}){\r\n    api.put(`companies/${company.id}`,{\r\n      // 0 === Empresa INATIVA\r\n      is_active: 0,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n        fetch(`${mailer}/mailgun`,{\r\n          method: 'POST',\r\n          headers: { \r\n            'Content-Type': 'application/json',\r\n            'mode': 'node-cors'\r\n          },\r\n          body: JSON.stringify({\r\n            host: host,\r\n            port: port,\r\n            fromEmail: fromEmail,\r\n            pass: pass,\r\n            toEmail: company.email,\r\n            title: 'Empresa Inativa',\r\n            message: 'Sua empresa Foi Inativada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.',\r\n            content: 'Sua empresa Foi Inativada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.'\r\n          })\r\n        }).then(() => {\r\n          alert('Email Enviado!');\r\n        }).catch(err => {\r\n          alert('Erro com a conexão com encaminhador de Email. Entre em contato com o suporte.');\r\n        });\r\n      }).then(() => {\r\n        alert('Empresa Inativada com Sucesso.');\r\n      }).catch(err => {\r\n        alert('Erro ao encaminhar Email de Inativação. Entre em contato com o suporte.');\r\n      })\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  //---MANIPULAR EMPRESAS (INSERIR CARREGAMENTO VISUAL)---//\r\n  async function handleInactive({company}:{company:Company}){\r\n    confirmAlert({\r\n      title: `Inativar ${company.name}?`,\r\n      message: `Você tem certeza que deseja inativar a empresa \"${company.name}\"?`,\r\n      buttons: [\r\n        {\r\n          label: 'Sim',\r\n          onClick: ()  => handleConfirmInactive({company})\r\n        },\r\n        {\r\n          label: 'Não',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n  async function handleConfirmCanceled({company}:{company:Company}){\r\n    api.delete(`companies/${company.id}`,{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n        fetch(`${mailer}/mailgun`,{\r\n          method: 'POST',\r\n          headers: { \r\n            'Content-Type': 'application/json',\r\n            'mode': 'node-cors'\r\n          },\r\n          body: JSON.stringify({\r\n            host: host,\r\n            port: port,\r\n            fromEmail: fromEmail,\r\n            pass: pass,\r\n            toEmail: company.email,\r\n            title: 'Empresa Cancelada',\r\n            message: 'Sua empresa Foi Cancelada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.',\r\n            content: 'Sua empresa Foi Cancelada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.'\r\n          })\r\n        }).then(() => {\r\n          alert('Email Enviado!');\r\n        }).catch(err => {\r\n          alert('Erro com a conexão com encaminhador de Email. Entre em contato com o suporte.');\r\n        });\r\n      }).then(() => {\r\n        alert('Empresa Cancelada com Sucesso.');\r\n      }).catch(err => {\r\n        alert('Erro ao encaminhar Email de Cancelamento. Entre em contato com o suporte.');\r\n      })\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleCanceled({company}:{company:Company}){\r\n    confirmAlert({\r\n      title: `Deletar a Empresa ${company.name}`,\r\n      message: `Você tem certeza que deseja Deletar \"${company.name}\"?`,\r\n      buttons: [\r\n        {\r\n          label: 'Sim',\r\n          onClick: ()  => handleConfirmCanceled({company})\r\n        },\r\n        {\r\n          label: 'Não',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  async function handleConfirmActive({company}:{company:Company}){\r\n    api.put(`companies/${company.id}`,{\r\n      // 1 === Empresa ATIVA\r\n      is_active: 1,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n        fetch(`${mailer}/mailgun`,{\r\n          method: 'POST',\r\n          headers: { \r\n            'Content-Type': 'application/json',\r\n            'mode': 'node-cors'\r\n           }, \r\n          body: JSON.stringify({\r\n            host: host,\r\n            port: port,\r\n            fromEmail: fromEmail,\r\n            pass: pass,\r\n            toEmail: company.email,\r\n            title: 'Empresa Ativada',\r\n            message: 'Sua empresa Foi Ativada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.',\r\n            content: 'Sua empresa Foi Ativada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.'\r\n          })\r\n        }).then(() => {\r\n          alert('Email Enviado!');\r\n        }).catch(err => {\r\n          alert('Erro com a conexão com encaminhador de Email. Entre em contato com o suporte.');\r\n        });\r\n      }).then(() => {\r\n        alert('Empresa Ativada com Sucesso.');\r\n      }).catch(err => {\r\n        alert('Erro ao encaminhar Email de Ativação. Entre em contato com o suporte.');\r\n      })\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleActive({company}:{company:Company}){\r\n    confirmAlert({\r\n      title: `Ativar Empresa ${company.name}?`,\r\n      message: `Você tem certeza que deseja Ativar a Empresa ${company.name}?`,\r\n      buttons: [\r\n        {\r\n          label: 'Sim',\r\n          onClick: ()  => handleConfirmActive({company})\r\n        },\r\n        {\r\n          label: 'Não',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  // RENDERIZAR BOTOES NA TABELA ATIVAS(1) - INATIVAS(0) - CANCELADAS(2)\r\n  function renderButton({company}:{company:Company}){\r\n    if(active === 0){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({company})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active === 1){\r\n      return (\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({company})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleSetSearchCnpj(event:string){\r\n    setSearchCnpj(event);\r\n  }\r\n\r\n  function renderSearch(){\r\n    return (\r\n      <div className=\"search-button-row\">\r\n        <input className=\"search-input\" type=\"text\" placeholder=\"Procure CNPJ\" value={searchCnpj} onChange={event => handleSetSearchCnpj(event?.target.value)} />\r\n        <button className=\"aprove\" onClick={() => {}}>\r\n          <FiSearch size=\"13\" color=\"#FFF\" />\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function renderCommands(){\r\n    if(isCanceled){\r\n      return;\r\n    }else{\r\n      return (\r\n        <th className=\"noWrap td\">Comandos</th>\r\n      );\r\n    }\r\n  }\r\n\r\n  function renderPromos(){\r\n    if(isCanceled){\r\n      return;\r\n    }else{\r\n      return (\r\n        <th>Nº de Promoções</th>\r\n      );\r\n    }\r\n  }\r\n\r\n  // TABELA EM COMPONENTE\r\n  function renderTable(){\r\n    if(isLoading){\r\n      return (\r\n        <div>\r\n          <h1>CARREGANDO...</h1>\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <table id=\"companies\">\r\n        <tbody>\r\n        <tr>\r\n          <th>Empresa</th>\r\n          <th>Ramo</th>\r\n          <th>Palavras-Chaves</th>\r\n          <th>cnpj</th>\r\n          <th>Telefone</th>\r\n          { renderPromos() }\r\n          <th>Email</th>\r\n          <th>Endereço</th>\r\n          <th>Bairro</th>\r\n          <th>Cidade</th>\r\n          <th>UF</th>\r\n          <th>Foto</th>\r\n          { renderCommands() }\r\n        </tr>\r\n\r\n        {\r\n          isCanceled\r\n          ?\r\n          canceledCompanies.map(company => {\r\n            return (\r\n                <tr key={company.id}>\r\n                <td>{company.name}</td>\r\n                <td>{company.business}</td>\r\n                <td>{company.keywords}</td>\r\n                <td>{company.cnpj}</td>\r\n                <td>{company.phone}</td>\r\n                <td className=\"email-column\">{company.email}</td>\r\n                <td>{company.address}</td>\r\n                <td>{company.district}</td>\r\n                <td>{company.city}</td>\r\n                <td>{company.uf}</td>\r\n                <td onClick={() => handleExpandImage({company})}>\r\n                  <img \r\n                    src={base + ',' + company.image} \r\n                    style={{width: '30px',display: 'flex',justifyContent: 'center', cursor: 'pointer'}} \r\n                    className=\"landingImg\" alt=\"CompreMaisAki\" \r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })\r\n          :\r\n          companies.map(company => {\r\n            // ACTIVE MANIPULADO NO USESTATE()\r\n            if(company.is_active == active){\r\n              return(\r\n                  <tr key={company.id}>\r\n                  <td>{company.name}</td>\r\n                  <td>{company.business}</td>\r\n                  <td>{company.keywords}</td>\r\n                  <td>{company.cnpj}</td>\r\n                  <td>{company.phone}</td>\r\n                  <td>\r\n                    <PromoInput \r\n                      maxProm={company.max_prom} \r\n                      companyId={company.id} \r\n                      companyName={company.name} \r\n                      userToken={userToken}\r\n                    />\r\n                  </td>\r\n                  <td className=\"email-column\">{company.email}</td>\r\n                  <td>{company.address}</td>\r\n                  <td>{company.district}</td>\r\n                  <td>{company.city}</td>\r\n                  <td>{company.uf}</td>\r\n                  <td onClick={() => handleExpandImage({company})}>\r\n                    <img \r\n                      src={base + ',' + company.image} \r\n                      style={{width: '30px',display: 'flex',justifyContent: 'center', cursor: 'pointer'}} \r\n                      className=\"landingImg\" alt=\"CompreMaisAki\" \r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {renderButton({company})}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }else{\r\n              return;\r\n            }\r\n          })\r\n        }\r\n        \r\n        </tbody>\r\n      </table>\r\n      );\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar role={role} />\r\n      <main>\r\n        <UpperBar role={role} />\r\n        <div className=\"control-map\">\r\n\r\n          <h1 style={{fontSize:'22px'}}>Administração de Empresas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Canceladas</label>\r\n              <button onClick={() => handleViewCanceled()} id=\"button\">\r\n                <FiXCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n          <Modal\r\n            isOpen={modalIsOpen}\r\n            onRequestClose={closeModal}\r\n            className=\"Modal\"\r\n            contentLabel=\"Example Modal\"\r\n            overlayClassName=\"Overlay\"\r\n          >\r\n            <h2>Empresa {viewName}</h2>\r\n            <img src={base + ',' + viewImage} style={{width: '100%'}} />\r\n            <div>\r\n              <button className=\"modalButton\" onClick={closeModal}>FECHAR</button>\r\n            </div>\r\n          </Modal>\r\n          {renderSearch()}\r\n          {renderTitle()}\r\n          {renderTable()}\r\n\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Companies;",["147","148"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx",["149","150","151","152","153","154","155"],"import React, { useState, useEffect } from 'react';\r\nimport { FiAlertOctagon, FiCheck, \r\nFiCheckCircle, FiAlertCircle, FiBook } from 'react-icons/fi';\r\nimport Modal from 'react-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport Sidebar from '../../components/Sidebar';\r\nimport UpperBar from '../../components/UpperBar';\r\nimport Validation from '../../components/Validation';\r\nimport api from '../../services/api';\r\nimport { host, port, fromEmail, pass } from '../../services/email.json';\r\nimport { mailer } from '../../services/mailer.json';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/card.css';\r\nimport '../../styles/pages/card-columns.css';\r\n\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  description: string;\r\n  date: string;\r\n  company_id: number;\r\n  image: string;\r\n  validade: string;\r\n  discount: string;\r\n  is_active: number;\r\n}\r\n\r\ninterface Company {\r\n  id: number;\r\n  business: string;\r\n  cnpj: string;\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  address: string;\r\n  district: string;\r\n  city: string;\r\n  uf: string;\r\n  password: string;\r\n  image: string;\r\n  keywords: string;\r\n  is_active: number;\r\n  max_prom: number;\r\n}\r\n\r\nfunction Products(){\r\n  const userToken = localStorage.getItem('userToken');\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active, setActive] = useState(0);\r\n  const [validate] = useState('');\r\n  const [base] = useState('data:image/png;base64');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [role, setRole] = useState('');\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [viewImage, setViewImage] = useState('');\r\n  const [viewName, setViewName] = useState('');\r\n\r\n  async function getRoles(){\r\n    api.get('admin/tk',{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(res => {\r\n      setRole(res.data.role);\r\n    }).catch(err => {\r\n      setRole('guest');\r\n    });\r\n  }\r\n\r\n  async function getProducts(){\r\n    api.get('products/all').then(products => {\r\n      setProducts(products.data);\r\n    }).catch(err => {\r\n      const errorstring = String(err);\r\n      const res = errorstring.replace(/\\D/g,'');\r\n      if(res == '404'){\r\n        return\r\n      }else{\r\n        alert('Problema na conexão.');\r\n      }\r\n    })\r\n  }\r\n\r\n  async function getCompanies(){\r\n    api.get('companies').then(res => {\r\n      setCompanies(res.data);\r\n    }).catch(err => {\r\n      alert('Erro ao Acessar as Empresas, verifique sua conexão');\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isLoading) return;\r\n\r\n    getRoles();\r\n    getProducts();\r\n    getCompanies();\r\n    \r\n    setIsLoading(false);\r\n  }, [getProducts]);\r\n\r\n  function openModal({product}:{product:Product}) {\r\n    setIsOpen(true);\r\n    setViewImage(`${product.image}`);\r\n    setViewName(`${product.name}`);\r\n  }\r\n\r\n  function closeModal(){\r\n    setIsOpen(false);\r\n    setViewImage('');\r\n    setViewName('');\r\n  }\r\n\r\n    //----RENDERIZAR TÍTULO DA TABELA\r\n  function renderTitle(){\r\n    if(active === 0){\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Promoções Inativas</h1>\r\n      )\r\n    }else{\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Promoções Ativas</h1>  \r\n      )\r\n    }\r\n  }\r\n\r\n  \r\n  async function handleExpandImage({product}:{product:Product}){\r\n    openModal({product});\r\n  }\r\n\r\n  async function handleConfirmCanceled({product}:{product:Product}){\r\n    const email = companies.map(company => {\r\n      if(product.company_id === company.id){\r\n        return company.email\r\n      }\r\n    });\r\n    api.delete(`products/${product.id}`,{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products/all').then(res => {\r\n        setProducts(res.data);\r\n        fetch(`${mailer}/mailgun`,{\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            host: host,\r\n            port: port,\r\n            fromEmail: fromEmail,\r\n            pass: pass,\r\n            toEmail: /*WE NEED TO INSEERT HERE*/'',\r\n            title: 'Produto Cancelado',\r\n            message: `A Promoção ${product.name} Foi Inativada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.`,\r\n            content: `A Promoção ${product.name} Foi Inativada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.`\r\n          })\r\n        })\r\n      })\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  //---CANCEL/ACTIVE/INACTIVE BUTTON FUNCTIONS---//\r\n  async function handleCanceled({product}:{product:Product}){\r\n    confirmAlert({\r\n      title: `Deletar ${product.name}`,\r\n      message: `Você tem certeza que deseja Deletar a Promoção ${product.name}`,\r\n      buttons: [\r\n        {\r\n          label: 'Sim',\r\n          onClick: ()  => handleConfirmCanceled({product})\r\n        },\r\n        {\r\n          label: 'Não',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  async function handleConfirmActive({product}:{product:Product}){\r\n    const email = companies.map(company => {\r\n      if(product.company_id === company.id){\r\n        return company.email\r\n      }\r\n    });\r\n    api.put(`products/${product.id}`,{\r\n      is_active: 1,\r\n      validate: validate\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(res => {\r\n      api.get('products/all').then(res => {\r\n        setProducts(res.data);\r\n        fetch(`${mailer}/mailgun`,{\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            host: host,\r\n            port: port,\r\n            fromEmail: fromEmail,\r\n            pass: pass,\r\n            toEmail: email,\r\n            title: 'Produto Ativado',\r\n            message: `A Promoção ${product.name} Foi Ativado Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.`,\r\n            content: `A Promoção ${product.name} Foi Ativado Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.`\r\n          })\r\n        });\r\n      })\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleActive({product}:{product:Product}){\r\n    confirmAlert({\r\n      title: `Ativar a Promoção ${product.name}`,\r\n      message: `Deseja Ativar a Promoção ${product.name}?`,\r\n      buttons: [\r\n        {\r\n          label: 'Sim',\r\n          onClick: ()  => handleConfirmActive({product})\r\n        },\r\n        {\r\n          label: 'Não',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  async function handleConfirmInactive({product}:{product:Product}){\r\n    const email = companies.map(company => {\r\n      if(product.company_id === company.id){\r\n        return company.email\r\n      }\r\n    });\r\n    api.put(`products/${product.id}`,{\r\n      is_active: 0,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products/all').then(res => {\r\n        setProducts(res.data);\r\n      fetch(`${mailer}/mailgun`,{\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          host: host,\r\n          port: port,\r\n          fromEmail: fromEmail,\r\n          pass: pass,\r\n          toEmail: email,\r\n          title: 'Promoção Desativada',\r\n          message: `A Promoção ${product.name} Foi Desativada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.`,\r\n          content: `A Promoção ${product.name} Foi Desativada Pelo Administrador. Entre em contato com o Suporte pelo Aplicativo para mais informações.`\r\n        })\r\n      })\r\n      }).catch(() => {\r\n        alert('Erro ao Encaminhar o email de informação.');\r\n      })\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleInactive({product}:{product:Product}){\r\n    confirmAlert({\r\n      title: `Desativar a Promoção ${product.name}`,\r\n      message: `Deseja Desativar a Promoção ${product.name}?`,\r\n      buttons: [\r\n        {\r\n          label: 'Sim',\r\n          onClick: ()  => handleConfirmInactive({product})\r\n        },\r\n        {\r\n          label: 'Não',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  //----VIEWS----///\r\n  async function handleViewInactive(){\r\n    setActive(0)\r\n  }\r\n\r\n  async function handleViewActive(){\r\n    setActive(1)\r\n  }\r\n\r\n  // RENDERIZAR BOTOES NA TABELA ATIVAS(1) - INATIVAS(0) - NAO POSSUI CANCELADAS\r\n  function renderButton({product}:{product:Product}){\r\n    if(active === 0){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({product})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n              \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({product})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active === 1){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({product})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n              \r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({product})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  //-----(PENDENT)SORT-----//\r\n  //async function handleViewPerDesc(){\r\n  //  alert('DESC');\r\n  //}\r\n\r\n  //async function handleViewPerCompany(){\r\n  //  alert('Company');\r\n  //}\r\n\r\n  //async function handleViewAlpha(){\r\n  //  alert('AZ');\r\n  //}\r\n\r\n  //async function handleViewPerPrice(){\r\n  // alert('Price');\r\n  //}\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      \r\n      <Sidebar role={role} />\r\n      <main>\r\n      <UpperBar role={role} />\r\n        <div className=\"control-map\">\r\n\r\n          <h1 style={{fontSize:'22px'}}>Novas Promoções Cadastradas</h1>\r\n\r\n          {/*<div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Últimas</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiLayers size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Empresas</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiBookOpen size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">A-Z</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiArrowDownCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Preço</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiDollarSign size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>*/}\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n            <Modal\r\n              isOpen={modalIsOpen}\r\n              onRequestClose={closeModal}\r\n              className=\"Modal\"\r\n              contentLabel=\"Example Modal\"\r\n              overlayClassName=\"Overlay\"\r\n            >\r\n              <h2>Promoção {viewName}</h2>\r\n              <img src={base + ',' + viewImage} style={{width: '100%'}} alt=\"CompreMaisAki\" />\r\n              <div>\r\n                <button className=\"modalButton\" onClick={closeModal}>FECHAR</button>\r\n              </div>\r\n            </Modal>\r\n            {renderTitle()}\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Produto</th>\r\n              <th>Preco</th>\r\n              <th>Descricao</th>\r\n              <th>Data</th>\r\n              <th>Empresa</th>\r\n              <th>Validade</th>\r\n              <th>Desconto</th>\r\n              <th>Imagem</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {products.map(product => {\r\n              if(product.is_active === active){\r\n                return(\r\n                    <tr key={product.id}>\r\n                    <td>{product.name}</td>\r\n                    <td>R$ {product.price}</td>\r\n                    <td>{product.description}</td>\r\n                    <td>{product.date}</td>\r\n                    <td>\r\n                      {companies.map(company =>\r\n                        company.id === product.company_id?\r\n                        <p>{company.name}</p>\r\n                        :\r\n                        <p></p>\r\n                        )}\r\n                    </td>\r\n                    <td>\r\n                      <Validation \r\n                        active={active} \r\n                        validate={product.validade}\r\n                        promoName={product.name}\r\n                        productId={product.id}\r\n                        userToken={userToken}\r\n                      />\r\n                    </td>\r\n                    <td>{product.discount} %</td>\r\n                    <td onClick={() => handleExpandImage({product})}>\r\n                      <img \r\n                        src={base + ',' + product.image} \r\n                        style={{display: 'flex', justifyContent: 'center', width: '30px', cursor: 'pointer'}} \r\n                        className=\"landingImg\" \r\n                        alt=\"CompreMaisAki\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      {renderButton({product})}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }\r\n            })}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n        \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;","C:\\Users\\Habil\\ProjectHabil\\web\\src\\App.tsx",[],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Client.tsx",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\index.tsx",[],["182","183"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Activate.tsx",["184","185","186","187","188","189"],"import React, {  useState } from 'react';\r\nimport { FiSend } from 'react-icons/fi'\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/confirm.css';\r\n\r\nimport logoImg from '../images/cmatextlogo.png';\r\nimport tokenCredentials from '../services/token.json';\r\n\r\n//---CRIAR USEEFFECT PARA RETURN(<P>LOADING...<P>);\r\nfunction Landing(props:any) {\r\n  const [company, setCompany] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const tokenUsername = tokenCredentials.username;\r\n  const tokenPassword = tokenCredentials.password;\r\n  const tokenGrantType = tokenCredentials.grant_type;\r\n\r\n  //CORRIGIR MODELO PARA REACT-ROUTER-DOM\r\n  async function handleConfirm(){\r\n    const params = new URLSearchParams();\r\n    params.append('username', tokenUsername)\r\n    params.append('password', tokenPassword)\r\n    params.append('grant_type', tokenGrantType)\r\n\r\n    const response = await api.post('token',params);\r\n    const userToken = response.data.access_token;\r\n\r\n    if(company == '' || company == ' ' || company == undefined){\r\n      alert('CNPJ INVÁLIDO');\r\n      return;\r\n    }\r\n\r\n    if(password == '' || password == ' ' || password == undefined){\r\n      alert('SENHA INVÁLIDA');\r\n      return;\r\n    }\r\n    \r\n      api.post('companies/logon/inativo',{\r\n        cnpj: company,\r\n        password: password\r\n      },{\r\n        headers: {'Authorization': 'Bearer '+userToken} \r\n      }).then(() => {\r\n        api.put(`companies/${props.match.params.id}`,{\r\n          is_active: 1\r\n        },{\r\n          headers: {'Authorization': 'Bearer '+userToken}\r\n        }).then(() => {\r\n          alert(\"Sucesso! Aguarde a confirmacão do Administrador para acessar o Aplicativo e cadastrar suas promoções\");\r\n          window.location.href = '/';\r\n        }).catch(err => {\r\n          alert(\"Ops! Tivemos um Erro de Servidor, entre em contato com o Suporte.\");\r\n          return;\r\n        })\r\n      }).catch(err => {\r\n        alert(\"Ops! Tivemos um Erro de Servidor, entre em Contato com o Suporte.\");\r\n        return;\r\n      })\r\n      \r\n      \r\n  }\r\n\r\n  return (\r\n    <div id=\"confirm-container\">\r\n      <div className=\"content-wrapper\">\r\n\r\n        <main>\r\n          <h1>Confirme seu Email</h1>\r\n          <p><img src={logoImg} className=\"landingImg\" alt=\"CompreMaisAki\" /></p>\r\n\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"about\">CNPJ:</label>\r\n            <input \r\n              id=\"company\" \r\n              maxLength={300}\r\n              value={company}\r\n              onChange={event => setCompany(event.target.value)} />\r\n          </div>\r\n\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"name\">Senha:</label>\r\n            <input \r\n              //type=\"password\"\r\n              id=\"name\" \r\n              value={password} \r\n              onChange={event => setPassword(event.target.value)} /> \r\n          </div>\r\n\r\n          <button type=\"button\" onClick={() => handleConfirm()} className=\"confirm-app\">\r\n            <FiSend size=\"26\" color=\"#fff\" />\r\n          </button>\r\n\r\n        </main>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Landing;",["190","191"],"C:\\Users\\habil\\ProjectHabil\\web\\src\\routes.tsx",[],"C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\Companie.tsx",["192"],"C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\Activate.tsx",["193","194","195","196","197","198"],"C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"C:\\Users\\habil\\ProjectHabil\\web\\src\\components\\Sidebar.tsx",["220","221"],"C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\private\\Forgot.tsx",["222","223","224","225","226","227"],"C:\\Users\\habil\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx",["228","229","230","231","232","233","234","235","236"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Companie.tsx",["237"],"interface Companie {\r\n  id: number,\r\n}\r\n\r\n//CLIENT SIDE TODO\r\nfunction Companie(props:any) {\r\n    return <h1>Hello {props.match.params.id}!</h1>;\r\n}\r\n\r\nexport default Companie;\r\n  ","C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\PromoInput.tsx",["238"],"import React, { useState, useEffect } from 'react';\r\nimport { FiSend } from 'react-icons/fi';\r\nimport api from '../services/api';\r\n\r\nexport default function PromoInput({maxProm, companyId, companyName,userToken}:any){\r\n  const [company_id] = useState(companyId);\r\n  const [company_name] = useState(companyName);\r\n  const [maxPromProto, setMaxPromProto] = useState(maxProm);\r\n  const [user_token] = useState(`${userToken}`);\r\n  function handleSetMaxProm(maxProm:any, event:string){\r\n    setMaxPromProto(event);\r\n  }\r\n  async function handleSend(){\r\n    api.put(`companies/${company_id}`,{\r\n      max_prom: maxPromProto,\r\n      is_active: 1,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+user_token}\r\n    }).then(res => {\r\n      alert(`Limite de Promoções alteradas na empresa ${company_name}`)\r\n    }).catch(err => {\r\n      alert(err);\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"max-promo-row\">\r\n      <div className=\"max-promo-col\">\r\n        <input className=\"max-promo-input\" type=\"number\" value={maxPromProto} onChange={event => handleSetMaxProm(maxProm, event.target.value)} />\r\n      </div>\r\n      <div className=\"max-promo-col\">\r\n          <button className=\"aprove\" onClick={() => handleSend()}>\r\n            <FiSend size=\"13\" color=\"#FFF\" />\r\n          </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}","C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\Validation.tsx",["239","240"],"import React, { useState, useEffect } from 'react';\r\nimport { FiSend } from 'react-icons/fi';\r\nimport api from '../services/api';\r\n\r\nexport default function Validation({validate, productId, userToken, promoName, active}:any){\r\n  const [validateProto, setValidateProto] = useState('');\r\n  const [promo_name] = useState(`${promoName}`)\r\n  const [user_token] = useState(`${userToken}`);\r\n  const [product_id] = useState(`${productId}`);\r\n\r\n  useEffect(() => {\r\n    if(active == '1'){\r\n      setValidateProto(validate)\r\n    }else{\r\n      var days = 7;\r\n      var date = new Date();\r\n      var res = date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n    \r\n      var data = new Date(res),\r\n        dia = data.getDate().toString().padStart(2, '0'),\r\n        mes = (data.getMonth()+1).toString().padStart(2, '0'),\r\n        ano = data.getFullYear();\r\n        const dateBrPattern = `${ano}-${mes}-${dia}`;\r\n        setValidateProto(dateBrPattern);\r\n    }\r\n  },[]);\r\n\r\n  function handleSend(){\r\n    api.put(`products/${product_id}`,{\r\n      validade: validateProto,\r\n      is_active: 1,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+user_token}\r\n    }).then(res => {\r\n      alert(`Validade da Promoção ${promo_name} alterada.`);\r\n    }).catch(err => {\r\n      alert(err);\r\n    })\r\n  }\r\n\r\n  function handleSetValidate(event:string){\r\n    setValidateProto(event);\r\n  }\r\n\r\n  return(\r\n    <div className=\"validation-row\">\r\n      <input className=\"validate-input\" type=\"date\" value={validateProto} onChange={event => handleSetValidate(event.target.value)} />\r\n      <button className=\"aprove\" onClick={() => handleSend()}>\r\n        <FiSend size=\"13\" color=\"#FFF\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Habil\\ProjectHabil\\web\\src\\services\\api.ts",[],["241","242"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Welcome.tsx",["243"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\UpperBar.tsx",["244"],"import React from 'react';\r\nimport { FaKey } from 'react-icons/fa';\r\nimport { FiArrowLeft, FiArrowRight, FiHome, FiUser } from 'react-icons/fi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Img from '../images/adaptive-icon.png';\r\nimport '../styles/components/upperbar.css';\r\n\r\ninterface Moderator {\r\n  role: any;\r\n}\r\n\r\nexport default function ({role} : Moderator){\r\n\r\n  function renderModeratorsButton(){\r\n\t\tif(role === 'adm'){\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"upper-button-block\">\r\n\t\t\t\t<\tlabel>Moderadores</label>\r\n\t\t\t\t\t<Link to=\"/Moderators\" className=\"upper-enter-path\">\r\n\t\t\t\t\t\t<FiUser size=\"26\" color=\"white\" />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className=\"app-header\">\r\n\r\n\t\t\t<div className=\"upper-button-wrapper\">\r\n\r\n\t\t\t<div className=\"upper-button-block\">\r\n\t\t\t\t<label>Início</label>\r\n        <Link to=\"/app\" className=\"upper-enter-path\">\r\n          <FiHome size={24} color=\"white\" />\r\n        </Link>\r\n      </div>\r\n\r\n\t\t\t\t{renderModeratorsButton()}\r\n\r\n\t\t\t\t<div className=\"upper-button-block\">\r\n\t\t\t\t\t<label>Empresas</label>\r\n          <Link to=\"/companies\" className=\"upper-enter-path\">\r\n            <FiArrowRight size=\"26\" color=\"white\" />\r\n          </Link>\r\n        </div>\r\n\r\n\t\t\t\t<img src={Img} alt='Habil' />\r\n\r\n\t\t\t\t<div className=\"upper-button-block\">\r\n\t\t\t\t\t<label>Promoções</label>\r\n          <Link to=\"/products\" className=\"upper-enter-path\">\r\n            <FiArrowRight size=\"26\" color=\"white\" />\r\n          </Link>\r\n        </div>\r\n\r\n\t\t\t\t<div className=\"upper-button-block\">\r\n          <label>Senhas</label>\r\n          <Link to=\"/forgot\" className=\"upper-enter-path\">\r\n            <FaKey size=\"26\" color=\"white\" />\r\n          </Link>\r\n        </div>\r\n\r\n\t\t\t\t<div className=\"upper-button-block\">\r\n\t\t\t\t\t<label>Sair</label>\r\n\t\t\t\t\t<Link to=\"/\" className=\"upper-enter-path\">\r\n\t\t\t\t\t\t<FiArrowLeft size={24} color=\"#FFF\" />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</header>\r\n\t)\r\n\r\n}",["245","246"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Privacy.tsx",["247"],"import React, {  useState } from 'react';\r\n\r\nimport '../styles/pages/confirm.css';\r\n\r\nimport logoImg from '../images/cmatextlogo.png';\r\n\r\n//---CRIAR USEEFFECT PARA RETURN(<P>LOADING...<P>);\r\nfunction Privacy() {\r\n\r\n  return (\r\n    <div id=\"confirm-container\">\r\n      <div className=\"content-wrapper\">\r\n\r\n        <main>\r\n            <h1>Política de Privacidade</h1>\r\n            <p><img src={logoImg} className=\"landingImg\" alt=\"CompreMaisAki\" /></p>\r\n            <br></br>\r\n            <br></br>\r\n            <ul>\r\n                <li>Informações Gerais</li>\r\n                <br></br>\r\n                <br></br>\r\n            <p>A Presente Política de Privacidade contém informações a respeito do modo como</p>\r\n            <p>tratamos, total ou parcialmente, de forma automatizada ou não, os dados</p>\r\n            <p>pessoais dos usuários que acessam o aplicativo CompremaisAki. Seu objetivo é</p>\r\n            <p>esclarecer os interessados acerca dos tipos de dados que são coletados, dos</p>\r\n            <p>motivos da coleta e da forma como o usuário poderá atualizar, gerenciar ou</p>\r\n            <p>excluir estas informações.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>O presente documento foi elaborado em conformidade com a Lei Geral de</p>\r\n            <p>Proteção de Dados Pessoais (Lei 13.709/18) e o Marco Civil da</p>\r\n            <p>Internet (Lei 12.965/14) Ainda, o documento poderá ser atualizado em</p>\r\n            <p>decorrência de eventual atualização normativa, razão pela qual se convida o</p>\r\n            <p>usuário a consultar periodicamente esta seção.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Coleta de dados do usuário</li>\r\n                <br></br>\r\n                <br></br>\r\n\r\n            <p>A Política de Privacidade do aplicativo CompremaisAki inclui assegurar que seus</p>\r\n            <p>dados pessoais não serão divulgados a terceiros para fins comerciais, ficando</p>\r\n            <p>restritos à Prefeitura Municipal de Nova Santa Rita.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Quando e quais dados são coletados</li>\r\n                <br></br>\r\n                <br></br>\r\n\r\n            <p> Os dados pessoais do usuário são recolhidos pelo aplicativo CompreMaisAki</p>\r\n            <p>das seguinte formas:</p>\r\n            <br></br>\r\n            <br></br>\r\n            <ul>\r\n                <li>\r\n                    <p>Quando o usuário da empresa se cadastra no aplicativo: esses dados são os dados de</p>\r\n                    <p>identificação básicos de Razão Social, CNPJ, Ramo Empresarial, e-mail, Telefone, Endereço e Imagem da Empresa.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Quando o usuário da empresa atualiza seus dados do aplicativo: neste caso o aplicativo</p>\r\n                    <p>pode solicitar os dados de Razão Social, CNPJ, Ramo Empresarial, e-mail, Telefone, Endereço e Imagem da Empresa.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Quando um usuário acessa o aplicativo: neste caso o aplicativo pode</p>\r\n                    <p>coletar os dados de localização do usuário ou do local da ocorrência da</p>\r\n                    <p>solicitação, através do Google. Além disso, serão coletados todos os dados</p>\r\n                    <p>preenchidos nos formulários pelo usuário, referentes à cada tipo de serviço</p>\r\n                    <p>solicitado.</p>\r\n                </li>\r\n            </ul>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Para que finalidades utilizamos os dados pessoais do usuário</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Os dados pessoais do usuário coletados e armazenados pelo aplicativo</p>\r\n            <p>CompreMaisAki tem por finalidade:</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <ul>\r\n                <li>\r\n                    <p>Identificar o usuário de modo a garantir que as solicitações sejam abertas</p>\r\n                    <p>corretamente;</p>\r\n                </li>\r\n                <li>\r\n                    <p>Facilitar e agilizar as compras de fornecedores de produtos e serviços com</p>\r\n                    <p>sede no Município de Nova Santa Rita;</p>\r\n                </li>\r\n                <li>\r\n                    <p>Permitir o acesso do usuário a determinados conteúdos do aplicativo,</p>\r\n                    <p>exclusivo para usuários cadastrados;</p>\r\n                </li>\r\n            </ul>\r\n            <br></br>\r\n            <br></br>\r\n\r\n\r\n            <p>O tratamento de dados pessoais para finalidades não previstas nesta Política de</p>\r\n            <p>Privacidade somente ocorrerá mediante comunicação prévia ao usuário, de modo</p>\r\n            <p>que os direitos e obrigações aqui previstos permanecem aplicáveis.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Dados sensíveis</li>\r\n\r\n            <p><b>Não</b> serão coletados dados sensíveis dos usuários, assim entendidos aqueles </p>\r\n            <p>definidos nos arts. 9º e 10 do RGDP e nos arts. 11 e seguintes da Lei de Proteção </p>\r\n            <p>de Dados Pessoais. Assim, dentre outros, não haverá coleta dos seguintes casos:</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <ul>\r\n                <li>\r\n                    <p>Dados que revelem a origem racial ou étnica, as opiniões políticas, as</p>\r\n                    <p>convicções religiosas ou filosóficas, ou a filiação sindical do usuário;</p>\r\n                </li>\r\n                <li>\r\n                    <p>Dados Genéticos;</p>\r\n                </li>\r\n                <li>\r\n                    <p>Dados relativos à saúde do usuário;</p>\r\n                </li>\r\n                <li>\r\n                    <p>Dados relativos à vida sexual ou à orientação sexual do usuário;</p>\r\n                </li>\r\n                <li>\r\n                    <p>Dados relacionados a condenações penais ou a infrações ou com medidas</p>\r\n                    <p>de segurança conexas.</p>\r\n                </li>\r\n            </ul>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Armazenamento de dados</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Os dados de uma solicitação e do solicitante são armazenados em um </p>\r\n            <p>servidor de domínio contratado pela PMNSR.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>O aplicativo CompremaisAki permite a recuperação de Login e Senha cuja senha de</p>\r\n            <p>acesso tenha sido esquecida pelo usuário. Esse procedimento estará visível no</p>\r\n            <p>aplicativo, e será acionado por meio do fornecimento do e-mail cadastrado pelo</p>\r\n            <p>usuário.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Segurança dos dados pessoais armazenados</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>O aplicativo se compromete a aplicar as medidas técnicas e organizativas aptas</p>\r\n            <p>a proteger os dados pessoais de acessos não autorizados e de situações de</p>\r\n            <p>destruição, perda, alteração, comunicação ou difusão de tais dados.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Os dados pessoais armazenados são tratados com confidencialidade, dentro dos</p>\r\n            <p>limites legais. No entanto, podemos divulgar suas informações pessoais caso</p>\r\n            <p>sejamos obrigados pela lei para fazê-lo ou se você violar nossos Termos de</p>\r\n            <p>Serviço.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Tempo de armazenamento dos dados</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Os dados pessoais do usuário são armazenados pelo aplicativo, por tempo</p>\r\n            <p>indeterminado e durante o período necessário para a prestação do serviço ou o</p>\r\n            <p>cumprimento das finalidades previstas no presente documento e termo de uso,</p>\r\n            <p>conforme o disposto no inciso I do artigo 15 da Lei 13.709/18.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Os dados podem ser removidos ou inativados a pedido do usuário,</p>\r\n            <p>excetuando os casos em que a lei oferecer outro tratamento.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Ainda, os dados pessoais dos usuários apenas podem ser conservados após o</p>\r\n            <p>término de seu tratamento nas seguintes hipóteses previstas no artigo 16 da</p>\r\n            <p>referida lei:</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <ol type=\"I\">\r\n                <li>\r\n                    <p>cumprimento de obrigação legal ou regulatória pelo controlador;</p>\r\n                </li>\r\n                <li>\r\n                    <p>estudo por órgão de pesquisa, garantida, sempre que possível, a</p>\r\n                    <p>anonimização dos dados pessoais;</p>\r\n                </li>\r\n                <li>\r\n                    <p>transferência a terceiro, desde que respeitados os requisitos de tratamento de</p>\r\n                    <p>dados dispostos nesta Lei;</p>\r\n                </li>\r\n                <li>\r\n                    <p>uso exclusivo do controlador, vedado seu acesso por terceiro, e desde que</p>\r\n                    <p>inativados os dados.</p>\r\n                </li>\r\n            </ol>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Do tratamento dos dados pessoais</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <h2>4.1. Do responsável pelo tratamento dos dados (data controller)</h2>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>O controlador, responsável pelo tratamento dos dados pessoais do usuário, é a</p>\r\n            <p>pessoa física ou jurídica, a autoridade pública, a agência ou outro organismo que,</p>\r\n            <p>individualmente ou em conjunto com outras, determina as finalidades e os meios</p>\r\n            <p>de tratamento dos dados pessoais.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Neste aplicativo, o responsável pelo tratamento dos dados pessoais coletados é a</p>\r\n            <p>Secretaria de Indústria, Comércio e Desenvolvimento da Prefeitura Municipal de Nova Santa Rita e as</p>\r\n            <p>solicitações abertas pelo aplicativo são tratadas pelos órgãos públicos municipais</p>\r\n            <p>competentes, referentes a cada tipo de serviço solicitado. Tanto a secretaria</p>\r\n            <p>quando os órgãos citados, são partes componentes da PMNSR.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <h2>4.2. Do operador de dados subcontratado (data processor)</h2>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>O operador de dados subcontratado é a pessoa física ou jurídica, a autoridade</p>\r\n            <p>pública, a agência ou outro organismo que trata os dados pessoais sob</p>\r\n            <p>supervisão do responsável pelo tratamento dos dados do usuário.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Informamos que a Empresa Hábil Informática, CNPJ 02.048.638/0001-28 não</p>\r\n            <p>representa a entidade governamental da PMNSR – Prefeitura Municipal de Nova</p>\r\n            <p>Santa Rita, estando isenta de qualquer movimento de abrangência que preconiza,</p>\r\n            <p>sobretudo, a abertura das medidas possíveis dos dados constantes do aplicativo,</p>\r\n            <p>atuando exclusivamente de maneira a viabilizar o adequado funcionamento do</p>\r\n            <p>aplicativo em nuvem da plataforma.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Cancelamento de Cadastro</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>No caso de cancelamento do cadastro, o registro dos dados fornecidos continua</p>\r\n            <p>armazenado por tempo indeterminado.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Compartilhamento de dados</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>O compartilhamento de dados do usuário ocorre apenas nos casos essenciais</p>\r\n            <p>para o atendimento das finalidades do aplicativo. Os dados não ficarão</p>\r\n            <p>disponíveis publicamente para outros usuários fora da hipótese acima.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Dever de não fornecer dados a terceiros</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Durante a utilização do aplicativo, a fim de resguardar e de proteger os direitos de</p>\r\n            <p>terceiros, o usuário do aplicativo deverá fornecer somente seus dados pessoais e</p>\r\n            <p>não os de terceiros.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Cookies ou dados de navegação</li>\r\n\r\n            <p>Os cookies referem-se a arquivos de onde ficam armazenadas as</p>\r\n            <p>informações relacionadas à navegação do usuário no aplicativo. Tais</p>\r\n            <p>informações são relacionadas aos dados de acesso como local e horário</p>\r\n            <p>de acesso e são armazenadas para que o servidor da plataforma possa lê-</p>\r\n            <p>las posteriormente a fim de personalizar os serviços oferecidos.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>O usuário do aplicativo CompreMaisAki manifesta conhecer e aceitar que pode</p>\r\n            <p>ser utilizado um sistema de coleta de dados de navegação mediante à utilização</p>\r\n            <p>de cookies.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Responsabilidade dos usuários no fornecimento de dados pessoais</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Ao aceitar esta Política de Privacidade, você declara que todas as informações</p>\r\n            <p>fornecidas ao aplicativo móvel CompreMaisAki são verdadeiras, exatas, atuais e</p>\r\n            <p>completas, pois é uma obrigação do usuário atualizá-las para manter a</p>\r\n            <p>veracidade e a exatidão das informações.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Alterações para essa política de privacidade</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>A presente versão desta Política de Privacidade foi atualizada pela última vez em</p>\r\n            <p>18 de junho de 2021. Reservamos o direito de modificar este documento a</p>\r\n            <p>qualquer momento, então, é recomendável que o usuário revise-a com</p>\r\n            <p>frequência.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Diante da fusão ou venda do aplicativo à outra empresa, os dados dos usuários</p>\r\n            <p>podem ser transferidas para os novos proprietários para que a permanência dos</p>\r\n            <p>serviços oferecidos.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Ao utilizar o serviço ou fornecer informações pessoais após eventuais</p>\r\n            <p>modificações, o usuário demonstra sua concordância com as novas normas.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Consentimento</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>Ao utilizar os serviços e fornecer as informações pessoais na plataforma, o </p>\r\n            <p>usuário está consentindo com a presente Política de Privacidade e ao cadastrar-</p>\r\n            <p>se, manifesta conhecer e pode exercitar seus direitos de cancelar seu cadastro,</p>\r\n            <p>acessar e atualizar seus dados pessoais e garante a veracidade das informações</p>\r\n            <p>por ele disponibilizadas.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>O usuário tem direito de retirar o seu consentimento a qualquer tempo, para tanto </p>\r\n            <p>deve entrar em contato através do email: ajuda@novasantarita.net.br.</p>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <li>Dúvidas, descumprimentos e denúncias de uso indevido</li>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p>A competência para o conhecimento, processamento ou julgamento de qualquer</p>\r\n            <p>feito judicial envolvendo a presente Política de Privacidade será do foro da</p>\r\n            <p>comarca de Canoas, renunciando-se expressamente a qualquer outro foro, por</p>\r\n            <p>mais privilegiado que seja. Para a solução de controvérsias decorrentes do</p>\r\n            <p>presente instrumento será aplicado integralmente o Direito brasileiro.</p>\r\n            </ul>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Privacy;",{"ruleId":"248","severity":1,"message":"249","line":55,"column":5,"nodeType":"250","endLine":55,"endColumn":7,"suggestions":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"248","severity":1,"message":"256","line":64,"column":8,"nodeType":"250","endLine":64,"endColumn":10,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":68,"column":19,"nodeType":"260","messageId":"261","endLine":68,"endColumn":21},{"ruleId":"258","severity":1,"message":"259","line":176,"column":21,"nodeType":"260","messageId":"261","endLine":176,"endColumn":23},{"ruleId":"252","replacedBy":"262"},{"ruleId":"254","replacedBy":"263"},{"ruleId":"248","severity":1,"message":"249","line":71,"column":6,"nodeType":"250","endLine":71,"endColumn":8,"suggestions":"264"},{"ruleId":"258","severity":1,"message":"259","line":145,"column":32,"nodeType":"260","messageId":"261","endLine":145,"endColumn":34},{"ruleId":"258","severity":1,"message":"259","line":145,"column":68,"nodeType":"260","messageId":"261","endLine":145,"endColumn":70},{"ruleId":"265","severity":1,"message":"266","line":158,"column":13,"nodeType":"267","messageId":"268","endLine":158,"endColumn":20},{"ruleId":"252","replacedBy":"269"},{"ruleId":"254","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"275","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"249","line":81,"column":6,"nodeType":"250","endLine":81,"endColumn":8,"suggestions":"276"},{"ruleId":"258","severity":1,"message":"259","line":433,"column":34,"nodeType":"260","messageId":"261","endLine":433,"endColumn":36},{"ruleId":"265","severity":1,"message":"266","line":467,"column":15,"nodeType":"267","messageId":"268","endLine":467,"endColumn":22},{"ruleId":"277","severity":1,"message":"278","line":521,"column":13,"nodeType":"279","endLine":521,"endColumn":73},{"ruleId":"252","replacedBy":"280"},{"ruleId":"254","replacedBy":"281"},{"ruleId":"258","severity":1,"message":"259","line":81,"column":14,"nodeType":"260","messageId":"261","endLine":81,"endColumn":16},{"ruleId":"248","severity":1,"message":"249","line":105,"column":6,"nodeType":"250","endLine":105,"endColumn":19,"suggestions":"282"},{"ruleId":"271","severity":1,"message":"283","line":138,"column":11,"nodeType":"273","messageId":"274","endLine":138,"endColumn":16},{"ruleId":"265","severity":1,"message":"284","line":138,"column":41,"nodeType":"285","messageId":"286","endLine":138,"endColumn":43},{"ruleId":"265","severity":1,"message":"284","line":187,"column":41,"nodeType":"285","messageId":"286","endLine":187,"endColumn":43},{"ruleId":"265","severity":1,"message":"284","line":238,"column":41,"nodeType":"285","messageId":"286","endLine":238,"endColumn":43},{"ruleId":"265","severity":1,"message":"284","line":439,"column":35,"nodeType":"285","messageId":"286","endLine":439,"endColumn":37},{"ruleId":"271","severity":1,"message":"287","line":17,"column":11,"nodeType":"273","messageId":"274","endLine":17,"endColumn":20},{"ruleId":"271","severity":1,"message":"288","line":49,"column":10,"nodeType":"273","messageId":"274","endLine":49,"endColumn":25},{"ruleId":"271","severity":1,"message":"289","line":50,"column":10,"nodeType":"273","messageId":"274","endLine":50,"endColumn":24},{"ruleId":"258","severity":1,"message":"290","line":135,"column":18,"nodeType":"260","messageId":"261","endLine":135,"endColumn":20},{"ruleId":"258","severity":1,"message":"290","line":180,"column":15,"nodeType":"260","messageId":"261","endLine":180,"endColumn":17},{"ruleId":"258","severity":1,"message":"290","line":180,"column":29,"nodeType":"260","messageId":"261","endLine":180,"endColumn":31},{"ruleId":"258","severity":1,"message":"290","line":184,"column":26,"nodeType":"260","messageId":"261","endLine":184,"endColumn":28},{"ruleId":"258","severity":1,"message":"290","line":188,"column":25,"nodeType":"260","messageId":"261","endLine":188,"endColumn":27},{"ruleId":"258","severity":1,"message":"290","line":188,"column":43,"nodeType":"260","messageId":"261","endLine":188,"endColumn":45},{"ruleId":"258","severity":1,"message":"290","line":192,"column":37,"nodeType":"260","messageId":"261","endLine":192,"endColumn":39},{"ruleId":"258","severity":1,"message":"290","line":195,"column":28,"nodeType":"260","messageId":"261","endLine":195,"endColumn":30},{"ruleId":"258","severity":1,"message":"290","line":195,"column":43,"nodeType":"260","messageId":"261","endLine":195,"endColumn":45},{"ruleId":"258","severity":1,"message":"290","line":199,"column":34,"nodeType":"260","messageId":"261","endLine":199,"endColumn":36},{"ruleId":"258","severity":1,"message":"290","line":199,"column":51,"nodeType":"260","messageId":"261","endLine":199,"endColumn":53},{"ruleId":"258","severity":1,"message":"290","line":203,"column":41,"nodeType":"260","messageId":"261","endLine":203,"endColumn":43},{"ruleId":"258","severity":1,"message":"290","line":206,"column":39,"nodeType":"260","messageId":"261","endLine":206,"endColumn":41},{"ruleId":"258","severity":1,"message":"290","line":206,"column":57,"nodeType":"260","messageId":"261","endLine":206,"endColumn":59},{"ruleId":"258","severity":1,"message":"290","line":210,"column":43,"nodeType":"260","messageId":"261","endLine":210,"endColumn":45},{"ruleId":"258","severity":1,"message":"290","line":210,"column":61,"nodeType":"260","messageId":"261","endLine":210,"endColumn":63},{"ruleId":"258","severity":1,"message":"290","line":214,"column":47,"nodeType":"260","messageId":"261","endLine":214,"endColumn":49},{"ruleId":"258","severity":1,"message":"290","line":214,"column":65,"nodeType":"260","messageId":"261","endLine":214,"endColumn":67},{"ruleId":"258","severity":1,"message":"290","line":218,"column":58,"nodeType":"260","messageId":"261","endLine":218,"endColumn":60},{"ruleId":"258","severity":1,"message":"290","line":218,"column":83,"nodeType":"260","messageId":"261","endLine":218,"endColumn":85},{"ruleId":"258","severity":1,"message":"290","line":222,"column":55,"nodeType":"260","messageId":"261","endLine":222,"endColumn":57},{"ruleId":"258","severity":1,"message":"259","line":268,"column":18,"nodeType":"260","messageId":"261","endLine":268,"endColumn":20},{"ruleId":"258","severity":1,"message":"259","line":432,"column":34,"nodeType":"260","messageId":"261","endLine":432,"endColumn":36},{"ruleId":"252","replacedBy":"291"},{"ruleId":"254","replacedBy":"292"},{"ruleId":"258","severity":1,"message":"259","line":29,"column":16,"nodeType":"260","messageId":"261","endLine":29,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":29,"column":33,"nodeType":"260","messageId":"261","endLine":29,"endColumn":35},{"ruleId":"258","severity":1,"message":"259","line":29,"column":51,"nodeType":"260","messageId":"261","endLine":29,"endColumn":53},{"ruleId":"258","severity":1,"message":"259","line":34,"column":17,"nodeType":"260","messageId":"261","endLine":34,"endColumn":19},{"ruleId":"258","severity":1,"message":"259","line":34,"column":35,"nodeType":"260","messageId":"261","endLine":34,"endColumn":37},{"ruleId":"258","severity":1,"message":"259","line":34,"column":54,"nodeType":"260","messageId":"261","endLine":34,"endColumn":56},{"ruleId":"252","replacedBy":"293"},{"ruleId":"254","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":6,"column":10,"nodeType":"273","messageId":"297","endLine":6,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":29,"column":16,"nodeType":"260","messageId":"261","endLine":29,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":29,"column":33,"nodeType":"260","messageId":"261","endLine":29,"endColumn":35},{"ruleId":"258","severity":1,"message":"259","line":29,"column":51,"nodeType":"260","messageId":"261","endLine":29,"endColumn":53},{"ruleId":"258","severity":1,"message":"259","line":34,"column":17,"nodeType":"260","messageId":"261","endLine":34,"endColumn":19},{"ruleId":"258","severity":1,"message":"259","line":34,"column":35,"nodeType":"260","messageId":"261","endLine":34,"endColumn":37},{"ruleId":"258","severity":1,"message":"259","line":34,"column":54,"nodeType":"260","messageId":"261","endLine":34,"endColumn":56},{"ruleId":"271","severity":1,"message":"298","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":22},{"ruleId":"271","severity":1,"message":"299","line":2,"column":24,"nodeType":"273","messageId":"274","endLine":2,"endColumn":32},{"ruleId":"271","severity":1,"message":"300","line":2,"column":34,"nodeType":"273","messageId":"274","endLine":2,"endColumn":44},{"ruleId":"271","severity":1,"message":"301","line":3,"column":1,"nodeType":"273","messageId":"274","endLine":3,"endColumn":18},{"ruleId":"271","severity":1,"message":"302","line":13,"column":10,"nodeType":"273","messageId":"274","endLine":13,"endColumn":18},{"ruleId":"303","severity":1,"message":"304","line":15,"column":1,"nodeType":"305","messageId":"306","endLine":21,"endColumn":4},{"ruleId":"271","severity":1,"message":"307","line":41,"column":11,"nodeType":"273","messageId":"274","endLine":41,"endColumn":19},{"ruleId":"271","severity":1,"message":"308","line":49,"column":10,"nodeType":"273","messageId":"274","endLine":49,"endColumn":19},{"ruleId":"271","severity":1,"message":"309","line":51,"column":20,"nodeType":"273","messageId":"274","endLine":51,"endColumn":31},{"ruleId":"248","severity":1,"message":"249","line":94,"column":6,"nodeType":"250","endLine":94,"endColumn":8,"suggestions":"310"},{"ruleId":"258","severity":1,"message":"259","line":110,"column":17,"nodeType":"260","messageId":"261","endLine":110,"endColumn":19},{"ruleId":"258","severity":1,"message":"259","line":179,"column":15,"nodeType":"260","messageId":"261","endLine":179,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":195,"column":21,"nodeType":"260","messageId":"261","endLine":195,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":230,"column":15,"nodeType":"260","messageId":"261","endLine":230,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":230,"column":42,"nodeType":"260","messageId":"261","endLine":230,"endColumn":44},{"ruleId":"258","severity":1,"message":"259","line":234,"column":21,"nodeType":"260","messageId":"261","endLine":234,"endColumn":23},{"ruleId":"258","severity":1,"message":"290","line":234,"column":48,"nodeType":"260","messageId":"261","endLine":234,"endColumn":50},{"ruleId":"277","severity":1,"message":"278","line":327,"column":15,"nodeType":"279","endLine":327,"endColumn":75},{"ruleId":"258","severity":1,"message":"259","line":349,"column":36,"nodeType":"260","messageId":"261","endLine":349,"endColumn":38},{"ruleId":"265","severity":1,"message":"266","line":369,"column":17,"nodeType":"267","messageId":"268","endLine":369,"endColumn":24},{"ruleId":"271","severity":1,"message":"311","line":384,"column":10,"nodeType":"273","messageId":"274","endLine":384,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"275","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"271","severity":1,"message":"302","line":14,"column":10,"nodeType":"273","messageId":"274","endLine":14,"endColumn":18},{"ruleId":"248","severity":1,"message":"249","line":72,"column":6,"nodeType":"250","endLine":72,"endColumn":8,"suggestions":"312"},{"ruleId":"271","severity":1,"message":"313","line":79,"column":11,"nodeType":"273","messageId":"274","endLine":79,"endColumn":32},{"ruleId":"258","severity":1,"message":"259","line":153,"column":32,"nodeType":"260","messageId":"261","endLine":153,"endColumn":34},{"ruleId":"258","severity":1,"message":"259","line":153,"column":68,"nodeType":"260","messageId":"261","endLine":153,"endColumn":70},{"ruleId":"265","severity":1,"message":"266","line":166,"column":13,"nodeType":"267","messageId":"268","endLine":166,"endColumn":20},{"ruleId":"271","severity":1,"message":"302","line":12,"column":10,"nodeType":"273","messageId":"274","endLine":12,"endColumn":18},{"ruleId":"248","severity":1,"message":"249","line":75,"column":6,"nodeType":"250","endLine":75,"endColumn":8,"suggestions":"314"},{"ruleId":"258","severity":1,"message":"259","line":91,"column":15,"nodeType":"260","messageId":"261","endLine":91,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":95,"column":21,"nodeType":"260","messageId":"261","endLine":95,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":169,"column":15,"nodeType":"260","messageId":"261","endLine":169,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":185,"column":21,"nodeType":"260","messageId":"261","endLine":185,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":246,"column":32,"nodeType":"260","messageId":"261","endLine":246,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":270,"column":13,"nodeType":"267","messageId":"268","endLine":270,"endColumn":20},{"ruleId":"277","severity":1,"message":"278","line":321,"column":13,"nodeType":"279","endLine":321,"endColumn":73},{"ruleId":"295","severity":1,"message":"296","line":6,"column":10,"nodeType":"273","messageId":"297","endLine":6,"endColumn":18},{"ruleId":"271","severity":1,"message":"275","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"258","severity":1,"message":"259","line":12,"column":15,"nodeType":"260","messageId":"261","endLine":12,"endColumn":17},{"ruleId":"248","severity":1,"message":"315","line":26,"column":5,"nodeType":"250","endLine":26,"endColumn":7,"suggestions":"316"},{"ruleId":"252","replacedBy":"317"},{"ruleId":"254","replacedBy":"318"},{"ruleId":"271","severity":1,"message":"319","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":22},{"ruleId":"320","severity":1,"message":"321","line":13,"column":1,"nodeType":"322","endLine":77,"endColumn":2},{"ruleId":"252","replacedBy":"323"},{"ruleId":"254","replacedBy":"324"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":18,"nodeType":"273","messageId":"274","endLine":1,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRoles' and 'isLoading'. Either include them or remove the dependency array.","ArrayExpression",["325"],"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"React Hook useEffect has missing dependencies: 'getRoles', 'isLoading', and 'loadAdmins'. Either include them or remove the dependency array.",["328"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["326"],["327"],["329"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["326"],["327"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["330"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["326"],["327"],["331"],"'email' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Companies' is defined but never used.","'isLoadingImage1' is assigned a value but never used.","'isImage1Loaded' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["326"],["327"],["326"],["327"],"@typescript-eslint/no-redeclare","'Companie' is already defined.","redeclared","'FiDollarSign' is defined but never used.","'FiLayers' is defined but never used.","'FiBookOpen' is defined but never used.","'FiArrowDownCircle' is defined but never used.","'getRoles' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Validate' is defined but never used.","'companies' is assigned a value but never used.","'setValidate' is assigned a value but never used.",["332"],"'usePrevious' is defined but never used.",["333"],"'activateResetPassword' is assigned a value but never used.",["334"],"React Hook useEffect has missing dependencies: 'active' and 'validate'. Either include them or remove the dependency array. If 'setValidateProto' needs the current value of 'validate', you can also switch to useReducer instead of useState and read 'validate' in the reducer.",["335"],["326"],["327"],"'FiArrowRight' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["326"],["327"],{"desc":"336","fix":"337"},"no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"desc":"336","fix":"340"},{"desc":"336","fix":"341"},{"desc":"342","fix":"343"},{"desc":"336","fix":"344"},{"desc":"336","fix":"345"},{"desc":"336","fix":"346"},{"desc":"347","fix":"348"},"Update the dependencies array to be: [getRoles, isLoading]",{"range":"349","text":"350"},"Update the dependencies array to be: [getRoles, isLoading, loadAdmins]",{"range":"351","text":"352"},{"range":"353","text":"350"},{"range":"354","text":"350"},"Update the dependencies array to be: [getProducts, getRoles, isLoading]",{"range":"355","text":"356"},{"range":"357","text":"350"},{"range":"358","text":"350"},{"range":"359","text":"350"},"Update the dependencies array to be: [active, validate]",{"range":"360","text":"361"},[1774,1776],"[getRoles, isLoading]",[1940,1942],"[getRoles, isLoading, loadAdmins]",[1828,1830],[2643,2645],[2807,2820],"[getProducts, getRoles, isLoading]",[2538,2540],[1829,1831],[2027,2029],[962,964],"[active, validate]"]