[{"C:\\Users\\marce\\ProjectHabil\\web\\src\\index.tsx":"1","C:\\Users\\marce\\ProjectHabil\\web\\src\\App.tsx":"2","C:\\Users\\marce\\ProjectHabil\\web\\src\\routes.tsx":"3","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Welcome.tsx":"4","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Client.tsx":"5","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Landing.tsx":"6","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Companie.tsx":"7","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\ControlMap.tsx":"8","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Activate.tsx":"9","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx":"10","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx":"11","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Moderators.tsx":"12","C:\\Users\\marce\\ProjectHabil\\web\\src\\services\\api.ts":"13","C:\\Users\\marce\\ProjectHabil\\web\\src\\components\\Sidebar.tsx":"14","C:\\Users\\marce\\projecthabil\\web\\src\\index.tsx":"15","C:\\Users\\marce\\projecthabil\\web\\src\\App.tsx":"16","C:\\Users\\marce\\projecthabil\\web\\src\\routes.tsx":"17","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Welcome.tsx":"18","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Client.tsx":"19","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Landing.tsx":"20","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Companie.tsx":"21","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Activate.tsx":"22","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\private\\ControlMap.tsx":"23","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\private\\Companies.tsx":"24","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\private\\Products.tsx":"25","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\private\\Moderators.tsx":"26","C:\\Users\\marce\\projecthabil\\web\\src\\services\\api.ts":"27","C:\\Users\\marce\\projecthabil\\web\\src\\components\\Sidebar.tsx":"28"},{"size":207,"mtime":1618247886264,"results":"29","hashOfConfig":"30"},{"size":164,"mtime":1618247886248,"results":"31","hashOfConfig":"30"},{"size":1203,"mtime":1618247886296,"results":"32","hashOfConfig":"30"},{"size":2209,"mtime":1618330091549,"results":"33","hashOfConfig":"30"},{"size":4025,"mtime":1618247886280,"results":"34","hashOfConfig":"30"},{"size":2384,"mtime":1618331164322,"results":"35","hashOfConfig":"30"},{"size":160,"mtime":1618247886280,"results":"36","hashOfConfig":"30"},{"size":2904,"mtime":1618399794087,"results":"37","hashOfConfig":"30"},{"size":3082,"mtime":1618249743524,"results":"38","hashOfConfig":"30"},{"size":7951,"mtime":1618247886280,"results":"39","hashOfConfig":"30"},{"size":10405,"mtime":1618247886280,"results":"40","hashOfConfig":"30"},{"size":6801,"mtime":1618247886280,"results":"41","hashOfConfig":"30"},{"size":265,"mtime":1618247886296,"results":"42","hashOfConfig":"30"},{"size":1555,"mtime":1618247886248,"results":"43","hashOfConfig":"30"},{"size":207,"mtime":1618247886264,"results":"44","hashOfConfig":"45"},{"size":164,"mtime":1618247886248,"results":"46","hashOfConfig":"45"},{"size":1203,"mtime":1618247886296,"results":"47","hashOfConfig":"45"},{"size":2583,"mtime":1618263585540,"results":"48","hashOfConfig":"45"},{"size":4025,"mtime":1618247886280,"results":"49","hashOfConfig":"45"},{"size":2323,"mtime":1618247886280,"results":"50","hashOfConfig":"45"},{"size":160,"mtime":1618247886280,"results":"51","hashOfConfig":"45"},{"size":3082,"mtime":1618249743524,"results":"52","hashOfConfig":"45"},{"size":2044,"mtime":1618247886280,"results":"53","hashOfConfig":"45"},{"size":7951,"mtime":1618247886280,"results":"54","hashOfConfig":"45"},{"size":10405,"mtime":1618247886280,"results":"55","hashOfConfig":"45"},{"size":6801,"mtime":1618247886280,"results":"56","hashOfConfig":"45"},{"size":265,"mtime":1618247886296,"results":"57","hashOfConfig":"45"},{"size":1555,"mtime":1618247886248,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1ahcn9",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1wofqzo",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"95"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\marce\\ProjectHabil\\web\\src\\index.tsx",[],["123","124"],"C:\\Users\\marce\\ProjectHabil\\web\\src\\App.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\routes.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Welcome.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Client.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Landing.tsx",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Companie.tsx",["125"],"interface Companie {\r\n  id: number,\r\n}\r\n\r\nfunction Companie(props:any) {\r\n    return <h1>Hello {props.match.params.id}!</h1>;\r\n}\r\n\r\nexport default Companie;\r\n  ","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\ControlMap.tsx",["126"],"C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\Activate.tsx",["127","128","129","130","131","132"],"import React, {  useState } from 'react';\r\nimport { FiSend } from 'react-icons/fi'\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/confirm.css';\r\n\r\nimport logoImg from '../images/cmatextlogo.png';\r\nimport tokenCredentials from '../services/token.json';\r\n\r\n//---CRIAR USEEFFECT PARA RETURN(<P>LOADING...<P>);\r\nfunction Landing(props:any) {\r\n  const [company, setCompany] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const tokenUsername = tokenCredentials.username;\r\n  const tokenPassword = tokenCredentials.password;\r\n  const tokenGrantType = tokenCredentials.grant_type;\r\n\r\n  async function handleConfirm(){\r\n    const params = new URLSearchParams();\r\n    params.append('username', tokenUsername)\r\n    params.append('password', tokenPassword)\r\n    params.append('grant_type', tokenGrantType)\r\n\r\n    const response = await api.post('token',params);\r\n    const userToken = response.data.access_token;\r\n\r\n    if(company == '' || company == ' ' || company == undefined){\r\n      alert('CNPJ INVÁLIDO');\r\n      return;\r\n    }\r\n\r\n    if(password == '' || password == ' ' || password == undefined){\r\n      alert('SENHA INVÁLIDA');\r\n      return;\r\n    }\r\n    \r\n      api.post('companies/logon/inativo',{\r\n        cnpj: company,\r\n        password: password\r\n      },{\r\n        headers: {'Authorization': 'Bearer '+userToken} \r\n      }).then(() => {\r\n        api.put(`companies/${props.match.params.id}`,{\r\n          is_active: 1\r\n        },{\r\n          headers: {'Authorization': 'Bearer '+userToken}\r\n        }).then(() => {\r\n          alert(\"Sucesso! Aguarde a confirmacão do Administrador para acessar o Aplicativo e cadastrar suas promoções\");\r\n          window.location.href = '/';\r\n        }).catch(err => {\r\n          alert(\"Ops! Tivemos um Erro de Servidor, entre em contato com o Suporte.\");\r\n          return;\r\n        })\r\n      }).catch(err => {\r\n        alert(\"Ops! Tivemos um Erro de Servidor, entre em Contato com o Suporte.\");\r\n        return;\r\n      })\r\n      \r\n      \r\n  }\r\n\r\n  return (\r\n    <div id=\"confirm-container\">\r\n      <div className=\"content-wrapper\">\r\n\r\n        <main>\r\n          <h1>Confirme seu Email</h1>\r\n          <p><img src={logoImg} className=\"landingImg\" alt=\"CompreMaisAki\" /></p>\r\n\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"about\">CNPJ:</label>\r\n            <input \r\n              id=\"company\" \r\n              maxLength={300}\r\n              value={company}\r\n              onChange={event => setCompany(event.target.value)} />\r\n          </div>\r\n\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"name\">Senha:</label>\r\n            <input \r\n              //type=\"password\"\r\n              id=\"name\" \r\n              value={password} \r\n              onChange={event => setPassword(event.target.value)} /> \r\n          </div>\r\n\r\n          <button type=\"button\" onClick={() => handleConfirm()} className=\"confirm-app\">\r\n            <FiSend size=\"26\" color=\"#fff\" />\r\n          </button>\r\n\r\n        </main>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Landing;","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx",["133","134","135","136","137","138","139"],"import React, { useState, useEffect } from 'react';\r\nimport { FiAlertOctagon, FiCheck, FiCheckCircle, \r\nFiAlertCircle, FiXCircle, FiBook } from 'react-icons/fi';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/companies_buttons.css';\r\nimport '../../styles/pages/table.css';\r\n\r\ninterface Company {\r\n  id: number;\r\n  business: string;\r\n  cnpj: string;\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  address: string;\r\n  district: string;\r\n  city: string;\r\n  uf: string;\r\n  password: string;\r\n  image: string;\r\n  keywords: string;\r\n  is_active: string;\r\n}\r\n\r\nfunction Products(){\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active, setActive] = useState('0');\r\n  const [base] = useState('data:image/png;base64');\r\n  const [userToken, setUserToken] = useState('retrieve from localStorage');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //----CARREGAMENTO DE DADOS E LOADING INICIAL DE TELA ----///\r\n  useEffect(() => {\r\n    if(isLoading) return;\r\n\r\n    //Iniciar Carregamento\r\n    setIsLoading(true);\r\n    api.get('companies/all').then(response => {\r\n\r\n      //Realocar Resposta para UseState\r\n      setCompanies(response.data);\r\n\r\n      //Realocar Token\r\n      const getUserToken = localStorage.getItem('userToken');\r\n      setUserToken(`${getUserToken}`);\r\n\r\n      //Finalizar Carregamento\r\n      setIsLoading(false);\r\n\r\n    }).catch(err => {\r\n      alert('Ops! Tivemos um Erro.');\r\n    })\r\n  }, []);\r\n\r\n  //----RENDERIZAR TÍTULO DA TABELA\r\n  function renderTitle(){\r\n    if(active == '0'){\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Inativas</h1>\r\n      );\r\n    }else if(active == '1'){\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Ativas</h1>  \r\n      );\r\n    }else{\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Canceladas</h1>\r\n      );\r\n    }\r\n  }\r\n\r\n  //----(PENDENTE) EXPAND IMAGE---//\r\n  async function handleExpandImage({company}:{company:Company}){\r\n     alert(`${company.image}`);\r\n  }\r\n\r\n  //-----VIEWS------//\r\n  async function handleViewInactive(){\r\n    setActive('0')\r\n  }\r\n\r\n  async function handleViewActive(){\r\n    setActive('1')\r\n  }\r\n\r\n  async function handleViewCanceled(){\r\n    setActive('2')\r\n  }\r\n\r\n  //---MANIPULAR EMPRESAS (INSERIR CARREGAMENTO VISUAL)---//\r\n  async function handleInactive({company}:{company:Company}){\r\n    api.put(`companies/${company.id}`,{\r\n      // 0 === Empresa INATIVA\r\n      is_active: 0,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleCanceled({company}:{company:Company}){\r\n    api.delete(`companies/${company.id}`,{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleActive({company}:{company:Company}){\r\n    api.put(`companies/${company.id}`,{\r\n      // 1 === Empresa ATIVA\r\n      is_active: 1,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  // RENDERIZAR BOTOES NA TABELA ATIVAS(1) - INATIVAS(0) - CANCELADAS(2)\r\n  function renderButton({company}:{company:Company}){\r\n    if(active == \"0\"){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({company})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active == \"1\"){\r\n      return (\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({company})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  // TABELA EM COMPONENTE\r\n  function renderTable(){\r\n    if(isLoading){\r\n      return (\r\n        <div>\r\n          <h1>CARREGANDO...</h1>\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <table id=\"companies\">\r\n        <tbody>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Empresa</th>\r\n          <th>Ramo</th>\r\n          <th>Palavras-Chaves</th>\r\n          <th>cnpj</th>\r\n          <th>Telefone</th>\r\n          <th>Email</th>\r\n          <th>Endereço</th>\r\n          <th>Bairro</th>\r\n          <th>Cidade</th>\r\n          <th>UF</th>\r\n          <th>Foto</th>\r\n          <th className=\"noWrap td\">Comandos</th>\r\n        </tr>\r\n\r\n        {companies.map(company => {\r\n          // ACTIVE MANIPULADO NO USESTATE()\r\n          if(company.is_active == active){\r\n            return(\r\n                <tr key={company.id}>\r\n                <td>{company.id}</td>\r\n                <td>{company.name}</td>\r\n                <td>{company.business}</td>\r\n                <td>{company.keywords}</td>\r\n                <td>{company.cnpj}</td>\r\n                <td>{company.phone}</td>\r\n                <td>{company.email}</td>\r\n                <td>{company.address}</td>\r\n                <td>{company.district}</td>\r\n                <td>{company.city}</td>\r\n                <td>{company.uf}</td>\r\n                <td onClick={() => handleExpandImage({company})}><img src={base + ',' + company.image} style={{width: '100%', cursor: 'pointer'}} className=\"landingImg\" alt=\"CompreMaisAki\" /></td>\r\n                <td>\r\n                  {renderButton({company})}\r\n                </td>\r\n              </tr>\r\n            );\r\n          }else{\r\n            return;\r\n          }\r\n        })}\r\n        </tbody>\r\n      </table>\r\n      );\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1 style={{fontSize:'22px'}}>Administração de Empresas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Canceladas</label>\r\n              <button onClick={() => handleViewCanceled()} id=\"button\">\r\n                <FiXCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n          {renderTitle()}\r\n          {renderTable()}\r\n\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React, { useState, useEffect } from 'react';\r\nimport { FiDollarSign, FiLayers, FiBookOpen, \r\nFiArrowDownCircle, FiAlertOctagon, FiCheck, \r\nFiCheckCircle, FiAlertCircle, FiBook } from 'react-icons/fi';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/card.css';\r\nimport '../../styles/pages/card-columns.css';\r\n\r\n{/* \r\n  --- TO DO LIST\r\n  Modificar o número da empresa para Nome 'string'\r\n  Ordenar com os botos os produtos\r\n*/}\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  description: string;\r\n  date: string;\r\n  company_id: number;\r\n  image: string;\r\n  validade: string;\r\n  discount: string;\r\n  is_active: string;\r\n}\r\n\r\ninterface Company {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface Validate {\r\n  test: any\r\n}\r\n\r\nfunction Products(){\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active, setActive] = useState('0');\r\n  const [validate, setValidate] = useState('');\r\n  const [base] = useState('data:image/png;base64');\r\n  const [userToken, setUserToken] = useState('retrieve from localStorage');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //----CARREGAMENTO DE DADOS E LOADING INICIAL DE TELA ----///\r\n  useEffect(() => {\r\n    if(isLoading) return;\r\n\r\n    //Iniciar Carregamento\r\n    setIsLoading(true);\r\n\r\n    //Carregamento de empresas\r\n    api.get('products/all').then(products => {\r\n\r\n      //Realocar Resposta para UseState\r\n      setProducts(products.data);\r\n\r\n      //Carregar empresas para nomeclatura na coluna \"EMPRESA\"\r\n      api.get('companies/all').then(companies => {\r\n        setCompanies(companies.data)\r\n      }).catch(err => {\r\n        alert('Ops! Tivemos um erro.');\r\n      });\r\n\r\n      //Realocar Token\r\n      const getUserToken = localStorage.getItem('userToken');\r\n      setUserToken(`${getUserToken}`);\r\n\r\n      //Finalizar Carregamento\r\n      setIsLoading(false);\r\n    }).catch(err => {\r\n      alert(\"Ops! Tivemos um erro\");\r\n    })\r\n  }, []);\r\n\r\n    //----RENDERIZAR TÍTULO DA TABELA\r\n    function renderTitle(){\r\n      if(active == '0'){\r\n        return(\r\n          <h1 style={{fontSize:'22px'}}>Promoções Inativas</h1>\r\n        )\r\n      }else{\r\n        return(\r\n          <h1 style={{fontSize:'22px'}}>Promoções Ativas</h1>  \r\n        )\r\n      }\r\n    }\r\n\r\n   //----(PENDENT)EXPAND IMAGE---//\r\n   async function handleExpandImage({product}:{product:Product}){\r\n    alert(`Ver imagem ${product.image}`);\r\n  }\r\n\r\n  //---CANCEL/ACTIVE/INACTIVE BUTTON FUNCTIONS---//\r\n  async function handleCanceled({product}:{product:Product}){\r\n    api.delete(`products/${product.id}`,{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products/all').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleActive({product}:{product:Product}){\r\n    api.put(`products/${product.id}`,{\r\n      is_active: 1,\r\n      validate: validate\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(res => {\r\n      api.get('products/all').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleInactive({product}:{product:Product}){\r\n    api.put(`products/${product.id}`,{\r\n      is_active: 0,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products/all').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  //----VIEWS----///\r\n  async function handleViewInactive(){\r\n    setActive('0')\r\n  }\r\n\r\n  async function handleViewActive(){\r\n    setActive('1')\r\n  }\r\n\r\n  // RENDERIZAR BOTOES NA TABELA ATIVAS(1) - INATIVAS(0) - NAO POSSUI CANCELADAS\r\n  function renderButton({product}:{product:Product}){\r\n    if(active == '0'){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({product})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n              \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({product})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active == '1'){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({product})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n              \r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({product})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  async function handleSetValidate(product:Product, event:string){\r\n    api.put(`products/${product.id}`,{\r\n      validade: event\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products/all').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    })\r\n  }\r\n\r\n    // RENDERIZAR INPUT DE DATA INVÁLIDOS - RETORNAR VALOR DA DATA PARA VÁLIDOS \r\n  function renderValidate({product}:{product:Product}){\r\n    if(active == '0' && product.validade == \"\"){\r\n      return (\r\n        <input type=\"date\" value={validate} onChange={event => handleSetValidate(product, event.target.value)} />\r\n      );\r\n    }else if(active == '0' && product.validade != \"\"){\r\n      return (\r\n        <input type=\"date\" value={product.validade} min={Date.now()} onChange={event => handleSetValidate(product, event.target.value)} />\r\n      );\r\n    }else{\r\n      return (\r\n        <p>{product.validade}</p>\r\n      );\r\n    }\r\n  }\r\n\r\n  //-----(PENDENT)SORT-----//\r\n  async function handleViewPerDesc(){\r\n    alert('DESC');\r\n  }\r\n\r\n  async function handleViewPerCompany(){\r\n    alert('Company');\r\n  }\r\n\r\n  async function handleViewAlpha(){\r\n    alert('AZ');\r\n  }\r\n\r\n  async function handleViewPerPrice(){\r\n    alert('Price');\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1 style={{fontSize:'22px'}}>Novas Promoções Cadastradas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Últimas</label>\r\n              <button onClick={() => handleViewPerDesc()} id=\"button\">\r\n                <FiLayers size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Empresas</label>\r\n              <button onClick={() => handleViewPerCompany()} id=\"button\">\r\n                <FiBookOpen size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">A-Z</label>\r\n              <button onClick={() => handleViewAlpha()} id=\"button\">\r\n                <FiArrowDownCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Preço</label>\r\n              <button onClick={() => handleViewPerPrice()} id=\"button\">\r\n                <FiDollarSign size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n            {renderTitle()}\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Produto</th>\r\n              <th>Preco</th>\r\n              <th>Descricao</th>\r\n              <th>Data</th>\r\n              <th>Empresa</th>\r\n              <th>Validade</th>\r\n              <th>Desconto</th>\r\n              <th>Imagem</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {products.map(product => {\r\n              if(product.is_active == active){\r\n                return(\r\n                    <tr key={product.id}>\r\n                    <td>{product.id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>R$ {product.price}</td>\r\n                    <td>{product.description}</td>\r\n                    <td>{product.date}</td>\r\n                    <td>{product.company_id}</td>\r\n                    <td>\r\n                      {renderValidate({product})}\r\n                    </td>\r\n                    <td>{product.discount} %</td>\r\n                    <td onClick={() => handleExpandImage({product})}><img src={base + ',' + product.image} style={{width: '30%', cursor: 'pointer'}} className=\"landingImg\" alt=\"CompreMaisAki\" /></td>\r\n                    <td>\r\n                      {renderButton({product})}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }else{\r\n                return;\r\n              }\r\n            })}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n        \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n\r\nfunction usePrevious(validate: string) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n","C:\\Users\\marce\\ProjectHabil\\web\\src\\pages\\private\\Moderators.tsx",["155","156","157"],"import React, { useEffect, useState } from 'react';\r\nimport { GiConfirmed } from 'react-icons/gi';\r\nimport { FiAlertOctagon } from 'react-icons/fi';\r\nimport { GiArmorUpgrade, GiArmorDowngrade } from 'react-icons/gi';\r\n\r\nimport Sidebar from '../../components/Sidebar';\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/home.css';\r\nimport '../../styles/pages/switch.css';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport logoImg from '../../images/cmatextlogo.png';\r\n\r\ninterface Admin {\r\n  id: number,\r\n  user: string,\r\n  role: string,\r\n}\r\n\r\nfunction Moderators(){\r\n    //Realocar Token\r\n    const getUserToken = localStorage.getItem('userToken');\r\n\r\n    const [admins, setAdmins] = useState<Admin[]>([]);\r\n    const [user, setUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [userToken] = useState(`${getUserToken}`)\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    async function loadAdmins(){\r\n      api.get('admin',{\r\n        headers: {'Authorization': 'Bearer '+userToken}\r\n      }).then(adm => {\r\n        setAdmins(adm.data);\r\n      }).catch(err => {\r\n        alert('Ops! Tivemos um erro.');\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(isLoading) return;\r\n\r\n      //Iniciar Carregamento\r\n      setIsLoading(true);\r\n      //Carregamento dos ADMINS\r\n      loadAdmins();\r\n      //Finalizar Carregamento\r\n      setIsLoading(false);\r\n    }, []);\r\n\r\n    async function handleCreateNewModerator(){\r\n        \r\n      if(password == confirmPassword){\r\n        api.post('admin',{\r\n          user,\r\n          password,\r\n          role: 'adm'\r\n        },{\r\n          headers: {'Authorization': 'Bearer '+userToken}\r\n        }).then(res => {\r\n          alert(\"Usuário Cadastrado!\");\r\n          loadAdmins();\r\n        }).catch(err => {\r\n          alert('Tivemos um erro, entre em contato com o Suporte');\r\n        })\r\n      }else{\r\n        alert(\"Senha não confere.\");\r\n      }\r\n    }\r\n\r\n    async function handleCanceled({admin}:{admin:Admin}){\r\n      alert('Cancelado!');\r\n    }\r\n\r\n    async function handlePromote({admin}:{admin:Admin}){\r\n      alert('Promovido!')\r\n    }\r\n\r\n    async function handleRelegate({admin}:{admin:Admin}){\r\n      alert('Depreciado!')\r\n    }\r\n\r\n    //---RENDERIZAR BOTOES---//\r\n    function renderButtons({admin}:{admin:Admin}){\r\n      if(admin.role == 'guest'){\r\n        return(\r\n          <div className=\"button-row\">\r\n            <div className=\"button-col\">\r\n              <button className=\"cancel\" onClick={() => handleCanceled({admin})}>\r\n                <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"button-col\">\r\n              <button className=\"aprove\" onClick={() => handlePromote({admin})}>\r\n                <GiArmorUpgrade size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }else{\r\n        return(\r\n          <div className=\"button-row\">\r\n            <div className=\"button-col\">\r\n              <button className=\"cancel\" onClick={() => handleCanceled({admin})}>\r\n                <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"button-col\">\r\n              <button className=\"aprove\" onClick={() => handleRelegate({admin})}>\r\n                <GiArmorDowngrade size=\"13\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    // TABELA EM COMPONENT\r\n    function renderTable(){\r\n      if(isLoading){\r\n        return (\r\n          <div>\r\n            <h1>CARREGANDO...</h1>\r\n          </div>\r\n        );\r\n      }else{\r\n        return (\r\n          <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Admin</th>\r\n              <th>Função</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {admins.map(admin => {\r\n              \r\n                return(\r\n                    <tr key={admin.id}>\r\n                    <td>{admin.user}</td>\r\n                    <td>{admin.role}</td>\r\n                    <td>\r\n                      {renderButtons({admin})}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n            })}\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <div className=\"text\">\r\n            <h1>Moderadores</h1>\r\n          </div>\r\n            <h2 className=\"imagesText\"><img src={logoImg} className=\"landingImg\" alt=\"CompreMaisAki\" /></h2>\r\n            <h1 style={{fontSize:'20px', color:'#8fa7b3'}}>Adicionar Moderador</h1>\r\n          <div className=\"advRow\">\r\n            <div className=\"advCol\">\r\n              <div className=\"input-block\">\r\n                <label htmlFor=\"about\">Usuário:</label>\r\n                <input \r\n                  id=\"user\" \r\n                  maxLength={300}\r\n                  value={user}\r\n                  onChange={event => setUser(event.target.value)} />\r\n              </div>\r\n\r\n              <div className=\"input-block\">\r\n                <label htmlFor=\"name\">Senha:</label>\r\n                <input \r\n                  type=\"password\"\r\n                  id=\"password\" \r\n                  value={password} \r\n                  onChange={event => setPassword(event.target.value)} />\r\n                <label htmlFor=\"name\">Confirme a Senha:</label>\r\n                <input \r\n                  type=\"password\"\r\n                  id=\"confirmPassword\" \r\n                  value={confirmPassword} \r\n                  onChange={event => setConfirmPassword(event.target.value)} />\r\n\r\n                {/*<label for=\"cars\">Choose a car:</label>\r\n\r\n                  <select name=\"cars\" id=\"cars\">\r\n                    <option value=\"volvo\">Volvo</option>\r\n                    <option value=\"saab\">Saab</option>\r\n                    <option value=\"mercedes\">Mercedes</option>\r\n                    <option value=\"audi\">Audi</option>\r\n                  </select>*/}\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"button-block\">\r\n              <button type=\"button\" onClick={() => handleCreateNewModerator()} className=\"createModeratorButton\">\r\n                <GiConfirmed size=\"26\" color=\"#fff\" />\r\n              </button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"control-map\">\r\n        <div className=\"table-container\">\r\n          <h1>Moderadores Cadastrados</h1>\r\n          {renderTable()}\r\n        </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Moderators;","C:\\Users\\marce\\ProjectHabil\\web\\src\\services\\api.ts",[],"C:\\Users\\marce\\ProjectHabil\\web\\src\\components\\Sidebar.tsx",[],"C:\\Users\\marce\\projecthabil\\web\\src\\index.tsx",[],["158","159"],"C:\\Users\\marce\\projecthabil\\web\\src\\App.tsx",[],"C:\\Users\\marce\\projecthabil\\web\\src\\routes.tsx",[],"C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Welcome.tsx",["160","161"],"import * as React from 'react';\r\nimport { GrUserAdmin } from 'react-icons/gr';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport logoImg from '../images/cmatextlogo.png';\r\n\r\nimport '../styles/pages/welcome.css';\r\n\r\nimport qrcode from '../images/qrcode.png';\r\nimport applestore from '../images/appstore.png';\r\nimport googleplay from '../images/googleplay.png';\r\nimport smartphone from '../images/smartphone.png';\r\n\r\nfunction Welcome() {\r\n\r\n  async function handleLogin(){\r\n    try {\r\n      window.location.href = '/login';\r\n    }catch(err){\r\n      alert('Tivemos um erro');\r\n    }\r\n  }\r\n//-----path escondido para homologacao\r\n  {/*async function handleClient(){\r\n    try {\r\n      window.location.href = '/client';\r\n    }catch(err){\r\n      alert('Tivemos um erro');\r\n    }\r\n  }*/}\r\n\r\n  return (\r\n    <div id=\"page-welcome\">\r\n      <div className=\"welcome-wrapper\">\r\n\r\n        <main>\r\n          <img src={logoImg} className=\"landingImg1\" alt=\"CompreMaisAki\" />\r\n          <h1>Bem-Vindo</h1>\r\n          <p>o app que leva</p>\r\n          <p>Nova Santa Rita</p>\r\n          <p>sempre com você.</p>\r\n\r\n          <div className=\"welcome-block\">\r\n\r\n            <div className=\"welcome-block-col\">\r\n              <img src={qrcode} className=\"qrcodeLogo\" alt=\"qrcodeCompreMaisAki\" />\r\n            </div>\r\n            <div className=\"welcome-block-col\">\r\n              <div className=\"welcome-block-col\">\r\n                <img src={applestore} className=\"appstoreLogo\" alt=\"appstoreCompreMaisAki\" />\r\n              </div>\r\n              <div className=\"welcome-block-col\">\r\n                <img src={googleplay} className=\"googleplayLogo\" alt=\"googleplayCompreMaisAki\" />\r\n              </div>\r\n            </div>\r\n          </div>          \r\n\r\n        </main>\r\n\r\n        <div className=\"location\">\r\n          <img src={smartphone} className=\"smartphone\" alt=\"smartphoneCompreMaisAki\" />\r\n        </div>\r\n\r\n        <div className=\"enter-app-container\">\r\n          \r\n          {/*----------ROTA ESCONDIDA PARA HOMOLOGACAO\r\n          \r\n          <div className=\"enter-app-col1\">\r\n            <p className=\"enter-text\">Entrar</p>\r\n            <button type=\"button\" onClick={() => handleClient()} className=\"enter-app\">\r\n              <FiArrowRight size=\"26\" color=\"#FFF\" />\r\n            </button>\r\n          </div>*/}\r\n          <div className=\"enter-app-col2\">\r\n            <NavLink to=\"/login\" className=\"enter-app\">\r\n              <GrUserAdmin size=\"26\" color=\"#fff\" />\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Welcome;","C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Client.tsx",[],"C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Landing.tsx",[],"C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Companie.tsx",["162"],"C:\\Users\\marce\\projecthabil\\web\\src\\pages\\Activate.tsx",["163","164","165","166","167","168"],"C:\\Users\\marce\\projecthabil\\web\\src\\pages\\private\\ControlMap.tsx",[],"C:\\Users\\marce\\projecthabil\\web\\src\\pages\\private\\Companies.tsx",["169","170","171","172","173","174","175"],"C:\\Users\\marce\\projecthabil\\web\\src\\pages\\private\\Products.tsx",["176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"C:\\Users\\marce\\projecthabil\\web\\src\\pages\\private\\Moderators.tsx",["191","192","193"],"C:\\Users\\marce\\projecthabil\\web\\src\\services\\api.ts",[],"C:\\Users\\marce\\projecthabil\\web\\src\\components\\Sidebar.tsx",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":26,"column":5,"nodeType":"204","endLine":26,"endColumn":7,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":28,"column":16,"nodeType":"208","messageId":"209","endLine":28,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":28,"column":33,"nodeType":"208","messageId":"209","endLine":28,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":28,"column":51,"nodeType":"208","messageId":"209","endLine":28,"endColumn":53},{"ruleId":"206","severity":1,"message":"207","line":33,"column":17,"nodeType":"208","messageId":"209","endLine":33,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":33,"column":35,"nodeType":"208","messageId":"209","endLine":33,"endColumn":37},{"ruleId":"206","severity":1,"message":"207","line":33,"column":54,"nodeType":"208","messageId":"209","endLine":33,"endColumn":56},{"ruleId":"202","severity":1,"message":"203","line":57,"column":6,"nodeType":"204","endLine":57,"endColumn":8,"suggestions":"210"},{"ruleId":"206","severity":1,"message":"207","line":61,"column":15,"nodeType":"208","messageId":"209","endLine":61,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":65,"column":21,"nodeType":"208","messageId":"209","endLine":65,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":139,"column":15,"nodeType":"208","messageId":"209","endLine":139,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":155,"column":21,"nodeType":"208","messageId":"209","endLine":155,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":204,"column":32,"nodeType":"208","messageId":"209","endLine":204,"endColumn":34},{"ruleId":"211","severity":1,"message":"212","line":225,"column":13,"nodeType":"213","messageId":"214","endLine":225,"endColumn":20},{"ruleId":"215","severity":1,"message":"216","line":13,"column":1,"nodeType":"217","messageId":"218","endLine":17,"endColumn":4},{"ruleId":"219","severity":1,"message":"220","line":37,"column":11,"nodeType":"200","messageId":"221","endLine":37,"endColumn":19},{"ruleId":"219","severity":1,"message":"222","line":43,"column":10,"nodeType":"200","messageId":"221","endLine":43,"endColumn":19},{"ruleId":"219","severity":1,"message":"223","line":45,"column":20,"nodeType":"200","messageId":"221","endLine":45,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":79,"column":6,"nodeType":"204","endLine":79,"endColumn":8,"suggestions":"224"},{"ruleId":"206","severity":1,"message":"207","line":83,"column":17,"nodeType":"208","messageId":"209","endLine":83,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":152,"column":15,"nodeType":"208","messageId":"209","endLine":152,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":168,"column":21,"nodeType":"208","messageId":"209","endLine":168,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":203,"column":15,"nodeType":"208","messageId":"209","endLine":203,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":203,"column":42,"nodeType":"208","messageId":"209","endLine":203,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":207,"column":21,"nodeType":"208","messageId":"209","endLine":207,"endColumn":23},{"ruleId":"206","severity":1,"message":"225","line":207,"column":48,"nodeType":"208","messageId":"209","endLine":207,"endColumn":50},{"ruleId":"206","severity":1,"message":"207","line":309,"column":36,"nodeType":"208","messageId":"209","endLine":309,"endColumn":38},{"ruleId":"211","severity":1,"message":"212","line":329,"column":17,"nodeType":"213","messageId":"214","endLine":329,"endColumn":24},{"ruleId":"219","severity":1,"message":"226","line":344,"column":10,"nodeType":"200","messageId":"221","endLine":344,"endColumn":21},{"ruleId":"202","severity":1,"message":"227","line":51,"column":8,"nodeType":"204","endLine":51,"endColumn":10,"suggestions":"228"},{"ruleId":"206","severity":1,"message":"207","line":55,"column":19,"nodeType":"208","messageId":"209","endLine":55,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":87,"column":21,"nodeType":"208","messageId":"209","endLine":87,"endColumn":23},{"ruleId":"194","replacedBy":"229"},{"ruleId":"196","replacedBy":"230"},{"ruleId":"219","severity":1,"message":"231","line":16,"column":18,"nodeType":"200","messageId":"221","endLine":16,"endColumn":29},{"ruleId":"215","severity":1,"message":"232","line":24,"column":3,"nodeType":"217","messageId":"233","endLine":30,"endColumn":7},{"ruleId":"198","severity":1,"message":"199","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":28,"column":16,"nodeType":"208","messageId":"209","endLine":28,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":28,"column":33,"nodeType":"208","messageId":"209","endLine":28,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":28,"column":51,"nodeType":"208","messageId":"209","endLine":28,"endColumn":53},{"ruleId":"206","severity":1,"message":"207","line":33,"column":17,"nodeType":"208","messageId":"209","endLine":33,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":33,"column":35,"nodeType":"208","messageId":"209","endLine":33,"endColumn":37},{"ruleId":"206","severity":1,"message":"207","line":33,"column":54,"nodeType":"208","messageId":"209","endLine":33,"endColumn":56},{"ruleId":"202","severity":1,"message":"203","line":57,"column":6,"nodeType":"204","endLine":57,"endColumn":8,"suggestions":"234"},{"ruleId":"206","severity":1,"message":"207","line":61,"column":15,"nodeType":"208","messageId":"209","endLine":61,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":65,"column":21,"nodeType":"208","messageId":"209","endLine":65,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":139,"column":15,"nodeType":"208","messageId":"209","endLine":139,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":155,"column":21,"nodeType":"208","messageId":"209","endLine":155,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":204,"column":32,"nodeType":"208","messageId":"209","endLine":204,"endColumn":34},{"ruleId":"211","severity":1,"message":"212","line":225,"column":13,"nodeType":"213","messageId":"214","endLine":225,"endColumn":20},{"ruleId":"215","severity":1,"message":"216","line":13,"column":1,"nodeType":"217","messageId":"218","endLine":17,"endColumn":4},{"ruleId":"219","severity":1,"message":"220","line":37,"column":11,"nodeType":"200","messageId":"221","endLine":37,"endColumn":19},{"ruleId":"219","severity":1,"message":"222","line":43,"column":10,"nodeType":"200","messageId":"221","endLine":43,"endColumn":19},{"ruleId":"219","severity":1,"message":"223","line":45,"column":20,"nodeType":"200","messageId":"221","endLine":45,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":79,"column":6,"nodeType":"204","endLine":79,"endColumn":8,"suggestions":"235"},{"ruleId":"206","severity":1,"message":"207","line":83,"column":17,"nodeType":"208","messageId":"209","endLine":83,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":152,"column":15,"nodeType":"208","messageId":"209","endLine":152,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":168,"column":21,"nodeType":"208","messageId":"209","endLine":168,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":203,"column":15,"nodeType":"208","messageId":"209","endLine":203,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":203,"column":42,"nodeType":"208","messageId":"209","endLine":203,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":207,"column":21,"nodeType":"208","messageId":"209","endLine":207,"endColumn":23},{"ruleId":"206","severity":1,"message":"225","line":207,"column":48,"nodeType":"208","messageId":"209","endLine":207,"endColumn":50},{"ruleId":"206","severity":1,"message":"207","line":309,"column":36,"nodeType":"208","messageId":"209","endLine":309,"endColumn":38},{"ruleId":"211","severity":1,"message":"212","line":329,"column":17,"nodeType":"213","messageId":"214","endLine":329,"endColumn":24},{"ruleId":"219","severity":1,"message":"226","line":344,"column":10,"nodeType":"200","messageId":"221","endLine":344,"endColumn":21},{"ruleId":"202","severity":1,"message":"227","line":51,"column":8,"nodeType":"204","endLine":51,"endColumn":10,"suggestions":"236"},{"ruleId":"206","severity":1,"message":"207","line":55,"column":19,"nodeType":"208","messageId":"209","endLine":55,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":87,"column":21,"nodeType":"208","messageId":"209","endLine":87,"endColumn":23},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"@typescript-eslint/no-redeclare","'Companie' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array.","ArrayExpression",["239"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["240"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","@typescript-eslint/no-unused-vars","'Validate' is defined but never used.","unusedVar","'companies' is assigned a value but never used.","'setValidate' is assigned a value but never used.",["241"],"Expected '!==' and instead saw '!='.","'usePrevious' is defined but never used.","React Hook useEffect has missing dependencies: 'isLoading' and 'loadAdmins'. Either include them or remove the dependency array.",["242"],["237"],["238"],"'handleLogin' is defined but never used.","Nested block is redundant.","redundantNestedBlock",["243"],["244"],["245"],"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"246","fix":"248"},{"desc":"246","fix":"249"},{"desc":"250","fix":"251"},{"desc":"246","fix":"252"},{"desc":"246","fix":"253"},{"desc":"250","fix":"254"},"Update the dependencies array to be: [isLoading]",{"range":"255","text":"256"},{"range":"257","text":"256"},{"range":"258","text":"256"},"Update the dependencies array to be: [isLoading, loadAdmins]",{"range":"259","text":"260"},{"range":"261","text":"256"},{"range":"262","text":"256"},{"range":"263","text":"260"},[742,744],"[isLoading]",[1560,1562],[2123,2125],[1488,1490],"[isLoading, loadAdmins]",[1560,1562],[2123,2125],[1488,1490]]