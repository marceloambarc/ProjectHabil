[{"C:\\Users\\Habil\\ProjectHabil\\web\\src\\routes.tsx":"1","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Landing.tsx":"2","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\ControlMap.tsx":"3","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Moderators.tsx":"4","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Forgot.tsx":"5","C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\Sidebar.tsx":"6","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx":"7","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx":"8","C:\\Users\\Habil\\ProjectHabil\\web\\src\\App.tsx":"9","C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Client.tsx":"10"},{"size":1300,"mtime":1619608457742,"results":"11","hashOfConfig":"12"},{"size":2555,"mtime":1619616540329,"results":"13","hashOfConfig":"12"},{"size":6838,"mtime":1619619136577,"results":"14","hashOfConfig":"12"},{"size":7839,"mtime":1619619227598,"results":"15","hashOfConfig":"12"},{"size":4910,"mtime":1619619211027,"results":"16","hashOfConfig":"12"},{"size":1984,"mtime":1619617345268,"results":"17","hashOfConfig":"12"},{"size":9236,"mtime":1619619179626,"results":"18","hashOfConfig":"12"},{"size":11635,"mtime":1619619235019,"results":"19","hashOfConfig":"12"},{"size":164,"mtime":1619608457429,"results":"20","hashOfConfig":"12"},{"size":4047,"mtime":1619608457726,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fn2346",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Habil\\ProjectHabil\\web\\src\\routes.tsx",[],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Landing.tsx",["45","46"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\ControlMap.tsx",["47"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Moderators.tsx",["48","49","50"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Forgot.tsx",["51","52","53","54","55","56"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\components\\Sidebar.tsx",["57","58"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Companies.tsx",["59","60","61","62","63","64","65","66","67"],"import React, { useState, useEffect } from 'react';\r\nimport { FiAlertOctagon, FiCheck, FiCheckCircle, \r\nFiAlertCircle, FiXCircle, FiBook } from 'react-icons/fi';\r\nimport Modal from 'react-modal';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/companies_buttons.css';\r\nimport '../../styles/pages/table.css';\r\nimport { getRoles } from '@testing-library/dom';\r\n\r\ninterface Company {\r\n  id: number;\r\n  business: string;\r\n  cnpj: string;\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  address: string;\r\n  district: string;\r\n  city: string;\r\n  uf: string;\r\n  password: string;\r\n  image: string;\r\n  keywords: string;\r\n  is_active: string;\r\n}\r\n\r\nModal.setAppElement('#root')\r\n\r\n//SORT POR ÚLTIMAS CADASTRADAS\r\nfunction Products(){\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active, setActive] = useState('0');\r\n  const [base] = useState('data:image/png;base64');\r\n  const [userToken, setUserToken] = useState('retrieve from localStorage');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [role, setRole] = useState('');\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [viewImage, setViewImage] = useState('');\r\n  const [viewName, setViewName] = useState('');\r\n\r\n  //----CARREGAMENTO DE DADOS E LOADING INICIAL DE TELA ----///\r\n  async function getRoles(){\r\n    api.get('admin/tk',{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(res => {\r\n      setRole(res.data.role);\r\n    }).catch(err => {\r\n      setRole('guest');\r\n    });\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(!isLoading) return;\r\n\r\n    api.get('companies/all').then(response => {\r\n\r\n      //Realocar Resposta para UseState\r\n      setCompanies(response.data);\r\n\r\n      //Realocar Token\r\n      const getUserToken = localStorage.getItem('userToken');\r\n      setUserToken(`${getUserToken}`);\r\n\r\n      getRoles();\r\n\r\n      //Finalizar Carregamento\r\n      setIsLoading(false);\r\n\r\n    }).catch(err => {\r\n      alert('Ops! Tivemos um Erro.');\r\n    })\r\n  }, []);\r\n\r\n  function openModal({company}:{company:Company}) {\r\n    setIsOpen(true);\r\n    setViewImage(`${company.image}`);\r\n    setViewName(`${company.name}`);\r\n  }\r\n\r\n  function closeModal(){\r\n    setIsOpen(false);\r\n    setViewImage('');\r\n    setViewName('');\r\n  }\r\n\r\n  //----RENDERIZAR TÍTULO DA TABELA\r\n  function renderTitle(){\r\n    if(active == '0'){\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Inativas</h1>\r\n      );\r\n    }else if(active == '1'){\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Ativas</h1>  \r\n      );\r\n    }else{\r\n      return(\r\n        <h1 style={{fontSize:'22px'}}>Empresas Canceladas</h1>\r\n      );\r\n    }\r\n  }\r\n\r\n  //----(PENDENTE) EXPAND IMAGE---//\r\n  async function handleExpandImage({company}:{company:Company}){\r\n    openModal({company});\r\n  }\r\n\r\n  //-----VIEWS------//\r\n  async function handleViewInactive(){\r\n    setActive('0')\r\n  }\r\n\r\n  async function handleViewActive(){\r\n    setActive('1')\r\n  }\r\n\r\n  async function handleViewCanceled(){\r\n    setActive('2')\r\n  }\r\n\r\n  //---MANIPULAR EMPRESAS (INSERIR CARREGAMENTO VISUAL)---//\r\n  async function handleInactive({company}:{company:Company}){\r\n    api.put(`companies/${company.id}`,{\r\n      // 0 === Empresa INATIVA\r\n      is_active: 0,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleCanceled({company}:{company:Company}){\r\n    api.delete(`companies/${company.id}`,{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleActive({company}:{company:Company}){\r\n    api.put(`companies/${company.id}`,{\r\n      // 1 === Empresa ATIVA\r\n      is_active: 1,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('companies/all').then(response => {\r\n        setCompanies(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  // RENDERIZAR BOTOES NA TABELA ATIVAS(1) - INATIVAS(0) - CANCELADAS(2)\r\n  function renderButton({company}:{company:Company}){\r\n    if(active == \"0\"){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({company})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active == \"1\"){\r\n      return (\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({company})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({company})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  // TABELA EM COMPONENTE\r\n  function renderTable(){\r\n    if(isLoading){\r\n      return (\r\n        <div>\r\n          <h1>CARREGANDO...</h1>\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <table id=\"companies\">\r\n        <tbody>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Empresa</th>\r\n          <th>Ramo</th>\r\n          <th>Palavras-Chaves</th>\r\n          <th>cnpj</th>\r\n          <th>Telefone</th>\r\n          <th>Email</th>\r\n          <th>Endereço</th>\r\n          <th>Bairro</th>\r\n          <th>Cidade</th>\r\n          <th>UF</th>\r\n          <th>Foto</th>\r\n          <th className=\"noWrap td\">Comandos</th>\r\n        </tr>\r\n\r\n        {companies.map(company => {\r\n          // ACTIVE MANIPULADO NO USESTATE()\r\n          if(company.is_active == active){\r\n            return(\r\n                <tr key={company.id}>\r\n                <td>{company.id}</td>\r\n                <td>{company.name}</td>\r\n                <td>{company.business}</td>\r\n                <td>{company.keywords}</td>\r\n                <td>{company.cnpj}</td>\r\n                <td>{company.phone}</td>\r\n                <td>{company.email}</td>\r\n                <td>{company.address}</td>\r\n                <td>{company.district}</td>\r\n                <td>{company.city}</td>\r\n                <td>{company.uf}</td>\r\n                <td onClick={() => handleExpandImage({company})}><img src={base + ',' + company.image} style={{width: '100%', cursor: 'pointer'}} className=\"landingImg\" alt=\"CompreMaisAki\" /></td>\r\n                <td>\r\n                  {renderButton({company})}\r\n                </td>\r\n              </tr>\r\n            );\r\n          }else{\r\n            return;\r\n          }\r\n        })}\r\n        </tbody>\r\n      </table>\r\n      );\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar role={role} />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1 style={{fontSize:'22px'}}>Administração de Empresas</h1>\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Canceladas</label>\r\n              <button onClick={() => handleViewCanceled()} id=\"button\">\r\n                <FiXCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n          <Modal\r\n            isOpen={modalIsOpen}\r\n            onRequestClose={closeModal}\r\n            className=\"Modal\"\r\n            contentLabel=\"Example Modal\"\r\n            overlayClassName=\"Overlay\"\r\n          >\r\n            <h2>Empresa {viewName}</h2>\r\n            <img src={base + ',' + viewImage} style={{width: '100%'}} />\r\n            <div>\r\n              <button className=\"modalButton\" onClick={closeModal}>FECHAR</button>\r\n            </div>\r\n          </Modal>\r\n          {renderTitle()}\r\n          {renderTable()}\r\n\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;",["68","69"],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\private\\Products.tsx",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90"],"import React, { useState, useEffect } from 'react';\r\nimport { FiDollarSign, FiLayers, FiBookOpen, \r\nFiArrowDownCircle, FiAlertOctagon, FiCheck, \r\nFiCheckCircle, FiAlertCircle, FiBook } from 'react-icons/fi';\r\nimport Modal from 'react-modal';\r\n\r\nimport Sidebar from '../../components/Sidebar'\r\nimport api from '../../services/api';\r\n\r\nimport '../../styles/pages/controlmap.css';\r\nimport '../../styles/pages/card.css';\r\nimport '../../styles/pages/card-columns.css';\r\nimport { getRoles } from '@testing-library/dom';\r\n\r\n{/* \r\n  --- TO DO LIST\r\n  Modificar o \"id\" da empresa para Nome 'string'\r\n  Ordenar com os botos os produtos\r\n\r\n  Sort de visualizacao dos produtos\r\n*/}\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  description: string;\r\n  date: string;\r\n  company_id: number;\r\n  image: string;\r\n  validade: string;\r\n  discount: string;\r\n  is_active: string;\r\n}\r\n\r\ninterface Company {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface Validate {\r\n  test: any\r\n}\r\n\r\nfunction Products(){\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [active, setActive] = useState('0');\r\n  const [validate, setValidate] = useState('');\r\n  const [base] = useState('data:image/png;base64');\r\n  const [userToken, setUserToken] = useState('retrieve from localStorage');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [role, setRole] = useState('');\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [viewImage, setViewImage] = useState('');\r\n  const [viewName, setViewName] = useState('');\r\n\r\n  //----CARREGAMENTO DE DADOS E LOADING INICIAL DE TELA ----///\r\n  async function getRoles(){\r\n    api.get('admin/tk',{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(res => {\r\n      setRole(res.data.role);\r\n    }).catch(err => {\r\n      setRole('guest');\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isLoading) return;\r\n\r\n    //Carregamento de empresas\r\n    api.get('products/all').then(products => {\r\n\r\n      //Realocar Resposta para UseState\r\n      setProducts(products.data);\r\n\r\n      //Carregar empresas para nomeclatura na coluna \"EMPRESA\"\r\n      api.get('companies/all').then(companies => {\r\n        setCompanies(companies.data)\r\n      }).catch(err => {\r\n        alert('Ops! Tivemos um erro.');\r\n      });\r\n\r\n      //Realocar Token\r\n      const getUserToken = localStorage.getItem('userToken');\r\n      setUserToken(`${getUserToken}`);\r\n\r\n      getRoles();\r\n\r\n      //Finalizar Carregamento\r\n      setIsLoading(false);\r\n    }).catch(err => {\r\n      alert(\"Ops! Tivemos um erro\");\r\n    })\r\n  }, []);\r\n\r\n  function openModal({product}:{product:Product}) {\r\n    setIsOpen(true);\r\n    setViewImage(`${product.image}`);\r\n    setViewName(`${product.name}`);\r\n  }\r\n\r\n  function closeModal(){\r\n    setIsOpen(false);\r\n    setViewImage('');\r\n    setViewName('');\r\n  }\r\n\r\n    //----RENDERIZAR TÍTULO DA TABELA\r\n    function renderTitle(){\r\n      if(active == '0'){\r\n        return(\r\n          <h1 style={{fontSize:'22px'}}>Promoções Inativas</h1>\r\n        )\r\n      }else{\r\n        return(\r\n          <h1 style={{fontSize:'22px'}}>Promoções Ativas</h1>  \r\n        )\r\n      }\r\n    }\r\n\r\n   //----(PENDENT)EXPAND IMAGE---//\r\n   async function handleExpandImage({product}:{product:Product}){\r\n    openModal({product});\r\n  }\r\n\r\n  //---CANCEL/ACTIVE/INACTIVE BUTTON FUNCTIONS---//\r\n  async function handleCanceled({product}:{product:Product}){\r\n    api.delete(`products/${product.id}`,{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products/all').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleActive({product}:{product:Product}){\r\n    api.put(`products/${product.id}`,{\r\n      is_active: 1,\r\n      validate: validate\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(res => {\r\n      api.get('products/all').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  async function handleInactive({product}:{product:Product}){\r\n    api.put(`products/${product.id}`,{\r\n      is_active: 0,\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products/all').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    });\r\n  }\r\n\r\n  //----VIEWS----///\r\n  async function handleViewInactive(){\r\n    setActive('0')\r\n  }\r\n\r\n  async function handleViewActive(){\r\n    setActive('1')\r\n  }\r\n\r\n  // RENDERIZAR BOTOES NA TABELA ATIVAS(1) - INATIVAS(0) - NAO POSSUI CANCELADAS\r\n  function renderButton({product}:{product:Product}){\r\n    if(active == '0'){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({product})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n              \r\n          <div className=\"button-col\">\r\n            <button className=\"aprove\" onClick={() => handleActive({product})}>\r\n              <FiCheck size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(active == '1'){\r\n      return(\r\n        <div className=\"button-row\">\r\n          <div className=\"button-col\">\r\n            <button className=\"cancel\" onClick={() => handleCanceled({product})}>\r\n              <FiAlertOctagon size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n              \r\n          <div className=\"button-col\">\r\n            <button className=\"inactive\" onClick={() => handleInactive({product})}>\r\n              <FiBook size=\"13\" color=\"#FFF\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  async function handleSetValidate(product:Product, event:string){\r\n    api.put(`products/${product.id}`,{\r\n      validade: event\r\n    },{\r\n      headers: {'Authorization': 'Bearer '+userToken}\r\n    }).then(() => {\r\n      api.get('products/all').then(response => {\r\n        setProducts(response.data);\r\n      });\r\n    }).catch(err => {\r\n      alert('Tivemos um erro, entre em contato com o Suporte');\r\n    })\r\n  }\r\n\r\n    // RENDERIZAR INPUT DE DATA INVÁLIDOS - RETORNAR VALOR DA DATA PARA VÁLIDOS \r\n  function renderValidate({product}:{product:Product}){\r\n    if(active == '0' && product.validade == \"\"){\r\n      return (\r\n        <input type=\"date\" value={validate} onChange={event => handleSetValidate(product, event.target.value)} />\r\n      );\r\n    }else if(active == '0' && product.validade != \"\"){\r\n      return (\r\n        <input type=\"date\" value={product.validade} min={Date.now()} onChange={event => handleSetValidate(product, event.target.value)} />\r\n      );\r\n    }else{\r\n      return (\r\n        <p>{product.validade}</p>\r\n      );\r\n    }\r\n  }\r\n\r\n  //-----(PENDENT)SORT-----//\r\n  //async function handleViewPerDesc(){\r\n  //  alert('DESC');\r\n  //}\r\n\r\n  //async function handleViewPerCompany(){\r\n  //  alert('Company');\r\n  //}\r\n\r\n  //async function handleViewAlpha(){\r\n  //  alert('AZ');\r\n  //}\r\n\r\n  //async function handleViewPerPrice(){\r\n  // alert('Price');\r\n  //}\r\n\r\n  return(\r\n    <div id=\"page-control-map\">\r\n      <Sidebar role={role} />\r\n      <main>\r\n        <div className=\"control-map\">\r\n\r\n          <h1 style={{fontSize:'22px'}}>Novas Promoções Cadastradas</h1>\r\n\r\n          {/*<div className=\"companies-button-wrapper\">\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Últimas</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiLayers size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Empresas</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiBookOpen size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">A-Z</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiArrowDownCircle size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Preço</label>\r\n              <button onClick={() => {}} id=\"button\">\r\n                <FiDollarSign size=\"26\" />\r\n              </button>\r\n            </div>\r\n\r\n          </div>*/}\r\n\r\n          <div className=\"companies-button-wrapper\">\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Ativas</label>\r\n              <button onClick={() => handleViewActive()} id=\"button\">\r\n                <FiCheckCircle size=\"26\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"companies-button\">\r\n              <label htmlFor=\"about\">Inativas</label>\r\n              <button onClick={() => handleViewInactive()} id=\"button\">\r\n                <FiAlertCircle size=\"26\" color=\"#FFF\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"table-container\">\r\n            <Modal\r\n              isOpen={modalIsOpen}\r\n              onRequestClose={closeModal}\r\n              className=\"Modal\"\r\n              contentLabel=\"Example Modal\"\r\n              overlayClassName=\"Overlay\"\r\n            >\r\n              <h2>Promoção {viewName}</h2>\r\n              <img src={base + ',' + viewImage} style={{width: '100%'}} />\r\n              <div>\r\n                <button className=\"modalButton\" onClick={closeModal}>FECHAR</button>\r\n              </div>\r\n            </Modal>\r\n            {renderTitle()}\r\n           <table id=\"companies\">\r\n            <tbody>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Produto</th>\r\n              <th>Preco</th>\r\n              <th>Descricao</th>\r\n              <th>Data</th>\r\n              <th>Empresa</th>\r\n              <th>Validade</th>\r\n              <th>Desconto</th>\r\n              <th>Imagem</th>\r\n              <th className=\"noWrap\">Comandos</th>\r\n            </tr>\r\n\r\n            {products.map(product => {\r\n              if(product.is_active == active){\r\n                return(\r\n                    <tr key={product.id}>\r\n                    <td>{product.id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>R$ {product.price}</td>\r\n                    <td>{product.description}</td>\r\n                    <td>{product.date}</td>\r\n                    <td>{product.company_id}</td>\r\n                    <td>\r\n                      {renderValidate({product})}\r\n                    </td>\r\n                    <td>{product.discount} %</td>\r\n                    <td onClick={() => handleExpandImage({product})}><img src={base + ',' + product.image} style={{width: '30%', cursor: 'pointer'}} className=\"landingImg\" alt=\"CompreMaisAki\" /></td>\r\n                    <td>\r\n                      {renderButton({product})}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }else{\r\n                return;\r\n              }\r\n            })}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n        \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n\r\nfunction usePrevious(validate: string) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n","C:\\Users\\Habil\\ProjectHabil\\web\\src\\App.tsx",[],"C:\\Users\\Habil\\ProjectHabil\\web\\src\\pages\\Client.tsx",[],{"ruleId":"91","severity":1,"message":"92","line":18,"column":9,"nodeType":"93","messageId":"94","endLine":18,"endColumn":22},{"ruleId":"91","severity":1,"message":"95","line":19,"column":9,"nodeType":"93","messageId":"94","endLine":19,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":50,"column":5,"nodeType":"98","endLine":50,"endColumn":7,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":61,"column":8,"nodeType":"98","endLine":61,"endColumn":10,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":65,"column":19,"nodeType":"104","messageId":"105","endLine":65,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":122,"column":21,"nodeType":"104","messageId":"105","endLine":122,"endColumn":23},{"ruleId":"91","severity":1,"message":"106","line":14,"column":10,"nodeType":"93","messageId":"94","endLine":14,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":75,"column":6,"nodeType":"98","endLine":75,"endColumn":8,"suggestions":"107"},{"ruleId":"91","severity":1,"message":"108","line":82,"column":11,"nodeType":"93","messageId":"94","endLine":82,"endColumn":32},{"ruleId":"102","severity":1,"message":"103","line":147,"column":32,"nodeType":"104","messageId":"105","endLine":147,"endColumn":34},{"ruleId":"102","severity":1,"message":"103","line":147,"column":68,"nodeType":"104","messageId":"105","endLine":147,"endColumn":70},{"ruleId":"109","severity":1,"message":"110","line":160,"column":13,"nodeType":"111","messageId":"112","endLine":160,"endColumn":20},{"ruleId":"91","severity":1,"message":"113","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"114","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"106","line":12,"column":10,"nodeType":"93","messageId":"94","endLine":12,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":77,"column":6,"nodeType":"98","endLine":77,"endColumn":8,"suggestions":"115"},{"ruleId":"102","severity":1,"message":"103","line":93,"column":15,"nodeType":"104","messageId":"105","endLine":93,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":97,"column":21,"nodeType":"104","messageId":"105","endLine":97,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":171,"column":15,"nodeType":"104","messageId":"105","endLine":171,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":187,"column":21,"nodeType":"104","messageId":"105","endLine":187,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":236,"column":32,"nodeType":"104","messageId":"105","endLine":236,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":257,"column":13,"nodeType":"111","messageId":"112","endLine":257,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":308,"column":13,"nodeType":"118","endLine":308,"endColumn":73},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"91","severity":1,"message":"123","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":22},{"ruleId":"91","severity":1,"message":"124","line":2,"column":24,"nodeType":"93","messageId":"94","endLine":2,"endColumn":32},{"ruleId":"91","severity":1,"message":"125","line":2,"column":34,"nodeType":"93","messageId":"94","endLine":2,"endColumn":44},{"ruleId":"91","severity":1,"message":"126","line":3,"column":1,"nodeType":"93","messageId":"94","endLine":3,"endColumn":18},{"ruleId":"91","severity":1,"message":"106","line":13,"column":10,"nodeType":"93","messageId":"94","endLine":13,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":15,"column":1,"nodeType":"129","messageId":"130","endLine":21,"endColumn":4},{"ruleId":"91","severity":1,"message":"131","line":41,"column":11,"nodeType":"93","messageId":"94","endLine":41,"endColumn":19},{"ruleId":"91","severity":1,"message":"132","line":47,"column":10,"nodeType":"93","messageId":"94","endLine":47,"endColumn":19},{"ruleId":"91","severity":1,"message":"133","line":49,"column":20,"nodeType":"93","messageId":"94","endLine":49,"endColumn":31},{"ruleId":"96","severity":1,"message":"97","line":97,"column":6,"nodeType":"98","endLine":97,"endColumn":8,"suggestions":"134"},{"ruleId":"102","severity":1,"message":"103","line":113,"column":17,"nodeType":"104","messageId":"105","endLine":113,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":182,"column":15,"nodeType":"104","messageId":"105","endLine":182,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":198,"column":21,"nodeType":"104","messageId":"105","endLine":198,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":233,"column":15,"nodeType":"104","messageId":"105","endLine":233,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":233,"column":42,"nodeType":"104","messageId":"105","endLine":233,"endColumn":44},{"ruleId":"102","severity":1,"message":"103","line":237,"column":21,"nodeType":"104","messageId":"105","endLine":237,"endColumn":23},{"ruleId":"102","severity":1,"message":"135","line":237,"column":48,"nodeType":"104","messageId":"105","endLine":237,"endColumn":50},{"ruleId":"116","severity":1,"message":"117","line":330,"column":15,"nodeType":"118","endLine":330,"endColumn":75},{"ruleId":"102","severity":1,"message":"103","line":352,"column":36,"nodeType":"104","messageId":"105","endLine":352,"endColumn":38},{"ruleId":"109","severity":1,"message":"110","line":372,"column":17,"nodeType":"111","messageId":"112","endLine":372,"endColumn":24},{"ruleId":"91","severity":1,"message":"136","line":387,"column":10,"nodeType":"93","messageId":"94","endLine":387,"endColumn":21},"@typescript-eslint/no-unused-vars","'tokenUsername' is assigned a value but never used.","Identifier","unusedVar","'tokenPassword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRoles' and 'isLoading'. Either include them or remove the dependency array.","ArrayExpression",["137"],"React Hook useEffect has missing dependencies: 'getRoles', 'isLoading', and 'loadAdmins'. Either include them or remove the dependency array.",["138"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getRoles' is defined but never used.",["139"],"'activateResetPassword' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useState' is defined but never used.","'useEffect' is defined but never used.",["140"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"'FiDollarSign' is defined but never used.","'FiLayers' is defined but never used.","'FiBookOpen' is defined but never used.","'FiArrowDownCircle' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Validate' is defined but never used.","'companies' is assigned a value but never used.","'setValidate' is assigned a value but never used.",["143"],"Expected '!==' and instead saw '!='.","'usePrevious' is defined but never used.",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"144","fix":"148"},{"desc":"144","fix":"149"},"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"150"},"Update the dependencies array to be: [getRoles, isLoading]",{"range":"151","text":"152"},"Update the dependencies array to be: [getRoles, isLoading, loadAdmins]",{"range":"153","text":"154"},{"range":"155","text":"152"},{"range":"156","text":"152"},{"range":"157","text":"152"},[1533,1535],"[getRoles, isLoading]",[1777,1779],"[getRoles, isLoading, loadAdmins]",[1925,1927],[2102,2104],[2634,2636]]